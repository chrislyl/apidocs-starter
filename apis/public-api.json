{
  "info": {
    "title": "QIMA Public API",
    "description": "QIMA Public API",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Authentication"
    },
    {
      "name": "File"
    },
    {
      "name": "Supplier"
    },
    {
      "name": "Parameter"
    },
    {
      "name": "Report"
    },
    {
      "name": "Audit"
    },
    {
      "name": "Inspection"
    },
    {
      "name": "Lab Testing"
    }
  ],
  "paths": {
    "/auth/v2/token": {
      "post": {
        "summary": "Get token",
        "x-apifox-folder": "Authentication",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Fill ai-api-access-token, Referer in the http header. Referer should keep unchanged at any time",
        "operationId": "getAPIToken",
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "name": "refresh",
            "in": "query",
            "description": "get customer profile from cache or not",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LoginBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authorized token, token refresh key, token expire unix timestamp, customer/employee profile are returned",
            "schema": {
              "$ref": "#/definitions/ApiCallResult"
            }
          },
          "400": {
            "description": "Invalid expire time format or Must be within 30 days",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          },
          "401": {
            "description": "The Username and Password don't match.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          },
          "403": {
            "description": "AI API call token not present or invalid for login or wrong user type",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99480785-run",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "summary": "Refresh token",
        "x-apifox-folder": "Authentication",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Fill refresh key to ai-api-refresh-key in the http header, and ai-api-access-token, Authorization, Referer are also needed in the http header. Http body can be empty",
        "operationId": "refreshAPIToken",
        "tags": [
          "Authentication"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "New authorized token, token refresh key, token expire unix timestamp are returned",
            "schema": {
              "$ref": "#/definitions/TokenSession"
            }
          },
          "500": {
            "description": "Refresh key invalid or Bad token to refresh, can't get claim or public api access token found but not correct",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99480786-run",
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "Remove token",
        "x-apifox-folder": "Authentication",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "Fill ai-api-access-token, Authorization, Referer in the http header.",
        "operationId": "removeAPIToken",
        "tags": [
          "Authentication"
        ],
        "parameters": [
          {
            "name": "device-id, fill a valid device-id when previously token was tighted with a device",
            "in": "query",
            "description": "device id",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Empty message mean token removed successfully",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "You are not authorized to remove this token",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          },
          "500": {
            "description": "Error happened when removing token",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99480787-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/user/{userId}/doc-type/{docType}/source/{sourceId}/file": {
      "post": {
        "summary": "Upload file",
        "x-apifox-folder": "File",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "uploadFile",
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "QIMA client user id",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "docType",
            "in": "path",
            "description": "The document type of this attachment, like ORDER_ATT, which means order attachment",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "sourceId",
            "in": "path",
            "description": "The resource id that the attachment will be linked to, like inspection product id, order id etc.Use comma to concat multiple source ids, like id_1,id_2,id_3",
            "required": true,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Uploaded file meta info is returned",
            "schema": {
              "$ref": "#/definitions/ApiFileMetaBean"
            }
          },
          "400": {
            "description": "SourceId can't be blank",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          },
          "500": {
            "description": "Error message returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99480980-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/user/{userId}/file/{fileId}": {
      "get": {
        "summary": "Download inspection or audit pdf report",
        "x-apifox-folder": "File",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "return a binary stream",
        "operationId": "getFile",
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "QIMA client user id",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "PDF report file id, for inspection, get it from /user/{userId}/report/{productId}/pdf-info, for audit, get it from /user/{userId}/audit-report/{orderId}/pdf-info",
            "required": true,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "File binary stream will be returned",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Error message returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99480983-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/order/v2/{orderId}/factory": {
      "put": {
        "summary": "Confirm inspection date and factory",
        "x-apifox-folder": "Supplier",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "updateFactoryConfirm",
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "Inspection order id",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "password",
            "in": "query",
            "description": "Get the confirmation password from \"Get inspection order\" API, do the following steps to when sending the password: <br> Step 1: MD5 <br> Step 2: Sha1 on the output of step 1 ",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "inspectionDate",
            "in": "query",
            "description": "format like 2016-12-01",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "containerReadyDate",
            "in": "query",
            "description": "format like 2016-12-01",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OrderFactoryBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/InspectionBookingBean"
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481077-run",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/user/v2/{userId}/supplier": {
      "post": {
        "summary": "Create a new supplier",
        "x-apifox-folder": "Supplier",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "If supplier name or identification already exist for a  customer, new creation is NOT allowed",
        "operationId": "createSupplier",
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "QIMA client user id",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SupplierDetailBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "New suppliers created successful",
            "schema": {
              "$ref": "#/definitions/SupplierDetailBean"
            }
          },
          "412": {
            "description": "Supplier name or identification already exist for a  customer",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          },
          "500": {
            "description": "Failed to create new supplier",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481086-run",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/user/v2/{userId}/supplier/{supplierId}": {
      "get": {
        "summary": "Get a supplier's detail info",
        "x-apifox-folder": "Supplier",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "getSupplierDetailInfoById",
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "QIMA client user id",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "Supplier id",
            "required": true,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier's detail returned",
            "schema": {
              "$ref": "#/definitions/SupplierDetailBean"
            }
          },
          "404": {
            "description": "Can't find related supplier by given supplier id",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481087-run",
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "summary": "Update a supplier",
        "x-apifox-folder": "Supplier",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "updateUserSupplierDetailInfo",
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "QIMA client user id",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "supplierId",
            "in": "path",
            "description": "Supplier id",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SupplierDetailBean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "True when update is successful",
            "schema": {
              "type": "boolean"
            }
          },
          "500": {
            "description": "Failed to update given supplier",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481088-run",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/user/v2/{userId}/suppliers": {
      "get": {
        "summary": "Search suppliers",
        "x-apifox-folder": "Supplier",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "getSuppliersByUserId",
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "QIMA client user id",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "type",
            "in": "query",
            "description": "Supplier type",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Matched suppliers returned",
            "schema": {
              "$ref": "#/definitions/SupplierSearchResultBean"
            }
          },
          "404": {
            "description": "Error message returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481089-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/user/v2/{userId}/suppliers/{supplierIds}": {
      "delete": {
        "summary": "Delete a supplier",
        "x-apifox-folder": "Supplier",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "deleteSuppliers",
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "QIMA client user id",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "supplierIds",
            "in": "path",
            "description": "Separate by comma when need to delete multiple suppliers, values like '123,232,334'",
            "required": true,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Return 200 when all given suppliers deleted",
            "schema": {
              "type": "boolean"
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481090-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/parameter/v2/continent/{continentId}/countries": {
      "get": {
        "summary": "Get countries by continent id",
        "x-apifox-folder": "Parameter",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "getCountriesByContinentId",
        "tags": [
          "Parameter"
        ],
        "parameters": [
          {
            "name": "continentId",
            "in": "path",
            "description": "Continent id, get it from API /parameter/v2/continents",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "refresh",
            "in": "query",
            "description": "Send false when using server cache is fine",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Expected data returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DropdownListOptionBean"
              }
            }
          },
          "500": {
            "description": "Error message returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481125-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/parameter/v2/continents": {
      "get": {
        "summary": "Get continents list",
        "x-apifox-folder": "Parameter",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "getContinents",
        "tags": [
          "Parameter"
        ],
        "parameters": [
          {
            "name": "refresh",
            "in": "query",
            "description": "Send false when using server cache is fine",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Expected data returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DropdownListOptionBean"
              }
            }
          },
          "500": {
            "description": "Error message returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481126-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/parameter/v2/countries": {
      "get": {
        "summary": "Get countries",
        "x-apifox-folder": "Parameter",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "getAllCountries",
        "tags": [
          "Parameter"
        ],
        "parameters": [
          {
            "name": "refresh",
            "in": "query",
            "description": "Send false when using server cache is fine",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Expected data returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DropdownListOptionBean"
              }
            }
          },
          "500": {
            "description": "Error message returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481127-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/parameter/v2/country/{countryId}/cities": {
      "get": {
        "summary": "Get city list by country id",
        "x-apifox-folder": "Parameter",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "getCitiesByCountryId",
        "tags": [
          "Parameter"
        ],
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "description": "Country id, get it from API /parameter/v2/searchCountries, /parameter/v2/countries",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "refresh",
            "in": "query",
            "description": "Send false when using server cache is fine",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Expected data returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DropdownListOptionBean"
              }
            }
          },
          "500": {
            "description": "Error message returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481129-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/parameter/v2/country/{countryId}/provinces": {
      "get": {
        "summary": "Get provinces by country id",
        "x-apifox-folder": "Parameter",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "getProvincesByCountryId",
        "tags": [
          "Parameter"
        ],
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "description": "CountryId",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "refresh",
            "in": "query",
            "description": "Send false when using server cache is fine",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Expected data returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DropdownListOptionBean"
              }
            }
          },
          "500": {
            "description": "Error message returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481130-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/parameter/v2/country/{countryId}/searchCities": {
      "get": {
        "summary": "Search cities from a country by name",
        "x-apifox-folder": "Parameter",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "searchCitiesByNameAndCountryId",
        "tags": [
          "Parameter"
        ],
        "parameters": [
          {
            "name": "countryId",
            "in": "path",
            "description": "Country id, get it from API /parameter/v2/searchCountries, /parameter/v2/countries",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "name",
            "in": "query",
            "description": "City name",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "rows",
            "in": "query",
            "description": "How many rows to return",
            "required": false,
            "type": "integer",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Expected data returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DropdownListOptionBean"
              }
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481131-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/parameter/v2/product-categories": {
      "get": {
        "summary": "Get product category",
        "x-apifox-folder": "Parameter",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "getProductCategoryList",
        "tags": [
          "Parameter"
        ],
        "parameters": [
          {
            "name": "refresh",
            "in": "query",
            "description": "Send false when using server cache is fine",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Expected data returned",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "404": {
            "description": "Error message returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481135-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/parameter/v2/product-families": {
      "get": {
        "summary": "Get product family",
        "x-apifox-folder": "Parameter",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "getProductFamilyList",
        "tags": [
          "Parameter"
        ],
        "parameters": [
          {
            "name": "refresh",
            "in": "query",
            "description": "Send false when using server cache is fine",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Expected data returned",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "404": {
            "description": "Error message returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481136-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/parameter/v2/product-tree": {
      "get": {
        "summary": "Get product category, family and type",
        "x-apifox-folder": "Parameter",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "getProductTree",
        "tags": [
          "Parameter"
        ],
        "parameters": [
          {
            "name": "refresh",
            "in": "query",
            "description": "Send false when using server cache is fine",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Expected data returned",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ProductTreeDtoBean"
              },
              "x-apifox-orders": [],
              "properties": {},
              "x-apifox-ignore-properties": []
            }
          },
          "404": {
            "description": "Error message returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481137-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/parameter/v2/product-types": {
      "get": {
        "summary": "Get product type",
        "x-apifox-folder": "Parameter",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "getProductTypeList",
        "tags": [
          "Parameter"
        ],
        "parameters": [
          {
            "name": "refresh",
            "in": "query",
            "description": "Send false when using server cache is fine",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Expected data returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SysProductTypeBean"
              }
            }
          },
          "404": {
            "description": "Error message returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481138-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/parameter/v2/province/{provinceId}/searchCities": {
      "get": {
        "summary": "Search cities from a province by name",
        "x-apifox-folder": "Parameter",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "searchCitiesByNameAndProvinceId",
        "tags": [
          "Parameter"
        ],
        "parameters": [
          {
            "name": "provinceId",
            "in": "path",
            "description": "Province id, get it from /parameter/v2/country/{countryId}/provinces",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "name",
            "in": "query",
            "description": "City name",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "rows",
            "in": "query",
            "description": "How many rows to return",
            "required": false,
            "type": "integer",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Expected data returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DropdownListOptionBean"
              }
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481141-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/parameter/v2/sample-levels": {
      "get": {
        "summary": "Get the lists of available sample levels",
        "x-apifox-folder": "Parameter",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "getSampleLevels",
        "tags": [
          "Parameter"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "The type of sample level to return, default is all of them",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "refresh",
            "in": "query",
            "description": "Whether to refresh the cache",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Expected data returned",
            "schema": {
              "$ref": "#/definitions/SampleLevelsBean"
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481145-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/parameter/v2/searchCountries": {
      "get": {
        "summary": "Search countries by name",
        "x-apifox-folder": "Parameter",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "searchCountriesByName",
        "tags": [
          "Parameter"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Country name",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "rows",
            "in": "query",
            "description": "How many rows to return",
            "required": false,
            "type": "integer",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Expected data returned",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DropdownListOptionBean"
              }
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481149-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/user/{userId}/report/{productId}/pdf-info": {
      "get": {
        "summary": "Get inspection PDF report file info",
        "x-apifox-folder": "Report",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "getPSIReportPdfInfo",
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "QIMA client user id",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "productId",
            "in": "path",
            "description": "Inspection product id, please refer to product id returned in /user/{userId}/reports",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "isSingleFile",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "File meta info will be returned",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ApiFileMetaBean"
              },
              "x-apifox-orders": [],
              "properties": {},
              "x-apifox-ignore-properties": []
            }
          },
          "500": {
            "description": "Error message returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481224-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/user/{userId}/reports": {
      "get": {
        "summary": "Search inspection reports",
        "x-apifox-folder": "Report",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "getPSIReports",
        "tags": [
          "Report"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "start",
            "in": "query",
            "description": "Search period start date(format like 2016-12-01)",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "end",
            "in": "query",
            "description": "Search period end date(format like 2016-12-01)",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Search keyword matches to Order number or PO number",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to show",
            "required": false,
            "type": "integer",
            "x-example": ""
          },
          {
            "name": "page-size",
            "in": "query",
            "description": "Page size in search results",
            "required": false,
            "type": "integer",
            "x-example": ""
          },
          {
            "name": "all",
            "in": "query",
            "description": "Send 'true' to fetch all sub-master account list under super-master account",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "SortField should be one of return columns name",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "sortType",
            "in": "query",
            "description": "DESC or ASC",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "companyRole",
            "in": "query",
            "description": "If to search report for broker",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "prodDivision",
            "in": "query",
            "description": "Division name that this product belongs to in client's company",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "advSearchUseProdName",
            "in": "query",
            "description": "Advanced Search Use Product Name",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "advSearchUseProdRef",
            "in": "query",
            "description": "Advanced Search Use Product Reference",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "startSendDate",
            "in": "query",
            "description": "Search period every time to send and resend report date(format like 2016-12-01)",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "endSendDate",
            "in": "query",
            "description": "Search period every time to send and resend report date(format like 2016-12-01)",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "Search reports by specific status, it support multi status and split by comma",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Inspection reports search results will be returned",
            "schema": {
              "$ref": "#/definitions/ClientReportSearchBean"
            }
          },
          "500": {
            "description": "Error message returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481227-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/user/{userId}/audit-reports": {
      "get": {
        "summary": "Get User's Audit Reports List",
        "x-apifox-folder": "Audit",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "getAuditReports",
        "tags": [
          "Audit"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "start",
            "in": "query",
            "description": "Search period start date(format like 2016-12-01)",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "end",
            "in": "query",
            "description": "Search period end date(format like 2016-12-01)",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Keyword to search",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to show",
            "required": false,
            "type": "integer",
            "x-example": ""
          },
          {
            "name": "page-size",
            "in": "query",
            "description": "Page size in search results",
            "required": false,
            "type": "integer",
            "x-example": ""
          },
          {
            "name": "all",
            "in": "query",
            "description": "Send 'true' to fetch all sub-master account list under super-master account",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "SortField should be one of return columns name",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "sortType",
            "in": "query",
            "description": "DESC or ASC",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "startSendDate",
            "in": "query",
            "description": "Search period every time to send and resend report date(format like 2016-12-01)",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "endSendDate",
            "in": "query",
            "description": "Search period every time to send and resend report date(format like 2016-12-01)",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PageBean"
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481287-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/v1.0/audit": {
      "post": {
        "summary": "Create Audit",
        "x-apifox-folder": "Audit",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "createOrderWithoutDraft",
        "tags": [
          "Audit"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AuditOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create audit order successfully",
            "schema": {
              "$ref": "#/definitions/ApiAuditBookingBean"
            }
          },
          "202": {
            "description": "Factory not confirmed",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          },
          "400": {
            "description": "ServiceDate and ShipDate cannot be null, and announceType should be legal",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          },
          "500": {
            "description": "Error happened when create audit order",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481289-run",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/user/{userId}/audit-reports/{reportId}" : {
      "get" : {
        "tags" : [ "Audit" ],
        "summary" : "Get User's Audit Report Detail",
        "description" : "",
        "operationId" : "getUserAuditReport",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "reportId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EricssonReportBean"
            }
          }
        }
      }
    },
    "/user/{userId}/inspection-order/{orderId}": {
      "get": {
        "summary": "Get booking details of an inspection",
        "x-apifox-folder": "Inspection",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "getOrderDetail",
        "tags": [
          "Inspection"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "QIMA client user id",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "Inspection order id",
            "required": true,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiInspectionOrderBean"
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481333-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/user/{userId}/inspection-orders": {
      "get": {
        "summary": "Search inspection booking orders",
        "x-apifox-folder": "Inspection",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "searchOrders",
        "tags": [
          "Inspection"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "QIMA client user id",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "service-type",
            "in": "query",
            "description": "must be one of psi, clc, pm, dupro, ipc, sp or comma delimited",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "start",
            "in": "query",
            "description": "must be in format like 2016-12-01",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "end",
            "in": "query",
            "description": "must be in format like 2016-12-01",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "must be a single status value or comma delimited <br />for open orders: 10,15,17,20,21,22,23,25,30,40,50,56 <br />for completed orders:60",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "all",
            "in": "query",
            "description": "supply value as true to fetch all sub-master account orders under super-master account",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "sortField",
            "in": "query",
            "description": "Which field used to sort the results, example values orderId,status,serviceType,refNumber,clientReference,supplierName,bookingDate,serviceDate,confirmBySupplier",
            "required": false,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "sortType",
            "in": "query",
            "description": "DESC or ASC",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Inspection bookings search results will be returned",
            "schema": {
              "$ref": "#/definitions/PageBean"
            }
          },
          "500": {
            "description": "Error message returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481339-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/user/{userId}/inspection/{orderId}": {
      "delete": {
        "summary": "Cancel a inspection booking",
        "x-apifox-folder": "Inspection",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "cancelOrder",
        "tags": [
          "Inspection"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "QIMA client user id",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "Inspection order id",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "reason",
            "in": "query",
            "description": "Cancel reason",
            "required": true,
            "type": "string",
            "x-example": ""
          },
          {
            "name": "reason_options",
            "in": "query",
            "description": "Cancel reason detail",
            "required": false,
            "type": "string",
            "x-example": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Inspection booking cancelled",
            "schema": {
              "type": "boolean"
            }
          },
          "500": {
            "description": "Error message and support team's email returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481341-run",
        "produces": [
          "application/json"
        ]
      }
    },
    "/v1.0/inspection": {
      "post": {
        "summary": "Create Inspection",
        "x-apifox-folder": "Inspection",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "createOrder",
        "tags": [
          "Inspection"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/InspectionOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "empty message if everything is working",
            "schema": {
              "$ref": "#/definitions/ApiInspectionBookingBean"
            }
          },
          "202": {
            "description": "Order created but factory not confirmed",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          },
          "400": {
            "description": "received data couldn't pass validation, specific field will be given",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          },
          "409": {
            "description": "Duplicate booking request found and this request is ignored.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          },
          "500": {
            "description": "failed to create the booking and error is returned",
            "schema": {
              "type": "object",
              "properties": {},
              "x-apifox-orders": [],
              "x-apifox-ignore-properties": []
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481343-run",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/v1.0/async-inspection" : {
      "post" : {
        "tags" : [ "Inspection" ],
        "summary" : "Create Inspection Asynchronously",
        "description" : "",
        "operationId" : "createOrderAsync",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/InspectionOrder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successfully receive your request, you can call /booking-result API to check booking result",
            "schema" : {
              "$ref" : "#/definitions/ApiCallResult"
            }
          }
        }
      }
    },
    "/booking-result/{requestId}" : {
      "get" : {
        "tags" : [ "Booking" ],
        "summary" : "Search async booking result by request id",
        "description" : "",
        "operationId" : "searchBookingResultByRequestId",
        "parameters" : [ {
          "name" : "requestId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AsyncBookingResultDTO"
            }
          }
        }
      }
    },
    "/v1.1/lt/booking/order/confirm": {
      "post": {
        "summary": "Confirm LT Booking order",
        "x-apifox-folder": "Lab Testing",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "confirmBookingOrder",
        "tags": [
          "Lab Testing"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ConfirmOrderDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OrderDTO"
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481464-run",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/v1.1/lt/inquiry/order/confirm": {
      "post": {
        "summary": "Confirm LT Inquiry order",
        "x-apifox-folder": "Lab Testing",
        "x-apifox-status": "released",
        "deprecated": false,
        "description": "",
        "operationId": "confirmInquiryOrder",
        "tags": [
          "Lab Testing"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ConfirmInquiryDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OrderDTO"
            }
          }
        },
        "x-run-in-apifox": "https://www.apifox.cn/web/project/3090069/apis/api-99481465-run",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "swagger": "2.0",
  "host": "qa-web-02.qima.com",
  "schemes": [
    "https"
  ],
  "basePath": "/",
  "definitions": {
    "ConfirmInquiryDTO": {
      "type": "object",
      "required": [
        "programId"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "draftId": {
          "type": "integer",
          "format": "int64"
        },
        "programId": {
          "type": "string",
          "description": "QIMA test program id",
          "example": [
            "9c7bd008-92a8-4d87-9r47-cc88ea695f56"
          ]
        },
        "productImage": {
          "$ref": "#/definitions/ConfirmAttachmentDTO"
        },
        "productName": {
          "type": "string",
          "description": "Order product description",
          "example": [
            "product description"
          ]
        },
        "productReferenceNo": {
          "type": "string",
          "description": "Referred product no.",
          "example": [
            "245425"
          ]
        },
        "productCategoryId": {
          "type": "string",
          "description": "Referred product's category Id.",
          "example": [
            "frabric"
          ]
        },
        "productTypeId": {
          "type": "string",
          "description": "Referred product's tye Id.",
          "example": [
            "product type id"
          ]
        },
        "ageGrade": {
          "type": "string",
          "description": "Requested age grade",
          "example": [
            "Children over 1 1/2 to 5"
          ]
        },
        "materials": {
          "type": "string",
          "description": "Material referred list",
          "example": [
            "Fabric, Plastic, Metal"
          ]
        },
        "specificationDocuments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfirmAttachmentDTO"
          }
        },
        "originCountryIds": {
          "type": "array",
          "description": "Origin country id list",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "destinationCountryIds": {
          "type": "array",
          "description": "Destination country id list",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "inquiryMessage": {
          "type": "string",
          "description": "Inquiry message"
        },
        "clientPONo": {
          "type": "string",
          "description": "Client purchase order no.",
          "example": [
            "FUN6114IN"
          ]
        },
        "orderSupplierId": {
          "type": "string",
          "description": "SampleInfo's QIMA supplier id",
          "example": [
            "00335B231B929389C12570C30055EEA4"
          ]
        },
        "productDivision": {
          "type": "string",
          "description": "Product division",
          "example": [
            "Sales"
          ]
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "draftId",
        "programId",
        "productImage",
        "productName",
        "productReferenceNo",
        "productCategoryId",
        "productTypeId",
        "ageGrade",
        "materials",
        "specificationDocuments",
        "originCountryIds",
        "destinationCountryIds",
        "inquiryMessage",
        "clientPONo",
        "orderSupplierId",
        "productDivision"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ConfirmAttachmentDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "description": "Attachment label",
          "example": [
            "Client Document for Review"
          ]
        },
        "fileName": {
          "type": "string",
          "description": "Attachment file name",
          "example": [
            "Sample photo.jpg"
          ]
        },
        "fileHashcode": {
          "type": "string",
          "description": "QIMA file id",
          "example": [
            "90d0e246-51bd-43ec-b8c3-95b34179f038"
          ]
        },
        "fileSize": {
          "type": "integer",
          "format": "int32",
          "description": "Attachment file size,unit:k",
          "example": [
            "10.3"
          ]
        },
        "description": {
          "type": "string",
          "description": "Description of attachment file",
          "example": [
            "This is a client document"
          ]
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "label",
        "fileName",
        "fileHashcode",
        "fileSize",
        "description"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OrderDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "draftId": {
          "type": "integer",
          "format": "int64"
        },
        "orderImageId": {
          "type": "string"
        },
        "reportNo": {
          "type": "string"
        },
        "masterReportNo": {
          "type": "string"
        },
        "linkedSubReportNo": {
          "type": "string"
        },
        "labOrderno": {
          "type": "string"
        },
        "prevLabOrderno": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "office": {
          "type": "object",
          "properties": {}
        },
        "clientPONo": {
          "type": "string"
        },
        "sampleArrivedDate": {
          "type": "string",
          "format": "date-time"
        },
        "sampleReceivedDate": {
          "type": "string",
          "format": "date-time"
        },
        "assortment": {
          "type": "string"
        },
        "client": {
          "type": "object",
          "properties": {}
        },
        "invoicee": {
          "type": "object",
          "properties": {}
        },
        "submissionType": {
          "type": "string"
        },
        "turnaroundTime": {
          "type": "string"
        },
        "supplier": {
          "type": "object",
          "properties": {}
        },
        "program": {
          "type": "object",
          "properties": {}
        },
        "sic": {
          "type": "string"
        },
        "affiliateId": {
          "type": "string"
        },
        "cs": {
          "type": "string"
        },
        "pm": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "orderType": {
          "type": "string"
        },
        "orderStatus": {
          "type": "string"
        },
        "statusCode": {
          "type": "string"
        },
        "bookingStatusCode": {
          "type": "integer",
          "format": "int32"
        },
        "onHoldDate": {
          "type": "string",
          "format": "date-time"
        },
        "offHoldDate": {
          "type": "string",
          "format": "date-time"
        },
        "testStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "cancelDate": {
          "type": "string",
          "format": "date-time"
        },
        "cancelReason": {
          "type": "string"
        },
        "cancelDescription": {
          "type": "string"
        },
        "cancelRemark": {
          "type": "string"
        },
        "clientResultDueDate": {
          "type": "string",
          "format": "date-time"
        },
        "reportDueDate": {
          "type": "string",
          "format": "date-time"
        },
        "quotationDueDate": {
          "type": "string",
          "format": "date-time"
        },
        "tsnIssueDate": {
          "type": "string",
          "format": "date-time"
        },
        "holdMemoIssuedDate": {
          "type": "string",
          "format": "date-time"
        },
        "reportIssuedDate": {
          "type": "string",
          "format": "date-time"
        },
        "firstReportDueDate": {
          "type": "string",
          "format": "date-time"
        },
        "reportIssuedRevisedDate": {
          "type": "string",
          "format": "date-time"
        },
        "reportRevisionIssueDate": {
          "type": "string",
          "format": "date-time"
        },
        "reportExpiryDate": {
          "type": "string",
          "format": "date-time"
        },
        "reportQuickFormIssuedDate": {
          "type": "string",
          "format": "date-time"
        },
        "manualTatCalculation": {
          "type": "integer",
          "format": "int32"
        },
        "labResultDueDate": {
          "type": "string",
          "format": "date-time"
        },
        "quotationIssuedDate": {
          "type": "string",
          "format": "date-time"
        },
        "invoiceIssueDate": {
          "type": "string",
          "format": "date-time"
        },
        "reportRecipients": {
          "type": "string"
        },
        "reportEmailCC": {
          "type": "string"
        },
        "payeeName": {
          "type": "string"
        },
        "reportDeliveryPref": {
          "type": "string"
        },
        "mailingDate": {
          "type": "string",
          "format": "date-time"
        },
        "reportPreparedBy": {
          "type": "string"
        },
        "reportSentBy": {
          "type": "string"
        },
        "inquiryAbout": {
          "type": "string"
        },
        "inquiryMessage": {
          "type": "string"
        },
        "repliedMessage": {
          "type": "string"
        },
        "replied": {
          "type": "string"
        },
        "inquiryDate": {
          "type": "string",
          "format": "date-time"
        },
        "inquiryReplyDate": {
          "type": "string",
          "format": "date-time"
        },
        "inquiryAnswerDate": {
          "type": "string",
          "format": "date-time"
        },
        "inquiryLogoutDate": {
          "type": "string",
          "format": "date-time"
        },
        "inquiryQuotationDate": {
          "type": "string",
          "format": "date-time"
        },
        "inquiryOrderDate": {
          "type": "string",
          "format": "date-time"
        },
        "availableTurnaroundTime": {
          "type": "string"
        },
        "overallRating": {
          "type": "string"
        },
        "holdDescription": {
          "type": "string"
        },
        "holdRemark": {
          "type": "string"
        },
        "invoiceContact": {
          "type": "string"
        },
        "isRush": {
          "type": "string"
        },
        "surcharge": {
          "type": "number",
          "format": "double"
        },
        "billTo": {
          "type": "string"
        },
        "quotationTo": {
          "type": "string"
        },
        "quotationContact": {
          "type": "string"
        },
        "clientStatus": {
          "type": "string"
        },
        "invoiceEmailCC": {
          "type": "string"
        },
        "quotationEmailCC": {
          "type": "string"
        },
        "styleInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        },
        "sampleCollection": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        },
        "testAssignments": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        },
        "creditDebits": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        },
        "quotations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        },
        "sampleInfo": {
          "type": "object",
          "properties": {}
        },
        "specialInstruction": {
          "type": "object",
          "properties": {}
        },
        "customFields": {
          "type": "object",
          "properties": {}
        },
        "bookingDate": {
          "type": "string",
          "format": "date-time"
        },
        "testingLocation": {
          "type": "object",
          "properties": {}
        },
        "serviceType": {
          "type": "string"
        },
        "currentStation": {
          "type": "string"
        },
        "holdInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        },
        "warehouseInfo": {
          "type": "object",
          "properties": {}
        },
        "productClassificationInfo": {
          "type": "object",
          "properties": {}
        },
        "invoices": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        },
        "accreditationList": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "object",
            "properties": {}
          }
        },
        "subcontractLabList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubcontractLabDTO"
          }
        },
        "orderTestAssignmentLabCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sicUser": {
          "$ref": "#/definitions/UserDTO"
        },
        "clientUser": {
          "$ref": "#/definitions/ClientUserDTO"
        },
        "businessUnit": {
          "type": "string"
        },
        "reportPayeeName": {
          "type": "string"
        },
        "trackingNo": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "supplierId": {
          "type": "string"
        },
        "orderSupplierId": {
          "type": "string"
        },
        "orderSupplierName": {
          "type": "string"
        },
        "invoiceeId": {
          "type": "string"
        },
        "isNoInvoice": {
          "type": "string"
        },
        "invoicingRemark": {
          "type": "string"
        },
        "subReportDescription": {
          "type": "string"
        },
        "pendingSample": {
          "type": "boolean"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "draftId",
        "orderImageId",
        "reportNo",
        "masterReportNo",
        "linkedSubReportNo",
        "labOrderno",
        "prevLabOrderno",
        "description",
        "office",
        "clientPONo",
        "sampleArrivedDate",
        "sampleReceivedDate",
        "assortment",
        "client",
        "invoicee",
        "submissionType",
        "turnaroundTime",
        "supplier",
        "program",
        "sic",
        "affiliateId",
        "cs",
        "pm",
        "contact",
        "orderType",
        "orderStatus",
        "statusCode",
        "bookingStatusCode",
        "onHoldDate",
        "offHoldDate",
        "testStartDate",
        "cancelDate",
        "cancelReason",
        "cancelDescription",
        "cancelRemark",
        "clientResultDueDate",
        "reportDueDate",
        "quotationDueDate",
        "tsnIssueDate",
        "holdMemoIssuedDate",
        "reportIssuedDate",
        "firstReportDueDate",
        "reportIssuedRevisedDate",
        "reportRevisionIssueDate",
        "reportExpiryDate",
        "reportQuickFormIssuedDate",
        "manualTatCalculation",
        "labResultDueDate",
        "quotationIssuedDate",
        "invoiceIssueDate",
        "reportRecipients",
        "reportEmailCC",
        "payeeName",
        "reportDeliveryPref",
        "mailingDate",
        "reportPreparedBy",
        "reportSentBy",
        "inquiryAbout",
        "inquiryMessage",
        "repliedMessage",
        "replied",
        "inquiryDate",
        "inquiryReplyDate",
        "inquiryAnswerDate",
        "inquiryLogoutDate",
        "inquiryQuotationDate",
        "inquiryOrderDate",
        "availableTurnaroundTime",
        "overallRating",
        "holdDescription",
        "holdRemark",
        "invoiceContact",
        "isRush",
        "surcharge",
        "billTo",
        "quotationTo",
        "quotationContact",
        "clientStatus",
        "invoiceEmailCC",
        "quotationEmailCC",
        "styleInfo",
        "sampleCollection",
        "attachments",
        "testAssignments",
        "creditDebits",
        "quotations",
        "sampleInfo",
        "specialInstruction",
        "customFields",
        "bookingDate",
        "testingLocation",
        "serviceType",
        "currentStation",
        "holdInfo",
        "warehouseInfo",
        "productClassificationInfo",
        "invoices",
        "accreditationList",
        "subcontractLabList",
        "orderTestAssignmentLabCodes",
        "sicUser",
        "clientUser",
        "businessUnit",
        "reportPayeeName",
        "trackingNo",
        "clientId",
        "supplierId",
        "orderSupplierId",
        "orderSupplierName",
        "invoiceeId",
        "isNoInvoice",
        "invoicingRemark",
        "subReportDescription",
        "pendingSample"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ClientUserDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "personalEmail": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "firstName",
        "lastName",
        "login",
        "personalEmail"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "UserDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "firstName",
        "lastName",
        "email"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "SubcontractLabDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/OrderDTO"
        },
        "lab": {
          "$ref": "#/definitions/LabDTO"
        },
        "quotationNo": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "double"
        },
        "issueDate": {
          "type": "string",
          "format": "date-time"
        },
        "testStartDate": {
          "type": "string",
          "format": "date-time"
        },
        "reportDueDate": {
          "type": "string",
          "format": "date-time"
        },
        "reportReceivedDate": {
          "type": "string",
          "format": "date-time"
        },
        "reportNo": {
          "type": "string"
        },
        "invoiceNo": {
          "type": "string"
        },
        "invoiceAmount": {
          "type": "number",
          "format": "double"
        },
        "invoiceDate": {
          "type": "string",
          "format": "date-time"
        },
        "subContractComments": {
          "type": "string"
        },
        "subContractLabTests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubContractLabTestDTO"
          }
        },
        "quotationCurrency": {
          "type": "string"
        },
        "invoiceCurrency": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "order",
        "lab",
        "quotationNo",
        "amount",
        "issueDate",
        "testStartDate",
        "reportDueDate",
        "reportReceivedDate",
        "reportNo",
        "invoiceNo",
        "invoiceAmount",
        "invoiceDate",
        "subContractComments",
        "subContractLabTests",
        "quotationCurrency",
        "invoiceCurrency"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "SubContractLabTestDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "test": {
          "$ref": "#/definitions/TestDTO"
        },
        "freeOfCharge": {
          "type": "integer",
          "format": "int32"
        },
        "noOfActualTest": {
          "type": "integer",
          "format": "int32"
        },
        "pricePlan": {
          "type": "number",
          "format": "double"
        },
        "currency": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "test",
        "freeOfCharge",
        "noOfActualTest",
        "pricePlan",
        "currency"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "TestDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "standardNo": {
          "type": "string"
        },
        "standardName": {
          "type": "string"
        },
        "testItem": {
          "type": "string"
        },
        "testCategory": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/PlanetDTO"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestAttachmentDTO"
          }
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time"
        },
        "expiryDate": {
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "type": "number",
          "format": "double"
        },
        "description": {
          "type": "string"
        },
        "regularPrice": {
          "type": "string"
        },
        "translatedInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TranslatedInfoDTO"
          }
        },
        "pricingDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestPricingDetailDTO"
          }
        },
        "testTags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagDTO"
          }
        },
        "region": {
          "$ref": "#/definitions/RegionDTO"
        },
        "classification": {
          "type": "string"
        },
        "sampleSize": {
          "type": "string"
        },
        "sampleMinSize": {
          "type": "string"
        },
        "specialCharge": {
          "type": "string"
        },
        "acaTest": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "name",
        "standardNo",
        "standardName",
        "testItem",
        "testCategory",
        "country",
        "attachments",
        "effectiveDate",
        "expiryDate",
        "version",
        "description",
        "regularPrice",
        "translatedInfo",
        "pricingDetails",
        "testTags",
        "region",
        "classification",
        "sampleSize",
        "sampleMinSize",
        "specialCharge",
        "acaTest"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "RegionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "module": {
          "type": "string"
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegionCountriesDTO"
          }
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "name",
        "module",
        "countries"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "RegionCountriesDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/PlanetDTO"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "country"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "TagDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tagLevel": {
          "type": "string"
        },
        "isRoot": {
          "type": "string"
        },
        "productCategory": {
          "$ref": "#/definitions/ProductCategoryDTO"
        },
        "parent": {
          "$ref": "#/definitions/TagDTO"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagDTO"
          }
        },
        "tagDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagTestMapDTO"
          }
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "name",
        "description",
        "tagLevel",
        "isRoot",
        "productCategory",
        "parent",
        "children",
        "tagDetails"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "TagTestMapDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "test": {
          "$ref": "#/definitions/TestDTO"
        },
        "optional": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "test",
        "optional",
        "country"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductCategoryDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "industryList": {
          "type": "string"
        },
        "categoryList": {
          "type": "string"
        },
        "checklistManager": {
          "type": "string"
        },
        "categoryType": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "name",
        "industryList",
        "categoryList",
        "checklistManager",
        "categoryType",
        "comments"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "TestPricingDetailDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "test": {
          "$ref": "#/definitions/TestDTO"
        },
        "lab": {
          "$ref": "#/definitions/LabDTO"
        },
        "office": {
          "type": "object",
          "properties": {}
        },
        "region": {
          "$ref": "#/definitions/RegionDTO"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "currency": {
          "type": "string"
        },
        "isNetPrice": {
          "type": "string"
        },
        "isDefaultLab": {
          "type": "string"
        },
        "tatRegular": {
          "type": "integer",
          "format": "int32"
        },
        "tatExpress": {
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "test",
        "lab",
        "office",
        "region",
        "price",
        "currency",
        "isNetPrice",
        "isDefaultLab",
        "tatRegular",
        "tatExpress",
        "version"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "TranslatedInfoDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "standardName": {
          "type": "string"
        },
        "testItem": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "langCode": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "standardName",
        "testItem",
        "description",
        "name",
        "langCode"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "TestAttachmentDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "fileHashcode": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "label",
        "fileName",
        "fileSize",
        "description",
        "fileHashcode"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "PlanetDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "placeType": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "name",
        "placeType"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "LabDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "zipCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "contactNo": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "contactName": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/PlanetDTO"
        },
        "region": {
          "$ref": "#/definitions/PlanetDTO"
        },
        "isSubContractLab": {
          "type": "boolean"
        },
        "workingDays": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LabWorkingDayDTO"
          }
        },
        "holidays": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LabHolidayDTO"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LabAttachmentDTO"
          }
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "code",
        "zipCode",
        "name",
        "address",
        "contactNo",
        "emailAddress",
        "comments",
        "contactName",
        "country",
        "region",
        "isSubContractLab",
        "workingDays",
        "holidays",
        "attachments"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "LabAttachmentDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "hashcode": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "category": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "name",
        "hashcode",
        "description",
        "category"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "LabHolidayDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "holidayDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "name",
        "holidayDate"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "LabWorkingDayDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "day": {
          "type": "integer",
          "format": "int32"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "day"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "LoginBean": {
      "type": "object",
      "required": [
        "account",
        "password",
        "userType"
      ],
      "properties": {
        "account": {
          "type": "string",
          "description": "Username/Login"
        },
        "password": {
          "type": "string",
          "description": "Password in MD5 format"
        },
        "userType": {
          "type": "string",
          "description": "Account type, can be client or employee",
          "enum": [
            "client",
            "employee"
          ]
        },
        "tokenExpire": {
          "type": "string",
          "description": "Seconds that the token expected to expire, numbers only, must < 2592000(30 days)",
          "example": [
            "3600"
          ]
        }
      },
      "x-apifox-orders": [
        "account",
        "password",
        "userType",
        "tokenExpire"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "AccreditationDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "labs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LabDTO"
          }
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "name",
        "labs"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "InvoiceDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/OrderDTO"
        },
        "currency": {
          "type": "string"
        },
        "discount": {
          "type": "number",
          "format": "double"
        },
        "invoiceNo": {
          "type": "string"
        },
        "invoiceIssuedDate": {
          "type": "string",
          "format": "date-time"
        },
        "turnoverCalcDate": {
          "type": "string",
          "format": "date-time"
        },
        "adjustmentAmount": {
          "type": "number",
          "format": "double"
        },
        "adjustmentDescription": {
          "type": "string"
        },
        "totalQuotationAmount": {
          "type": "number",
          "format": "double"
        },
        "totalActualAmount": {
          "type": "number",
          "format": "double"
        },
        "invoiceStatus": {
          "type": "string"
        },
        "conversionRate": {
          "type": "number",
          "format": "double"
        },
        "billTo": {
          "type": "string"
        },
        "invoiceCompanyName": {
          "type": "string"
        },
        "isGroupInvoice": {
          "type": "string"
        },
        "isPaid": {
          "type": "string"
        },
        "surchargeDescription": {
          "type": "string"
        },
        "surcharge": {
          "type": "number",
          "format": "double"
        },
        "surchargeAmount": {
          "type": "number",
          "format": "double"
        },
        "amountPaid": {
          "type": "number",
          "format": "double"
        },
        "amountRemaining": {
          "type": "number",
          "format": "double"
        },
        "turnAroundTime": {
          "$ref": "#/definitions/TurnAroundTimeDTO"
        },
        "tests": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/InvoiceTestDTO"
          }
        },
        "reports": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/InvoiceReportDTO"
          }
        },
        "vat": {
          "type": "number",
          "format": "double"
        },
        "vatAmount": {
          "type": "number",
          "format": "double"
        },
        "creditDebitDTO": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        },
        "isCredited": {
          "type": "string"
        },
        "creditDebitNo": {
          "type": "string"
        },
        "minimumReportChargeAdjAmount": {
          "type": "number",
          "format": "double"
        },
        "groupInvoiceId": {
          "type": "string"
        },
        "specialChargeAmount": {
          "type": "number",
          "format": "double"
        },
        "clientPONo": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "order",
        "currency",
        "discount",
        "invoiceNo",
        "invoiceIssuedDate",
        "turnoverCalcDate",
        "adjustmentAmount",
        "adjustmentDescription",
        "totalQuotationAmount",
        "totalActualAmount",
        "invoiceStatus",
        "conversionRate",
        "billTo",
        "invoiceCompanyName",
        "isGroupInvoice",
        "isPaid",
        "surchargeDescription",
        "surcharge",
        "surchargeAmount",
        "amountPaid",
        "amountRemaining",
        "turnAroundTime",
        "tests",
        "reports",
        "vat",
        "vatAmount",
        "creditDebitDTO",
        "isCredited",
        "creditDebitNo",
        "minimumReportChargeAdjAmount",
        "groupInvoiceId",
        "specialChargeAmount",
        "clientPONo"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "InvoiceReportDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer",
          "format": "int64"
        },
        "fileHashCode": {
          "type": "string"
        },
        "fileType": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "fileName",
        "fileSize",
        "fileHashCode",
        "fileType"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "InvoiceTestDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "testAssign": {
          "type": "object",
          "properties": {}
        },
        "name": {
          "type": "string"
        },
        "freeOfCharge": {
          "type": "integer",
          "format": "int32"
        },
        "pricePlan": {
          "type": "number",
          "format": "double"
        },
        "comments": {
          "type": "string"
        },
        "isNetPrice": {
          "type": "string"
        },
        "discount": {
          "type": "number",
          "format": "double"
        },
        "specialCharge": {
          "type": "boolean"
        },
        "testAmount": {
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "noOfActualTest": {
          "type": "integer",
          "format": "int32"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "testAssign",
        "name",
        "freeOfCharge",
        "pricePlan",
        "comments",
        "isNetPrice",
        "discount",
        "specialCharge",
        "testAmount",
        "quantity",
        "noOfActualTest"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "TurnAroundTimeDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tat": {
          "type": "integer",
          "format": "int32"
        },
        "surcharge": {
          "type": "number",
          "format": "double"
        },
        "isExpService": {
          "type": "string"
        },
        "internalDue": {
          "type": "integer",
          "format": "int32"
        },
        "office": {
          "type": "object",
          "properties": {}
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "name",
        "tat",
        "surcharge",
        "isExpService",
        "internalDue",
        "office"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductClassificationInfoDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "recommendedAgeGrade": {
          "type": "string"
        },
        "testedAgeGrade": {
          "type": "string"
        },
        "productCategoryId": {
          "type": "string"
        },
        "productFamilyId": {
          "type": "string"
        },
        "productTypeId": {
          "type": "string"
        },
        "productClassification": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductClassificationDTO"
          }
        },
        "productNature": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductNatureDTO"
          }
        },
        "eeProductNature": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductNatureDTO"
          }
        },
        "classificationList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "natureList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "eeNatureList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "productCategory": {
          "type": "string"
        },
        "productFamily": {
          "type": "string"
        },
        "productType": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "recommendedAgeGrade",
        "testedAgeGrade",
        "productCategoryId",
        "productFamilyId",
        "productTypeId",
        "productClassification",
        "productNature",
        "eeProductNature",
        "classificationList",
        "natureList",
        "eeNatureList",
        "productCategory",
        "productFamily",
        "productType"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductNatureDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "productClassificationInfo": {
          "type": "object",
          "properties": {}
        },
        "nature": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "productClassificationInfo",
        "nature"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductClassificationDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "productClassificationInfo": {
          "type": "object",
          "properties": {}
        },
        "classification": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "productClassificationInfo",
        "classification"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "WarehouseInfoDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "filingDate": {
          "type": "string",
          "format": "date-time"
        },
        "strFilingDate": {
          "type": "string"
        },
        "filingLocation": {
          "type": "string"
        },
        "warehouseMisc1": {
          "type": "string"
        },
        "warehouseMisc2": {
          "type": "string"
        },
        "history": {
          "$ref": "#/definitions/WarehouseInfoHistoryDTO"
        },
        "pickup": {
          "$ref": "#/definitions/WarehouseInfoPickupDTO"
        },
        "scrap": {
          "$ref": "#/definitions/WarehouseInfoScrapDTO"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "filingDate",
        "strFilingDate",
        "filingLocation",
        "warehouseMisc1",
        "warehouseMisc2",
        "history",
        "pickup",
        "scrap"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "WarehouseInfoScrapDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "sampleLocation": {
          "type": "string"
        },
        "sampleQuantity": {
          "type": "string"
        },
        "units": {
          "type": "string"
        },
        "scrapSampleDescription": {
          "type": "string"
        },
        "sampleDateOfStorage": {
          "type": "string",
          "format": "date-time"
        },
        "scrapActualDate": {
          "type": "string",
          "format": "date-time"
        },
        "scrapDueDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "sampleLocation",
        "sampleQuantity",
        "units",
        "scrapSampleDescription",
        "sampleDateOfStorage",
        "scrapActualDate",
        "scrapDueDate"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "WarehouseInfoPickupDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "pickupNotificationIssued": {
          "type": "string"
        },
        "sampleLocation": {
          "type": "string"
        },
        "sampleQuantity": {
          "type": "string"
        },
        "units": {
          "type": "string"
        },
        "quantityDescription": {
          "type": "string"
        },
        "sampleDateOfStorage": {
          "type": "string",
          "format": "date-time"
        },
        "actualDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "pickupNotificationIssued",
        "sampleLocation",
        "sampleQuantity",
        "units",
        "quantityDescription",
        "sampleDateOfStorage",
        "actualDate"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "WarehouseInfoHistoryDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "sampleLocation": {
          "type": "string"
        },
        "sampleQuantity": {
          "type": "string"
        },
        "units": {
          "type": "string"
        },
        "historySampleDescription": {
          "type": "string"
        },
        "sampleDateOfStorage": {
          "type": "string",
          "format": "date-time"
        },
        "scrapDueDate": {
          "type": "string",
          "format": "date-time"
        },
        "scrapActualDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "sampleLocation",
        "sampleQuantity",
        "units",
        "historySampleDescription",
        "sampleDateOfStorage",
        "scrapDueDate",
        "scrapActualDate"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "HoldInfoDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "holdReason": {
          "$ref": "#/definitions/HoldReasonDTO"
        },
        "description": {
          "type": "string"
        },
        "onHoldDate": {
          "type": "string",
          "format": "date-time"
        },
        "offHoldDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "holdReason",
        "description",
        "onHoldDate",
        "offHoldDate"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "HoldReasonDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "forRetest": {
          "type": "boolean"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "reason",
        "description",
        "remark",
        "category",
        "forRetest"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "CustomFieldDataDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "moduleId": {
          "$ref": "#/definitions/BaseDTO"
        },
        "moduleName": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDTO"
          }
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "moduleId",
        "moduleName",
        "values"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "CustomFieldValueDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "customFieldData": {
          "type": "object",
          "properties": {}
        },
        "customFieldDetail": {
          "$ref": "#/definitions/CustomFieldDetailDTO"
        },
        "value": {
          "type": "string"
        },
        "isRequiredForProgram": {
          "type": "boolean"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "customFieldData",
        "customFieldDetail",
        "value",
        "isRequiredForProgram"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "CustomFieldDetailDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "customField": {
          "$ref": "#/definitions/CustomFieldDTO"
        },
        "typeCode": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "elementName": {
          "type": "string"
        },
        "elementId": {
          "type": "string"
        },
        "isRequired": {
          "type": "boolean"
        },
        "displayOrder": {
          "type": "integer",
          "format": "int32"
        },
        "constraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldConstraintDTO"
          }
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldSelectOptionDTO"
          }
        },
        "sections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldDisplaySectionDTO"
          }
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "customField",
        "typeCode",
        "label",
        "elementName",
        "elementId",
        "isRequired",
        "displayOrder",
        "constraints",
        "options",
        "sections"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "CustomFieldDisplaySectionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "section": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "section"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "CustomFieldSelectOptionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "name",
        "value"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "CustomFieldConstraintDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "name",
        "value"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "CustomFieldDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "moduleId": {
          "type": "object",
          "properties": {}
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldDetailDTO"
          }
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "moduleId",
        "details"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "BaseDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "SpecialInstructionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "reorderRemark": {
          "type": "string"
        },
        "retestRemark": {
          "type": "string"
        },
        "bookingRemark": {
          "type": "string"
        },
        "physicalLabRemark": {
          "type": "string"
        },
        "chemLabRemark": {
          "type": "string"
        },
        "techServiceRemark": {
          "type": "string"
        },
        "reportingRemark": {
          "type": "string"
        },
        "invoicingRemark": {
          "type": "string"
        },
        "additionalSample": {
          "type": "string"
        },
        "tsnRemark": {
          "type": "string"
        },
        "holdMemoRemark": {
          "type": "string"
        },
        "rqfRemark": {
          "type": "string"
        },
        "otherRemarks": {
          "type": "string"
        },
        "textileLabRemarks": {
          "type": "string"
        },
        "opticalLabRemarks": {
          "type": "string"
        },
        "electricalLabRemarks": {
          "type": "string"
        },
        "foodLabRemarks": {
          "type": "string"
        },
        "invRemarkStyleInfo": {
          "type": "string"
        },
        "invRemarkTestAssign": {
          "type": "string"
        },
        "quotRemarkStyleInfo": {
          "type": "string"
        },
        "quotRemarkTestAssign": {
          "type": "string"
        },
        "notificationRemark": {
          "type": "string"
        },
        "reportEmailRemark": {
          "type": "string"
        },
        "lateReportRemark": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "reorderRemark",
        "retestRemark",
        "bookingRemark",
        "physicalLabRemark",
        "chemLabRemark",
        "techServiceRemark",
        "reportingRemark",
        "invoicingRemark",
        "additionalSample",
        "tsnRemark",
        "holdMemoRemark",
        "rqfRemark",
        "otherRemarks",
        "textileLabRemarks",
        "opticalLabRemarks",
        "electricalLabRemarks",
        "foodLabRemarks",
        "invRemarkStyleInfo",
        "invRemarkTestAssign",
        "quotRemarkStyleInfo",
        "quotRemarkTestAssign",
        "notificationRemark",
        "reportEmailRemark",
        "lateReportRemark"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "SampleInfoDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "orderSampleClientPO": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        },
        "manufacturerName": {
          "type": "string"
        },
        "factoryName": {
          "type": "string"
        },
        "manufacturerFactoryName": {
          "type": "string"
        },
        "agencyName": {
          "type": "string"
        },
        "buyerName": {
          "type": "string"
        },
        "shipmentPONo": {
          "type": "string"
        },
        "beginShipDate": {
          "type": "string",
          "format": "date-time"
        },
        "endShipDate": {
          "type": "string",
          "format": "date-time"
        },
        "originCountries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OriginCountryDTO"
          }
        },
        "distributionCountries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DistributionCountryDTO"
          }
        },
        "distributionRegions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DistributionRegionDTO"
          }
        },
        "labeledAgeGrade": {
          "type": "string"
        },
        "requestedAgeGrade": {
          "type": "string"
        },
        "sourceAnsecoNo": {
          "type": "string"
        },
        "prevAnsecoTestReportNo": {
          "type": "string"
        },
        "complementaryRush": {
          "type": "string"
        },
        "internalExpress": {
          "type": "string"
        },
        "sampleStatus": {
          "type": "string"
        },
        "sampleReturnPolicy": {
          "type": "string"
        },
        "productReferenceNo": {
          "type": "string"
        },
        "otherReference": {
          "type": "string"
        },
        "materials": {
          "type": "string"
        },
        "originCountryIds": {
          "type": "string"
        },
        "distributionCountryIds": {
          "type": "string"
        },
        "distributionRegionIds": {
          "type": "string"
        },
        "productDivision": {
          "type": "string"
        },
        "orderSupplierId": {
          "type": "string"
        },
        "customFieldValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDTO"
          }
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "orderSampleClientPO",
        "sku",
        "manufacturerName",
        "factoryName",
        "manufacturerFactoryName",
        "agencyName",
        "buyerName",
        "shipmentPONo",
        "beginShipDate",
        "endShipDate",
        "originCountries",
        "distributionCountries",
        "distributionRegions",
        "labeledAgeGrade",
        "requestedAgeGrade",
        "sourceAnsecoNo",
        "prevAnsecoTestReportNo",
        "complementaryRush",
        "internalExpress",
        "sampleStatus",
        "sampleReturnPolicy",
        "productReferenceNo",
        "otherReference",
        "materials",
        "originCountryIds",
        "distributionCountryIds",
        "distributionRegionIds",
        "productDivision",
        "orderSupplierId",
        "customFieldValues"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "DistributionRegionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "region": {
          "$ref": "#/definitions/PlanetDTO"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "region"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "DistributionCountryDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/PlanetDTO"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "country"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OriginCountryDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/PlanetDTO"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "country"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "QuotationDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/OrderDTO"
        },
        "currency": {
          "type": "string"
        },
        "discount": {
          "type": "number",
          "format": "double"
        },
        "quotationNo": {
          "type": "string"
        },
        "issuedDate": {
          "type": "string",
          "format": "date-time"
        },
        "totalQuotationAmount": {
          "type": "number",
          "format": "double"
        },
        "totalActualAmount": {
          "type": "number",
          "format": "double"
        },
        "quotationStatus": {
          "type": "string"
        },
        "adjustmentAmount": {
          "type": "number",
          "format": "double"
        },
        "adjustmentDescription": {
          "type": "string"
        },
        "clientComments": {
          "type": "string"
        },
        "conversionRate": {
          "type": "number",
          "format": "double"
        },
        "tests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuotationTestDTO"
          }
        },
        "reports": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/QuotationReportDTO"
          }
        },
        "surchargeDescription": {
          "type": "string"
        },
        "surchargePercent": {
          "type": "number",
          "format": "double"
        },
        "surcharge": {
          "type": "number",
          "format": "double"
        },
        "surchargeAmount": {
          "type": "number",
          "format": "double"
        },
        "turnAroundTime": {
          "$ref": "#/definitions/TurnAroundTimeDTO"
        },
        "vat": {
          "type": "number",
          "format": "double"
        },
        "vatAmount": {
          "type": "number",
          "format": "double"
        },
        "minimumReportChargeAdjAmount": {
          "type": "number",
          "format": "double"
        },
        "photoHashCode": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "order",
        "currency",
        "discount",
        "quotationNo",
        "issuedDate",
        "totalQuotationAmount",
        "totalActualAmount",
        "quotationStatus",
        "adjustmentAmount",
        "adjustmentDescription",
        "clientComments",
        "conversionRate",
        "tests",
        "reports",
        "surchargeDescription",
        "surchargePercent",
        "surcharge",
        "surchargeAmount",
        "turnAroundTime",
        "vat",
        "vatAmount",
        "minimumReportChargeAdjAmount",
        "photoHashCode"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "QuotationReportDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer",
          "format": "int64"
        },
        "fileHashCode": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "fileName",
        "fileSize",
        "fileHashCode"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "QuotationTestDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "remark": {
          "type": "string"
        },
        "testAssign": {
          "type": "object",
          "properties": {}
        },
        "name": {
          "type": "string"
        },
        "noOfActualTest": {
          "type": "integer",
          "format": "int32"
        },
        "freeOfCharge": {
          "type": "integer",
          "format": "int32"
        },
        "currency": {
          "type": "string"
        },
        "quotationComment": {
          "type": "string"
        },
        "discount": {
          "type": "number",
          "format": "double"
        },
        "pricePlan": {
          "type": "number",
          "format": "double"
        },
        "isNetPrice": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "remark",
        "testAssign",
        "name",
        "noOfActualTest",
        "freeOfCharge",
        "currency",
        "quotationComment",
        "discount",
        "pricePlan",
        "isNetPrice",
        "comments"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "CreditDebitDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/OrderDTO"
        },
        "currency": {
          "type": "string"
        },
        "creditDebitNo": {
          "type": "string"
        },
        "issuedDate": {
          "type": "string",
          "format": "date-time"
        },
        "totalAmount": {
          "type": "number",
          "format": "double"
        },
        "creditDebitStatus": {
          "type": "string"
        },
        "conversionRate": {
          "type": "number",
          "format": "double"
        },
        "billTo": {
          "type": "string"
        },
        "creditCompanyName": {
          "type": "string"
        },
        "office": {
          "type": "object",
          "properties": {}
        },
        "invoice": {
          "type": "object",
          "properties": {}
        },
        "reports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreditDebitReportDTO"
          }
        },
        "vat": {
          "type": "number",
          "format": "double"
        },
        "vatAmount": {
          "type": "number",
          "format": "double"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "description",
        "type",
        "order",
        "currency",
        "creditDebitNo",
        "issuedDate",
        "totalAmount",
        "creditDebitStatus",
        "conversionRate",
        "billTo",
        "creditCompanyName",
        "office",
        "invoice",
        "reports",
        "vat",
        "vatAmount"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "CreditDebitReportDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer",
          "format": "int64"
        },
        "fileHashCode": {
          "type": "string"
        },
        "fileType": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "fileName",
        "fileSize",
        "fileHashCode",
        "fileType"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "TestAssignmentDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "test": {
          "$ref": "#/definitions/TestDTO"
        },
        "lab": {
          "$ref": "#/definitions/LabDTO"
        },
        "noOfTestQuotation": {
          "type": "integer",
          "format": "int32"
        },
        "freeQuotation": {
          "type": "integer",
          "format": "int32"
        },
        "noOfActualTest": {
          "type": "integer",
          "format": "int32"
        },
        "freeOfCharge": {
          "type": "integer",
          "format": "int32"
        },
        "currency": {
          "type": "string"
        },
        "pricePlan": {
          "type": "number",
          "format": "double"
        },
        "rating": {
          "type": "integer",
          "format": "int32"
        },
        "failureStatement": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "quotationComment": {
          "type": "string"
        },
        "quotationRemark": {
          "type": "string"
        },
        "testCount": {
          "type": "integer",
          "format": "int32"
        },
        "isNetPrice": {
          "type": "string"
        },
        "testAssignRating": {
          "$ref": "#/definitions/RatingDTO"
        },
        "clientStatus": {
          "type": "string"
        },
        "mandatory": {
          "type": "boolean"
        },
        "isSubContract": {
          "type": "boolean"
        },
        "specialCharge": {
          "type": "boolean"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "test",
        "lab",
        "noOfTestQuotation",
        "freeQuotation",
        "noOfActualTest",
        "freeOfCharge",
        "currency",
        "pricePlan",
        "rating",
        "failureStatement",
        "comment",
        "quotationComment",
        "quotationRemark",
        "testCount",
        "isNetPrice",
        "testAssignRating",
        "clientStatus",
        "mandatory",
        "isSubContract",
        "specialCharge"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "RatingDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "code",
        "description"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "AttachmentDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "fileHashcode": {
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/OrderDTO"
        },
        "reportStatus": {
          "type": "string"
        },
        "readStatus": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "label",
        "fileName",
        "fileSize",
        "description",
        "fileHashcode",
        "order",
        "reportStatus",
        "readStatus",
        "orderId"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "SampleCollectionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/OrderDTO"
        },
        "trackingNo": {
          "type": "string"
        },
        "sampleReceived": {
          "type": "string"
        },
        "sampleCollectionMethod": {
          "type": "string"
        },
        "sampleArrivalDate": {
          "type": "string",
          "format": "date-time"
        },
        "sampleReceivedDate": {
          "type": "string",
          "format": "date-time"
        },
        "comments": {
          "type": "string"
        },
        "productPhotoHashCode": {
          "type": "string"
        },
        "productPhotoFileName": {
          "type": "string"
        },
        "productPhotoFileSize": {
          "type": "string"
        },
        "factoryName": {
          "type": "string"
        },
        "chineseName": {
          "type": "string"
        },
        "factoryMainContact": {
          "type": "string"
        },
        "mobileNo": {
          "type": "string"
        },
        "landlineNo": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "courierName": {
          "type": "string"
        },
        "courierTrackingNo": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        },
        "productPhotoAttachmentId": {
          "type": "string"
        },
        "psiOrderId": {
          "type": "string"
        },
        "psiRefNo": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "inspectionDate": {
          "type": "string",
          "format": "date-time"
        },
        "inspRemarks": {
          "type": "string"
        },
        "sampleSize": {
          "type": "string"
        },
        "lab": {
          "$ref": "#/definitions/LabDTO"
        },
        "ltContact": {
          "$ref": "#/definitions/UserDTO"
        },
        "productId": {
          "type": "string"
        },
        "psiOrderUrl": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "order",
        "trackingNo",
        "sampleReceived",
        "sampleCollectionMethod",
        "sampleArrivalDate",
        "sampleReceivedDate",
        "comments",
        "productPhotoHashCode",
        "productPhotoFileName",
        "productPhotoFileSize",
        "factoryName",
        "chineseName",
        "factoryMainContact",
        "mobileNo",
        "landlineNo",
        "email",
        "address",
        "city",
        "postcode",
        "country",
        "courierName",
        "courierTrackingNo",
        "remarks",
        "productPhotoAttachmentId",
        "psiOrderId",
        "psiRefNo",
        "contact",
        "inspectionDate",
        "inspRemarks",
        "sampleSize",
        "lab",
        "ltContact",
        "productId",
        "psiOrderUrl"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "StyleInfoDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "assortment": {
          "type": "string"
        },
        "sampleNo": {
          "type": "string"
        },
        "styleDescription": {
          "type": "string"
        },
        "manufacturerStyleNo": {
          "type": "string"
        },
        "upc": {
          "type": "string"
        },
        "qty": {
          "type": "number",
          "format": "double"
        },
        "units": {
          "type": "string"
        },
        "qtyDescription": {
          "type": "string"
        },
        "photoHashCode": {
          "type": "string"
        },
        "photoFileName": {
          "type": "string"
        },
        "photoFileSize": {
          "type": "integer",
          "format": "int64"
        },
        "photoDescription": {
          "type": "string"
        },
        "photoAttachmentId": {
          "type": "string"
        },
        "customFields": {
          "type": "object",
          "properties": {}
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "assortment",
        "sampleNo",
        "styleDescription",
        "manufacturerStyleNo",
        "upc",
        "qty",
        "units",
        "qtyDescription",
        "photoHashCode",
        "photoFileName",
        "photoFileSize",
        "photoDescription",
        "photoAttachmentId",
        "customFields"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProgramDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "programName": {
          "type": "string"
        },
        "programDescription": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "version": {
          "$ref": "#/definitions/ProgramVersionDTO"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "programName",
        "programDescription",
        "isDefault",
        "version"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProgramVersionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "company": {
          "type": "object",
          "properties": {}
        },
        "bookingOption": {
          "$ref": "#/definitions/ProgramBookingOptionDTO"
        },
        "invoiceOption": {
          "$ref": "#/definitions/ProgramInvoiceOptionDTO"
        },
        "quotationOption": {
          "$ref": "#/definitions/ProgramQuotationOptionDTO"
        },
        "reportOption": {
          "$ref": "#/definitions/ProgramReportOptionDTO"
        },
        "testOption": {
          "$ref": "#/definitions/ProgramTestOptionDTO"
        },
        "miscOption": {
          "$ref": "#/definitions/ProgramMiscOptionDTO"
        },
        "notificationOption": {
          "$ref": "#/definitions/ProgramNotificationOptionDTO"
        },
        "supplierOption": {
          "$ref": "#/definitions/ProgramSupplierOptionDTO"
        },
        "customerServiceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerServiceDTO"
          }
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "program": {
          "type": "object",
          "properties": {}
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "company",
        "bookingOption",
        "invoiceOption",
        "quotationOption",
        "reportOption",
        "testOption",
        "miscOption",
        "notificationOption",
        "supplierOption",
        "customerServiceList",
        "version",
        "program"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "CustomerServiceDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/UserDTO"
        },
        "programVersion": {
          "$ref": "#/definitions/ProgramVersionDTO"
        },
        "office": {
          "type": "object",
          "properties": {}
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "title",
        "user",
        "programVersion",
        "office"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProgramSupplierOptionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "notificationRemarks": {
          "type": "string"
        },
        "quotationRemarks": {
          "type": "string"
        },
        "invoiceRemarks": {
          "type": "string"
        },
        "reportRemarks": {
          "type": "string"
        },
        "testRemarks": {
          "type": "string"
        },
        "otherRemarks": {
          "type": "string"
        },
        "sampleLogin": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "notificationRemarks",
        "quotationRemarks",
        "invoiceRemarks",
        "reportRemarks",
        "testRemarks",
        "otherRemarks",
        "sampleLogin"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProgramNotificationOptionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgramNotificationDTO"
          }
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "notifications"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProgramNotificationDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "notificationType": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "notificationType",
        "remarks"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProgramMiscOptionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "otherRemarks": {
          "type": "string"
        },
        "sampleLogin": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "otherRemarks",
        "sampleLogin"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProgramTestOptionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "turnAroundTime": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        },
        "remarks2": {
          "type": "string"
        },
        "autoRetest": {
          "type": "string"
        },
        "office": {
          "type": "object",
          "properties": {}
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "turnAroundTime",
        "remarks",
        "remarks2",
        "autoRetest",
        "office"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProgramReportOptionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "rating": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        },
        "reportContact": {
          "type": "string"
        },
        "reportDeliveryPreference": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "rating",
        "remarks",
        "reportContact",
        "reportDeliveryPreference"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProgramQuotationOptionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        },
        "quotationContact": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "remarks",
        "quotationContact"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProgramInvoiceOptionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "payFrom": {
          "type": "string"
        },
        "payTo": {
          "type": "string"
        },
        "taxRate": {
          "type": "number",
          "format": "double"
        },
        "bankOfAI": {
          "type": "string"
        },
        "offlinePaymentCharge": {
          "type": "boolean"
        },
        "showPaymentReminder": {
          "type": "boolean"
        },
        "isInvoicingAuto": {
          "type": "boolean"
        },
        "invoicingDate": {
          "type": "boolean"
        },
        "isReinspectionFree": {
          "type": "boolean"
        },
        "invoiceCurrency": {
          "$ref": "#/definitions/CurrencyDTO"
        },
        "onlinePaymentStatus": {
          "type": "string"
        },
        "isBusinessRegAndTaxIdDisplayed": {
          "type": "boolean"
        },
        "remarks": {
          "type": "string"
        },
        "discount": {
          "type": "number",
          "format": "double"
        },
        "invoiceContact": {
          "type": "string"
        },
        "paymentTermDTO": {
          "$ref": "#/definitions/PaymentTermDTO"
        },
        "isPaymentTermOverride": {
          "type": "boolean"
        },
        "overwriteExpServiceSurchargeRate": {
          "type": "boolean"
        },
        "minimumReportCharge": {
          "type": "number",
          "format": "double"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "payFrom",
        "payTo",
        "taxRate",
        "bankOfAI",
        "offlinePaymentCharge",
        "showPaymentReminder",
        "isInvoicingAuto",
        "invoicingDate",
        "isReinspectionFree",
        "invoiceCurrency",
        "onlinePaymentStatus",
        "isBusinessRegAndTaxIdDisplayed",
        "remarks",
        "discount",
        "invoiceContact",
        "paymentTermDTO",
        "isPaymentTermOverride",
        "overwriteExpServiceSurchargeRate",
        "minimumReportCharge"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "PaymentTermDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "paymentTerm": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "paymentTerm",
        "code"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "CurrencyDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "currencyRate": {
          "type": "number",
          "format": "double"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "code",
        "name",
        "comments",
        "currencyRate"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProgramBookingOptionDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "origin": {
          "$ref": "#/definitions/PlanetDTO"
        },
        "destination": {
          "$ref": "#/definitions/PlanetDTO"
        },
        "region": {
          "$ref": "#/definitions/PlanetDTO"
        },
        "formUploadAllowed": {
          "type": "boolean"
        },
        "quotationShown": {
          "type": "boolean"
        },
        "sampleCollectionMethod": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "sampleReturnPolicy": {
          "type": "string"
        },
        "testLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestLocationDTO"
          }
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "origin",
        "destination",
        "region",
        "formUploadAllowed",
        "quotationShown",
        "sampleCollectionMethod",
        "email",
        "sampleReturnPolicy",
        "testLocations"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "TestLocationDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "optnId": {
          "type": "string"
        },
        "officeDTO": {
          "type": "object",
          "properties": {}
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "optnId",
        "officeDTO"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "CompanyDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "companyName": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "bu": {
          "type": "string"
        },
        "sic": {
          "type": "string"
        },
        "givenName": {
          "type": "string"
        },
        "familyName": {
          "type": "string"
        },
        "companyNameCn": {
          "type": "string"
        },
        "companyTypeId": {
          "type": "string"
        },
        "industry": {
          "type": "string"
        },
        "postCode": {
          "type": "string"
        },
        "address1": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "address3": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "continent": {
          "type": "string"
        },
        "telephone": {
          "type": "string"
        },
        "website": {
          "type": "string"
        },
        "customFields": {
          "$ref": "#/definitions/CustomFieldDTO"
        },
        "invoiceName": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/ContactDTO"
        },
        "login": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "name",
        "companyName",
        "type",
        "bu",
        "sic",
        "givenName",
        "familyName",
        "companyNameCn",
        "companyTypeId",
        "industry",
        "postCode",
        "address1",
        "address2",
        "address3",
        "city",
        "province",
        "region",
        "continent",
        "telephone",
        "website",
        "customFields",
        "invoiceName",
        "contact",
        "login",
        "state"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ContactDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "name",
        "number",
        "mobile",
        "email"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OfficeDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "bankName": {
          "type": "string"
        },
        "remarks": {
          "type": "string"
        },
        "invoiceRemarks": {
          "type": "string"
        },
        "quotationRemarks": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "offset": {
          "type": "number",
          "format": "double"
        },
        "zipCode": {
          "type": "string"
        },
        "logoHash": {
          "type": "string"
        },
        "unionLogoHash": {
          "type": "string"
        },
        "mailbox": {
          "type": "string"
        },
        "legalName": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        },
        "workingDays": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfficeWorkingDayDTO"
          }
        },
        "holidays": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfficeHolidayDTO"
          }
        },
        "logo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfficeLogoDTO"
          }
        },
        "country": {
          "$ref": "#/definitions/PlanetDTO"
        },
        "region": {
          "$ref": "#/definitions/PlanetDTO"
        },
        "telephone": {
          "type": "string"
        },
        "currencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyDTO"
          }
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "name",
        "bankName",
        "remarks",
        "invoiceRemarks",
        "quotationRemarks",
        "address",
        "code",
        "timezone",
        "offset",
        "zipCode",
        "logoHash",
        "unionLogoHash",
        "mailbox",
        "legalName",
        "signature",
        "workingDays",
        "holidays",
        "logo",
        "country",
        "region",
        "telephone",
        "currencies"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OfficeLogoDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileHash": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "fileName",
        "fileHash"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OfficeHolidayDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "office": {
          "type": "object",
          "properties": {}
        },
        "name": {
          "type": "string"
        },
        "holidayDate": {
          "type": "string",
          "format": "date-time"
        },
        "date": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "office",
        "name",
        "holidayDate",
        "date"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OfficeWorkingDayDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "office": {
          "type": "object",
          "properties": {}
        },
        "day": {
          "type": "integer",
          "format": "int32"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "office",
        "day"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ConfirmOrderDTO": {
      "type": "object",
      "required": [
        "description",
        "officeId",
        "programId",
        "sampleInfo",
        "submissionType",
        "testingLocationId"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "LT order id,only for update order",
          "example": [
            "7438580650056829889"
          ]
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "draftId": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string",
          "description": "Description of this order",
          "example": [
            "LT order from supplier A"
          ]
        },
        "officeId": {
          "type": "string",
          "description": "QIMA user's office Id who is creating the order",
          "example": [
            "ecb0d3e2-230f-45c1-9457-a538c08c819f"
          ]
        },
        "clientPONo": {
          "type": "string",
          "description": "Client Purchase order no.",
          "example": [
            "FUN6114IN"
          ]
        },
        "clientId": {
          "type": "string"
        },
        "submissionType": {
          "type": "string",
          "description": "Lab testing Order type, only those values are allowed here:Testing|Quotation",
          "enum": [
            "Testing",
            "Quotation"
          ],
          "example": [
            "Testing"
          ]
        },
        "programId": {
          "type": "string",
          "description": "QIMA test program id",
          "example": [
            "9c7bd008-92a8-4d87-9r47-cc88ea695f56"
          ]
        },
        "orderSupplierId": {
          "type": "string",
          "description": "SampleInfo's QIMA supplier id",
          "example": [
            "00335B231B929389C12570C30055EEA4"
          ]
        },
        "testingLocationId": {
          "type": "string",
          "description": "QIMA office's Id which is set to be testing location of this order",
          "example": [
            "ecb0d3e2-231f-45c1-9457-a538c08c819a"
          ]
        },
        "reportRecipients": {
          "type": "string",
          "description": "Report recipients,whom the test report is sent to,only email address is allowed",
          "example": [
            "Amy.chen@qima.com;Mason.zhang@qima.com"
          ]
        },
        "invoiceContact": {
          "type": "string",
          "description": "Invoice contact,only email address is allowed",
          "example": [
            "Amy.chen@qima.com;"
          ]
        },
        "quotationContact": {
          "type": "string",
          "description": "Quotation contact,only email address is allowed",
          "example": [
            "Mason.zhang@qima.com"
          ]
        },
        "inquiryMessage": {
          "type": "string",
          "description": "Inquiry message"
        },
        "sampleInfo": {
          "$ref": "#/definitions/ConfirmSampleInfoDTO"
        },
        "sampleCollection": {
          "$ref": "#/definitions/ConfirmSampleCollectionDTO"
        },
        "specialInstruction": {
          "$ref": "#/definitions/ConfirmSpecialInstructionDTO"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfirmAttachmentDTO"
          }
        },
        "testAssignments": {
          "type": "array",
          "description": "Tests assigned to this order",
          "items": {
            "$ref": "#/definitions/ConfirmTestAssignmentDTO"
          }
        },
        "quotations": {
          "type": "array",
          "description": "Tests assigned to this order",
          "items": {
            "$ref": "#/definitions/ConfirmQuotationDTO"
          }
        },
        "customFields": {
          "$ref": "#/definitions/ConfirmCustomFieldDataDTO"
        },
        "availableTurnaroundTime": {
          "type": "string",
          "description": "Available turn around time"
        },
        "isInquiry": {
          "type": "boolean"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "draftId",
        "description",
        "officeId",
        "clientPONo",
        "clientId",
        "submissionType",
        "programId",
        "orderSupplierId",
        "testingLocationId",
        "reportRecipients",
        "invoiceContact",
        "quotationContact",
        "inquiryMessage",
        "sampleInfo",
        "sampleCollection",
        "specialInstruction",
        "attachments",
        "testAssignments",
        "quotations",
        "customFields",
        "availableTurnaroundTime",
        "isInquiry"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ConfirmCustomFieldDataDTO": {
      "type": "object",
      "required": [
        "moduleName"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "moduleName": {
          "type": "string",
          "description": "Module name of the custom filed data",
          "example": [
            "Style Info|Sample Info|Order"
          ]
        },
        "values": {
          "type": "array",
          "description": "Custom field's value list",
          "items": {
            "$ref": "#/definitions/ConfirmCustomFieldValueDTO"
          }
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "moduleName",
        "values"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ConfirmCustomFieldValueDTO": {
      "type": "object",
      "required": [
        "customFieldDetailId"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "customFieldDetailId": {
          "type": "string",
          "description": "QIMA id of the details of this custom field,which defines this custom filed",
          "example": [
            "dae93ee9-8567-4fbf-b78a-20033ae88528"
          ]
        },
        "value": {
          "type": "string",
          "description": "This custom field's  Value",
          "example": [
            "Children's (12 and under)"
          ]
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "customFieldDetailId",
        "value"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ConfirmQuotationDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "currency": {
          "type": "string",
          "description": "Currency of payment",
          "example": [
            "USD"
          ]
        },
        "totalQuotationAmount": {
          "type": "number",
          "format": "double",
          "description": "Total quotation amount",
          "example": [
            150
          ]
        },
        "totalActualAmount": {
          "type": "number",
          "format": "double",
          "description": "Total actual payment amount",
          "example": [
            150
          ]
        },
        "surcharge": {
          "type": "number",
          "format": "double",
          "description": "Percentage of surcharge",
          "example": [
            20
          ]
        },
        "surchargeAmount": {
          "type": "number",
          "format": "double",
          "description": "Amount of Surcharge ",
          "example": [
            150
          ]
        },
        "turnAroundTimeId": {
          "type": "string",
          "description": "QIMA id of turn around time",
          "example": [
            "98e6203a-dea3-4d20-b954-cedb152f6d55"
          ]
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "currency",
        "totalQuotationAmount",
        "totalActualAmount",
        "surcharge",
        "surchargeAmount",
        "turnAroundTimeId"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ConfirmTestAssignmentDTO": {
      "type": "object",
      "required": [
        "currency",
        "pricePlan",
        "testId"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "testId": {
          "type": "string",
          "description": "QIMA user's office Id who is creating the order",
          "example": [
            "ecb0d3e2-230f-45c1-9457-a538c08c819f"
          ]
        },
        "noOfTestQuotation": {
          "type": "integer",
          "format": "int32",
          "description": "Number of tests quotation",
          "example": [
            15
          ]
        },
        "currency": {
          "type": "string",
          "description": "Currency of this test plan",
          "example": [
            "USD"
          ]
        },
        "pricePlan": {
          "type": "number",
          "format": "double",
          "description": "Price plan of this test,this should be aligned to QIMA test data",
          "example": [
            11.5
          ]
        },
        "labId": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "testId",
        "noOfTestQuotation",
        "currency",
        "pricePlan",
        "labId"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ConfirmSpecialInstructionDTO": {
      "type": "object",
      "required": [
        "bookingRemark",
        "reorderRemark",
        "retestRemark"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "reorderRemark": {
          "type": "string",
          "description": "Remark of order record",
          "example": [
            "This order is recorded in QIMA"
          ]
        },
        "retestRemark": {
          "type": "string",
          "description": "Remark of retesting",
          "example": [
            "This order is resteting order"
          ]
        },
        "bookingRemark": {
          "type": "string",
          "description": "Remark of booking order",
          "example": [
            "This order is to be booked on 23 03 2023"
          ]
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "reorderRemark",
        "retestRemark",
        "bookingRemark"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ConfirmSampleCollectionDTO": {
      "type": "object",
      "required": [
        "productId",
        "psiRefNo",
        "sampleCollectionMethod"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Sample collection id, only fro update",
          "example": [
            "dcb0330b-93gd-4e9a-b13f-603f168749ad"
          ]
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "sampleCollectionMethod": {
          "type": "string",
          "description": "Sample collection method,only those values are allowed here: Sample already sent|Collect from QIMA Inspection|Sample will be sent later",
          "enum": [
            "Sample already sent",
            "Collect from QIMA Inspection",
            "Sample will be sent later"
          ],
          "example": [
            "dcb0330b-93gd-4e9a-b13f-603f168749ad"
          ]
        },
        "sampleArrivalDate": {
          "type": "string",
          "format": "date-time",
          "description": "Sample arrival date",
          "example": [
            "23 03 2023"
          ]
        },
        "psiRefNo": {
          "type": "string",
          "description": "Referred PSI order No.",
          "example": [
            "R-Cloud-22005364"
          ]
        },
        "productId": {
          "type": "string",
          "description": "Referred PSI order's product Id.",
          "example": [
            "277A27575A2348B49DA537B6415C25E7"
          ]
        },
        "courierTrackingNo": {
          "type": "string",
          "description": "Courier's tracking No.",
          "example": [
            "23456"
          ]
        },
        "courierName": {
          "type": "string",
          "description": "courier's name",
          "example": [
            "FedEx"
          ]
        },
        "remarks": {
          "type": "string",
          "description": "Remarks about sample collection",
          "example": [
            "This is a sample collection remark"
          ]
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "sampleCollectionMethod",
        "sampleArrivalDate",
        "psiRefNo",
        "productId",
        "courierTrackingNo",
        "courierName",
        "remarks"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ConfirmSampleInfoDTO": {
      "type": "object",
      "required": [
        "originCountryIds",
        "productDivision"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "sku": {
          "type": "string",
          "description": "SKU",
          "example": [
            "HY-CV-0801"
          ]
        },
        "prevAnsecoTestReportNo": {
          "type": "string",
          "description": "Previous Anseco test report no.",
          "example": [
            "569823"
          ]
        },
        "manufacturerFactoryName": {
          "type": "string",
          "description": "The manufacturer factory's name",
          "example": [
            "HY-CV-0801"
          ]
        },
        "agencyName": {
          "type": "string",
          "description": "Agency's name",
          "example": [
            "HY-CV-0801"
          ]
        },
        "buyerName": {
          "type": "string",
          "description": "The name of buyer",
          "example": [
            "HY-CV-0801"
          ]
        },
        "beginShipDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date sample starts to ship",
          "example": [
            "23-06-2023"
          ]
        },
        "sourceAnsecoNo": {
          "type": "string",
          "description": "Source Anseco  no.",
          "example": [
            "569823"
          ]
        },
        "productReferenceNo": {
          "type": "string",
          "description": "Referred product no.",
          "example": [
            "245425"
          ]
        },
        "productDivision": {
          "type": "string",
          "description": "Product division",
          "example": [
            "Sales"
          ]
        },
        "requestedAgeGrade": {
          "type": "string",
          "description": "Requested age grade",
          "example": [
            "Children over 1 1/2 to 5"
          ]
        },
        "originCountryIds": {
          "type": "array",
          "description": "Origin country id list",
          "items": {
            "type": "string"
          }
        },
        "distributionCountryIds": {
          "type": "array",
          "description": "Distribution country id list",
          "items": {
            "type": "string"
          }
        },
        "distributionRegionIds": {
          "type": "array",
          "description": "Distribution region id list",
          "items": {
            "type": "string"
          }
        }
      },
      "x-apifox-orders": [
        "id",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "status",
        "sku",
        "prevAnsecoTestReportNo",
        "manufacturerFactoryName",
        "agencyName",
        "buyerName",
        "beginShipDate",
        "sourceAnsecoNo",
        "productReferenceNo",
        "productDivision",
        "requestedAgeGrade",
        "originCountryIds",
        "distributionCountryIds",
        "distributionRegionIds"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiInspectionBookingBean": {
      "type": "object",
      "properties": {
        "draft": {
          "$ref": "#/definitions/ApiBookingDraftBean"
        },
        "orderGeneralInfo": {
          "$ref": "#/definitions/ApiOrderGeneralInfoBean"
        },
        "orderExtra": {
          "$ref": "#/definitions/ApiOrderExtraBean"
        },
        "orderFactory": {
          "$ref": "#/definitions/ApiOrderFactoryBean"
        },
        "orderSupplier": {
          "$ref": "#/definitions/ApiOrderSupplierBean"
        },
        "multiOrderSuppliers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiOrderSupplierBean"
          }
        },
        "multiOrderFactories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiOrderFactoryBean"
          }
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiInspectionProductBookingBean"
          }
        }
      },
      "x-apifox-orders": [
        "draft",
        "orderGeneralInfo",
        "orderExtra",
        "orderFactory",
        "orderSupplier",
        "multiOrderSuppliers",
        "multiOrderFactories",
        "products"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiInspectionProductBookingBean": {
      "type": "object",
      "properties": {
        "draftProductId": {
          "type": "string",
          "description": "Id of the product id in this booking booking draft"
        },
        "draftId": {
          "type": "string",
          "description": "Id of the inspection booking draft"
        },
        "productBean": {
          "$ref": "#/definitions/ApiProductBean"
        },
        "productChecklistBean": {
          "$ref": "#/definitions/ApiProductChecklistBean"
        },
        "sampleCollection": {
          "$ref": "#/definitions/ApiSampleCollectionBean"
        },
        "sampleReference": {
          "$ref": "#/definitions/ApiSampleReferenceBean"
        },
        "productSpec": {
          "$ref": "#/definitions/ApiProductSpecBean"
        },
        "completed": {
          "type": "boolean"
        }
      },
      "x-apifox-orders": [
        "draftProductId",
        "draftId",
        "productBean",
        "productChecklistBean",
        "sampleCollection",
        "sampleReference",
        "productSpec",
        "completed"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiProductSpecBean": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "nbOfPoints": {
          "type": "integer",
          "format": "int32"
        },
        "logoDes": {
          "type": "string"
        },
        "performDropTest": {
          "type": "boolean"
        },
        "unitPacking": {
          "type": "string"
        },
        "innerPacking": {
          "type": "string"
        },
        "outerPacking": {
          "type": "string"
        },
        "packingComments": {
          "type": "string"
        },
        "shippingMarks": {
          "type": "string"
        },
        "nbOfRawMaterials": {
          "type": "integer",
          "format": "int32"
        },
        "rawMaterialsDes": {
          "type": "string"
        },
        "clcNbOfPallets": {
          "type": "integer",
          "format": "int32"
        },
        "clcNbOfCartons": {
          "type": "integer",
          "format": "int32"
        },
        "clcNbOfPcsPerCarton": {
          "type": "integer",
          "format": "int32"
        },
        "clcNumberingFrom": {
          "type": "string"
        },
        "clcNumberingTo": {
          "type": "string"
        },
        "additionalComment": {
          "type": "string"
        },
        "productColors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiProductColorBean"
          }
        },
        "productTextileColors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiProductTextileColorBean"
          }
        },
        "productDimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiProductDimensionBean"
          }
        }
      },
      "x-apifox-orders": [
        "productId",
        "nbOfPoints",
        "logoDes",
        "performDropTest",
        "unitPacking",
        "innerPacking",
        "outerPacking",
        "packingComments",
        "shippingMarks",
        "nbOfRawMaterials",
        "rawMaterialsDes",
        "clcNbOfPallets",
        "clcNbOfCartons",
        "clcNbOfPcsPerCarton",
        "clcNumberingFrom",
        "clcNumberingTo",
        "additionalComment",
        "productColors",
        "productTextileColors",
        "productDimensions"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiProductDimensionBean": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "Id of this product"
        },
        "id": {
          "type": "string",
          "description": "Id of this product dimension"
        },
        "seq": {
          "type": "integer",
          "format": "int32",
          "description": "Sequence of this product dimension"
        },
        "dimensionDes": {
          "type": "string",
          "description": "Product dimension"
        }
      },
      "x-apifox-orders": [
        "productId",
        "id",
        "seq",
        "dimensionDes"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiProductTextileColorBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "seq": {
          "type": "integer",
          "format": "int32"
        },
        "colorRef": {
          "type": "string"
        },
        "colorCode": {
          "type": "string"
        },
        "colorQuantity": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "productId",
        "seq",
        "colorRef",
        "colorCode",
        "colorQuantity"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiProductColorBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of product color"
        },
        "productId": {
          "type": "string",
          "description": "Id of this product"
        },
        "seq": {
          "type": "integer",
          "format": "int32",
          "description": "Sequence of product color"
        },
        "colorDes": {
          "type": "string",
          "description": "Product color"
        }
      },
      "x-apifox-orders": [
        "id",
        "productId",
        "seq",
        "colorDes"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiSampleReferenceBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "reference": {
          "type": "integer",
          "format": "int32"
        },
        "courier": {
          "type": "string"
        },
        "trackNb": {
          "type": "string"
        },
        "clientComments": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "reference",
        "courier",
        "trackNb",
        "clientComments",
        "productId"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiSampleCollectionBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "collectSample": {
          "type": "integer",
          "format": "int32"
        },
        "sampleNb": {
          "type": "integer",
          "format": "int32"
        },
        "sampleUnit": {
          "type": "string"
        },
        "sampleBy": {
          "type": "integer",
          "format": "int32"
        },
        "collectMethod": {
          "type": "integer",
          "format": "int32"
        },
        "courier": {
          "type": "string"
        },
        "trackNb": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "clientComments": {
          "type": "string"
        },
        "collectLtSample": {
          "type": "integer",
          "format": "int32"
        },
        "ltSampleNb": {
          "type": "integer",
          "format": "int32"
        },
        "ltClientComments": {
          "type": "string"
        },
        "ltSampleRefNb": {
          "type": "string"
        },
        "clientAccountNumber": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "productId",
        "collectSample",
        "sampleNb",
        "sampleUnit",
        "sampleBy",
        "collectMethod",
        "courier",
        "trackNb",
        "address",
        "postcode",
        "clientComments",
        "collectLtSample",
        "ltSampleNb",
        "ltClientComments",
        "ltSampleRefNb",
        "clientAccountNumber",
        "productName"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiProductChecklistBean": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "Id of this product"
        },
        "checklistFrom": {
          "type": "string"
        },
        "clientChecklistId": {
          "type": "string"
        },
        "checklistNumber": {
          "type": "string"
        },
        "clientComments": {
          "type": "string",
          "description": "Client's comment on this checklist"
        },
        "prodSampleLevel": {
          "type": "string",
          "description": "Product sample level",
          "example": [
            "I, II"
          ]
        },
        "prodMeasurementSampleLevel": {
          "type": "string"
        },
        "aqlTypel": {
          "type": "string",
          "description": "AQL type, can be customized or standard",
          "example": [
            "Customized"
          ]
        },
        "aqlCritical": {
          "type": "string",
          "description": "Allowed AQL in critical level",
          "example": [
            "0"
          ]
        },
        "aqlMajor": {
          "type": "string",
          "description": "Allowed AQL in major level",
          "example": [
            "1"
          ]
        },
        "aqlMinor": {
          "type": "string",
          "description": "Allowed AQL in minor level",
          "example": [
            "3"
          ]
        },
        "prodSampleSize": {
          "type": "integer",
          "format": "int32",
          "description": "Product sample size",
          "example": [
            125
          ]
        },
        "prodMeasurementSampleSize": {
          "type": "integer",
          "format": "int32",
          "description": "Product measurement sample size",
          "example": [
            20
          ]
        },
        "prodMd": {
          "type": "number",
          "format": "double"
        },
        "measurementAQL": {
          "type": "string"
        },
        "fabricSampleLevel": {
          "type": "string"
        },
        "fabricMaxPenalty": {
          "type": "integer",
          "format": "int32"
        },
        "fabricMaxAverage": {
          "type": "integer",
          "format": "int32"
        },
        "fabricMaxPenaltyUnit": {
          "type": "string"
        },
        "fabricMaxAverageUnit": {
          "type": "string"
        },
        "performClientTestsOnly": {
          "type": "string"
        },
        "performClientTestsOnlyBoolean": {
          "type": "boolean"
        },
        "defectList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiProductChecklistDefectViewBean"
          }
        },
        "testList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiProductChecklistTestViewBean"
          }
        },
        "bookingType": {
          "type": "string",
          "description": "Booking type in product level"
        },
        "prodQuantity": {
          "type": "number",
          "format": "double",
          "description": "Product level product quantity"
        },
        "prodQuantityUnit": {
          "type": "string",
          "description": "Unit name of the product quantity, like pcs, sets",
          "example": [
            "pcs"
          ]
        },
        "otherUnit": {
          "type": "string"
        },
        "productAqlList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductRefAqlBean"
          }
        },
        "customizedAql": {
          "type": "string"
        },
        "customizedAqlText": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "productId",
        "checklistFrom",
        "clientChecklistId",
        "checklistNumber",
        "clientComments",
        "prodSampleLevel",
        "prodMeasurementSampleLevel",
        "aqlTypel",
        "aqlCritical",
        "aqlMajor",
        "aqlMinor",
        "prodSampleSize",
        "prodMeasurementSampleSize",
        "prodMd",
        "measurementAQL",
        "fabricSampleLevel",
        "fabricMaxPenalty",
        "fabricMaxAverage",
        "fabricMaxPenaltyUnit",
        "fabricMaxAverageUnit",
        "performClientTestsOnly",
        "performClientTestsOnlyBoolean",
        "defectList",
        "testList",
        "bookingType",
        "prodQuantity",
        "prodQuantityUnit",
        "otherUnit",
        "productAqlList",
        "customizedAql",
        "customizedAqlText"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductRefAqlBean": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-apifox-orders": []
          },
          "x-apifox-orders": [],
          "properties": {},
          "x-apifox-ignore-properties": []
        },
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productReferenceId": {
          "type": "string"
        },
        "prodSampleLevel": {
          "type": "string"
        },
        "prodMeasurementSampleLevel": {
          "type": "string"
        },
        "aqlType": {
          "type": "string"
        },
        "aqlCritical": {
          "type": "string"
        },
        "aqlCriticalText": {
          "type": "string"
        },
        "aqlMajor": {
          "type": "string"
        },
        "aqlMajorText": {
          "type": "string"
        },
        "aqlMinor": {
          "type": "string"
        },
        "aqlMinorText": {
          "type": "string"
        },
        "prodSampleSize": {
          "type": "integer",
          "format": "int32"
        },
        "prodMeasurementSampleSize": {
          "type": "integer",
          "format": "int32"
        },
        "prodMd": {
          "type": "number",
          "format": "double"
        },
        "measurementAQL": {
          "type": "string"
        },
        "measurementAqlText": {
          "type": "string"
        },
        "fabricSampleLevel": {
          "type": "string"
        },
        "fabricMaxPenalty": {
          "type": "integer",
          "format": "int32"
        },
        "fabricMaxAverage": {
          "type": "integer",
          "format": "int32"
        },
        "fabricMaxPenaltyUnit": {
          "type": "string"
        },
        "fabricMaxAverageUnit": {
          "type": "string"
        },
        "performClientTestsOnly": {
          "type": "string"
        },
        "criticalFound": {
          "type": "integer",
          "format": "int32"
        },
        "majorFound": {
          "type": "integer",
          "format": "int32"
        },
        "minorFound": {
          "type": "integer",
          "format": "int32"
        },
        "criticalChecked": {
          "type": "integer",
          "format": "int32"
        },
        "majorChecked": {
          "type": "integer",
          "format": "int32"
        },
        "minorChecked": {
          "type": "integer",
          "format": "int32"
        },
        "criticalMax": {
          "type": "integer",
          "format": "int32"
        },
        "majorMax": {
          "type": "integer",
          "format": "int32"
        },
        "minorMax": {
          "type": "integer",
          "format": "int32"
        },
        "criticalAllowedDefectFrom": {
          "type": "integer",
          "format": "int32"
        },
        "criticalAllowedDefectTo": {
          "type": "integer",
          "format": "int32"
        },
        "majorAllowedDefectFrom": {
          "type": "integer",
          "format": "int32"
        },
        "majorAllowedDefectTo": {
          "type": "integer",
          "format": "int32"
        },
        "minorAllowedDefectFrom": {
          "type": "integer",
          "format": "int32"
        },
        "minorAllowedDefectTo": {
          "type": "integer",
          "format": "int32"
        },
        "inspResult": {
          "type": "string"
        },
        "defectDescFound": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "seq": {
          "type": "integer",
          "format": "int32"
        },
        "bookingType": {
          "type": "string"
        },
        "prodQuantity": {
          "type": "number",
          "format": "double"
        },
        "prodQuantityUnit": {
          "type": "string"
        },
        "otherUnit": {
          "type": "string"
        },
        "measurementFound": {
          "type": "integer",
          "format": "int32"
        },
        "measurementMax": {
          "type": "integer",
          "format": "int32"
        },
        "measurementChecked": {
          "type": "integer",
          "format": "int32"
        },
        "customizedAql": {
          "type": "string"
        },
        "customizedAqlText": {
          "type": "string"
        },
        "customizedAqlAllowedDefectFrom": {
          "type": "integer",
          "format": "int32"
        },
        "customizedAqlAllowedDefectTo": {
          "type": "integer",
          "format": "int32"
        },
        "customizedAqlFound": {
          "type": "integer",
          "format": "int32"
        },
        "customizedAqlMax": {
          "type": "integer",
          "format": "int32"
        },
        "customizedAqlChecked": {
          "type": "integer",
          "format": "int32"
        },
        "aqlFlag": {
          "type": "integer",
          "format": "int32"
        }
      },
      "x-apifox-orders": [
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "accessTime",
        "params",
        "id",
        "productId",
        "productReferenceId",
        "prodSampleLevel",
        "prodMeasurementSampleLevel",
        "aqlType",
        "aqlCritical",
        "aqlCriticalText",
        "aqlMajor",
        "aqlMajorText",
        "aqlMinor",
        "aqlMinorText",
        "prodSampleSize",
        "prodMeasurementSampleSize",
        "prodMd",
        "measurementAQL",
        "measurementAqlText",
        "fabricSampleLevel",
        "fabricMaxPenalty",
        "fabricMaxAverage",
        "fabricMaxPenaltyUnit",
        "fabricMaxAverageUnit",
        "performClientTestsOnly",
        "criticalFound",
        "majorFound",
        "minorFound",
        "criticalChecked",
        "majorChecked",
        "minorChecked",
        "criticalMax",
        "majorMax",
        "minorMax",
        "criticalAllowedDefectFrom",
        "criticalAllowedDefectTo",
        "majorAllowedDefectFrom",
        "majorAllowedDefectTo",
        "minorAllowedDefectFrom",
        "minorAllowedDefectTo",
        "inspResult",
        "defectDescFound",
        "comments",
        "seq",
        "bookingType",
        "prodQuantity",
        "prodQuantityUnit",
        "otherUnit",
        "measurementFound",
        "measurementMax",
        "measurementChecked",
        "customizedAql",
        "customizedAqlText",
        "customizedAqlAllowedDefectFrom",
        "customizedAqlAllowedDefectTo",
        "customizedAqlFound",
        "customizedAqlMax",
        "customizedAqlChecked",
        "aqlFlag"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiProductChecklistTestViewBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "testId": {
          "type": "string"
        },
        "publicTestId": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        },
        "selectedBy": {
          "type": "integer",
          "format": "int32"
        },
        "testName": {
          "type": "string"
        },
        "instructionTest": {
          "type": "string"
        },
        "expectedResult": {
          "type": "string"
        },
        "sampleLevel": {
          "type": "string"
        },
        "sampleSize": {
          "type": "string"
        },
        "fileId": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "originTestId": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "productId",
        "testId",
        "publicTestId",
        "isPublic",
        "selectedBy",
        "testName",
        "instructionTest",
        "expectedResult",
        "sampleLevel",
        "sampleSize",
        "fileId",
        "fileName",
        "originTestId"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiProductChecklistDefectViewBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "defectId": {
          "type": "string"
        },
        "publicDefectId": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        },
        "selectedBy": {
          "type": "integer",
          "format": "int32"
        },
        "defectName": {
          "type": "string"
        },
        "expectedDefect": {
          "type": "string"
        },
        "classification": {
          "type": "string"
        },
        "fileId": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "originDefectId": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "productId",
        "defectId",
        "publicDefectId",
        "isPublic",
        "selectedBy",
        "defectName",
        "expectedDefect",
        "classification",
        "fileId",
        "fileName",
        "originDefectId"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiProductBean": {
      "type": "object",
      "required": [
        "bookingtype"
      ],
      "properties": {
        "orderId": {
          "type": "string",
          "description": "Order id of this product in this booking"
        },
        "productId": {
          "type": "string",
          "description": "Id of this product"
        },
        "seq": {
          "type": "integer",
          "format": "int32",
          "description": "Sequence of this product"
        },
        "maxPcsPerMD": {
          "type": "integer",
          "format": "int32"
        },
        "maxRefPerMD": {
          "type": "integer",
          "format": "int32"
        },
        "maxPtsPerMD": {
          "type": "integer",
          "format": "int32"
        },
        "nbOfRefInReport": {
          "type": "integer",
          "format": "int32"
        },
        "prodCategoryClient": {
          "type": "string",
          "description": "Product category selected by client while booking",
          "example": [
            "bigCat2"
          ]
        },
        "prodFamilyClient": {
          "type": "string",
          "description": "Product family selected by client while booking",
          "example": [
            "bigCat2_s2"
          ]
        },
        "prodType": {
          "type": "string",
          "description": "Product type decided by client while booking",
          "example": [
            "bigCat2_s2_t200"
          ]
        },
        "isReinspection": {
          "type": "string",
          "description": "If this inspection is an re-inspection"
        },
        "preInspection": {
          "type": "string",
          "description": "TODO"
        },
        "preInspectionDate": {
          "type": "string",
          "description": "TODO",
          "example": [
            "09-Feb-2017"
          ]
        },
        "preInspectionDateUnitTimeStamp": {
          "type": "integer",
          "format": "int64",
          "description": "TODO",
          "example": [
            1662652800000
          ]
        },
        "reinspectionComment": {
          "type": "string",
          "description": "Comment for inspection"
        },
        "prodName": {
          "type": "string",
          "description": "Product name"
        },
        "prodDivision": {
          "type": "string",
          "description": "Division name that this product belongs to in client's company",
          "example": [
            "Womenswear"
          ]
        },
        "prodReference": {
          "type": "string",
          "description": "Product reference, like sku number"
        },
        "prodQuantity": {
          "type": "integer",
          "format": "int64",
          "description": "Product quantity, numbers only",
          "example": [
            1000
          ]
        },
        "prodQuantityUnit": {
          "type": "string",
          "description": "Unit name of the product quantity, like pcs, sets",
          "example": [
            "pcs"
          ]
        },
        "otherUnit": {
          "type": "string",
          "description": "Unit name of the product quantity if it's not pcs, sets, like pcs",
          "example": [
            "pcs"
          ]
        },
        "nbOfPcsPerSets": {
          "type": "integer",
          "format": "int32",
          "description": "How many pcs per set"
        },
        "nbOfPtsPerSets": {
          "type": "integer",
          "format": "int32",
          "description": "How many pcs per set"
        },
        "poNumber": {
          "type": "string",
          "description": "PO number"
        },
        "prodApparelCategory": {
          "type": "string",
          "description": "Category name when this product belongs to apparel",
          "example": [
            "Accessories"
          ]
        },
        "numberOfReferences": {
          "type": "integer",
          "format": "int32",
          "description": "How many reference in this product",
          "example": [
            6
          ]
        },
        "bookingtype": {
          "type": "string",
          "description": "QIMA inspection type",
          "example": [
            "General, Textile, Fabric"
          ]
        },
        "expectedFinishedPct": {
          "type": "integer",
          "format": "int32",
          "description": "Percentage of the expected production finished productions for inspection",
          "example": [
            90
          ]
        },
        "expectedPackedPct": {
          "type": "integer",
          "format": "int32",
          "description": "Percentage of the expected packed production for inspection",
          "example": [
            100
          ]
        },
        "setsDescription": {
          "type": "string",
          "description": "TODO"
        },
        "customField1": {
          "type": "string",
          "description": "Product level custom field 1 depends on use case"
        },
        "customField2": {
          "type": "string",
          "description": "Product level custom field 2 depends on use case"
        },
        "customField3": {
          "type": "string",
          "description": "Product level custom field 3 depends on use case"
        },
        "productRefs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiOrderProdReferenceBean"
          }
        }
      },
      "x-apifox-orders": [
        "orderId",
        "productId",
        "seq",
        "maxPcsPerMD",
        "maxRefPerMD",
        "maxPtsPerMD",
        "nbOfRefInReport",
        "prodCategoryClient",
        "prodFamilyClient",
        "prodType",
        "isReinspection",
        "preInspection",
        "preInspectionDate",
        "preInspectionDateUnitTimeStamp",
        "reinspectionComment",
        "prodName",
        "prodDivision",
        "prodReference",
        "prodQuantity",
        "prodQuantityUnit",
        "otherUnit",
        "nbOfPcsPerSets",
        "nbOfPtsPerSets",
        "poNumber",
        "prodApparelCategory",
        "numberOfReferences",
        "bookingtype",
        "expectedFinishedPct",
        "expectedPackedPct",
        "setsDescription",
        "customField1",
        "customField2",
        "customField3",
        "productRefs"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiOrderProdReferenceBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Product reference id"
        },
        "productId": {
          "type": "string",
          "description": "Product id of this product reference belongs to"
        },
        "brand": {
          "type": "string",
          "description": "Brand name"
        },
        "prodRefSeq": {
          "type": "string",
          "description": "Sequence of this product reference",
          "example": [
            "1,2,3"
          ]
        },
        "prodRefPoNb": {
          "type": "string",
          "description": "Product reference number",
          "example": [
            "6111_20-CACTD3S-0048_QCB2012-000333"
          ]
        },
        "prodRefSkuNb": {
          "type": "string",
          "description": "Product reference sku number",
          "example": [
            "2568442"
          ]
        },
        "prodRefQuantity": {
          "type": "integer",
          "format": "int32",
          "description": "Quantity of this product reference",
          "example": [
            200
          ]
        },
        "supplierId": {
          "type": "string",
          "description": "Supplier id of this product reference belongs to, if there is more than 1 supplier in this booking"
        },
        "supplierName": {
          "type": "string",
          "description": "Supplier name of this product reference belongs to, if there is more than 1 supplier in this booking"
        },
        "customField1": {
          "type": "string",
          "description": "Product reference level custom field 1 depends on use case"
        },
        "customField2": {
          "type": "string",
          "description": "Product reference level custom field 2 depends on use case"
        },
        "customField3": {
          "type": "string",
          "description": "Product reference level custom field 3 depends on use case"
        },
        "customField4": {
          "type": "string",
          "description": "Product reference level custom field 4 depends on use case"
        },
        "customField5": {
          "type": "string",
          "description": "Product reference level custom field 5 depends on use case"
        },
        "customField6": {
          "type": "string",
          "description": "Product reference level custom field 6 depends on use case"
        },
        "customField7": {
          "type": "string",
          "description": "Product reference level custom field 7 depends on use case"
        },
        "customField8": {
          "type": "string",
          "description": "Product reference level custom field 8 depends on use case"
        },
        "customField9": {
          "type": "string",
          "description": "Product reference level custom field 9 depends on use case"
        },
        "customField10": {
          "type": "string",
          "description": "Product reference level custom field 10 depends on use case"
        },
        "customField11": {
          "type": "string",
          "description": "Product reference level custom field 11 depends on use case"
        },
        "customField12": {
          "type": "string",
          "description": "Product reference level custom field 12 depends on use case"
        }
      },
      "x-apifox-orders": [
        "id",
        "productId",
        "brand",
        "prodRefSeq",
        "prodRefPoNb",
        "prodRefSkuNb",
        "prodRefQuantity",
        "supplierId",
        "supplierName",
        "customField1",
        "customField2",
        "customField3",
        "customField4",
        "customField5",
        "customField6",
        "customField7",
        "customField8",
        "customField9",
        "customField10",
        "customField11",
        "customField12"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiOrderSupplierBean": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "description": "Id of the order"
        },
        "id": {
          "type": "string",
          "description": "Id of the supplier in this booking"
        },
        "supplierCode": {
          "type": "string",
          "description": "Supplier's identification code in client's system"
        },
        "supplierName": {
          "type": "string",
          "description": "Name of the supplier"
        },
        "supplierNameCN": {
          "type": "string",
          "description": "Chinese name of the factory"
        },
        "supplierMGRName": {
          "type": "string",
          "description": "Name of the factory contact"
        },
        "supplierMGRMobile": {
          "type": "string",
          "description": "Mobile phone number of the factory contact"
        },
        "supplierMGRNumber": {
          "type": "string",
          "description": "Telephone phone number of the factory contact"
        },
        "supplierMGREmail": {
          "type": "array",
          "description": "Emails of the the factory contact",
          "items": {
            "type": "string"
          }
        },
        "supplierOtherName": {
          "type": "string",
          "description": "Name of the alternative factory contact"
        },
        "supplierOtherMobile": {
          "type": "string",
          "description": "Mobile phone of the alternative factory contact"
        },
        "supplierOtherNumber": {
          "type": "string",
          "description": "Telephone number of the alternative factory contact"
        },
        "supplierOtherEmail": {
          "type": "array",
          "description": "Emails of the the alternative factory contact",
          "items": {
            "type": "string"
          }
        },
        "supplierAddress": {
          "type": "string",
          "description": "Address of the factory"
        },
        "supplierCity": {
          "type": "string",
          "description": "City of the factory"
        },
        "supplierPostCode": {
          "type": "string",
          "description": "Post code of the factory"
        },
        "supplierCountry": {
          "type": "string",
          "description": "Country of the factory"
        },
        "supplierContinentID": {
          "type": "string",
          "description": "Continent id of the factory in QIMA system"
        },
        "supplierProductLines": {
          "type": "array",
          "description": "Product lines of the factory",
          "items": {
            "type": "string"
          }
        },
        "supplierId": {
          "type": "string",
          "description": "Id of the supplier in client's account"
        },
        "ext1": {
          "type": "string",
          "description": "Customer fields 1 of the factory info in this booking"
        },
        "ext2": {
          "type": "string",
          "description": "Customer fields 2 of the factory info in this booking"
        },
        "ext3": {
          "type": "string",
          "description": "Customer fields 3 of the factory info in this booking"
        },
        "isActive": {
          "type": "string",
          "description": "Indicate if this supplier still can be selected for service"
        }
      },
      "x-apifox-orders": [
        "orderId",
        "id",
        "supplierCode",
        "supplierName",
        "supplierNameCN",
        "supplierMGRName",
        "supplierMGRMobile",
        "supplierMGRNumber",
        "supplierMGREmail",
        "supplierOtherName",
        "supplierOtherMobile",
        "supplierOtherNumber",
        "supplierOtherEmail",
        "supplierAddress",
        "supplierCity",
        "supplierPostCode",
        "supplierCountry",
        "supplierContinentID",
        "supplierProductLines",
        "supplierId",
        "ext1",
        "ext2",
        "ext3",
        "isActive"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiOrderFactoryBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the factory in this booking"
        },
        "factoryId": {
          "type": "string",
          "description": "Id of the factory in client's account"
        },
        "factoryCode": {
          "type": "string",
          "description": "Factory's identification code in client's system"
        },
        "factoryName": {
          "type": "string",
          "description": "Name of the factory"
        },
        "factoryNameCN": {
          "type": "string",
          "description": "Chinese name of the factory"
        },
        "factoryMGRName": {
          "type": "string",
          "description": "Name of the factory contact"
        },
        "factoryMGRMobile": {
          "type": "string",
          "description": "Mobile phone number of the factory contact"
        },
        "factoryMGRNumber": {
          "type": "string",
          "description": "Telephone phone number of the factory contact"
        },
        "factoryMGREmail": {
          "type": "array",
          "description": "Emails of the the factory contact",
          "items": {
            "type": "string"
          }
        },
        "factoryOtherMobile": {
          "type": "string",
          "description": "Mobile phone of the alternative factory contact"
        },
        "factoryOtherName": {
          "type": "string",
          "description": "Name of the alternative factory contact"
        },
        "factoryOtherNumber": {
          "type": "string",
          "description": "Telephone number of the alternative factory contact"
        },
        "factoryOtherEmail": {
          "type": "array",
          "description": "Emails of the the alternative factory contact",
          "items": {
            "type": "string"
          }
        },
        "factoryAddress": {
          "type": "string",
          "description": "Address of the factory"
        },
        "factoryCity": {
          "type": "string",
          "description": "City of the factory"
        },
        "factoryProvince": {
          "type": "string",
          "description": "Province of the factory"
        },
        "factoryCountry": {
          "type": "string",
          "description": "Country of the factory"
        },
        "factoryContinent": {
          "type": "string",
          "description": "Continent of the factory"
        },
        "factoryPostCode": {
          "type": "string",
          "description": "Post code of the factory"
        },
        "factoryProductLines": {
          "type": "array",
          "description": "Product lines of the factory",
          "items": {
            "type": "string"
          }
        },
        "nbOfWorkers": {
          "type": "integer",
          "format": "int32",
          "description": "Number of the workers in the factory"
        },
        "isMutiLocation": {
          "type": "boolean",
          "description": "Indicate if this inspection needs to be done in multiple factories"
        },
        "ext1": {
          "type": "string",
          "description": "Customer fields 1 of the factory info in this booking"
        },
        "ext2": {
          "type": "string",
          "description": "Customer fields 2 of the factory info in this booking"
        },
        "ext3": {
          "type": "string",
          "description": "Customer fields 3 of the factory info in this booking"
        },
        "factoryCityId": {
          "type": "string",
          "description": "City id of the factory in QIMA system"
        }
      },
      "x-apifox-orders": [
        "id",
        "factoryId",
        "factoryCode",
        "factoryName",
        "factoryNameCN",
        "factoryMGRName",
        "factoryMGRMobile",
        "factoryMGRNumber",
        "factoryMGREmail",
        "factoryOtherMobile",
        "factoryOtherName",
        "factoryOtherNumber",
        "factoryOtherEmail",
        "factoryAddress",
        "factoryCity",
        "factoryProvince",
        "factoryCountry",
        "factoryContinent",
        "factoryPostCode",
        "factoryProductLines",
        "nbOfWorkers",
        "isMutiLocation",
        "ext1",
        "ext2",
        "ext3",
        "factoryCityId"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiOrderExtraBean": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "description": "Order id, primary key of the inspection order"
        },
        "cancelable": {
          "type": "boolean",
          "description": "Indicate currently if this booking can be cancelled",
          "example": [
            false
          ]
        },
        "editable": {
          "type": "boolean",
          "description": "Indicate currently if this booking can be modified",
          "example": [
            false
          ]
        },
        "isReInspection": {
          "type": "boolean",
          "description": "Indicate if this inspection is re-inspection",
          "example": [
            false
          ]
        },
        "followUp": {
          "type": "boolean",
          "description": "Indicate if audit is a follow-up audit, when this booking is an audit booking",
          "example": [
            false
          ]
        },
        "originalNbReinsp": {
          "type": "string",
          "description": "The original order number if this booking is an re-inspection",
          "example": [
            "R-Cloud-123456"
          ]
        },
        "reInspectionInstruction": {
          "type": "string",
          "description": "The original order number if this booking is an re-inspection",
          "example": [
            "R-Cloud-123456"
          ]
        },
        "nbOfInspectors": {
          "type": "integer",
          "format": "int32",
          "description": "Inspectors count assigned to this inspection"
        },
        "prevOrderType": {
          "type": "string",
          "description": "Previous service type"
        },
        "prevOrderStatus": {
          "type": "string",
          "description": "Previous order status",
          "example": [
            "OPEN or CLOSED"
          ]
        },
        "prevServiceDate": {
          "type": "string",
          "format": "date-time",
          "description": "Previous service date"
        },
        "prevServiceDateText": {
          "type": "string",
          "description": "Previous service date, the value could be \"Confidential\", date, or a time window."
        },
        "multiSupplierOrder": {
          "type": "boolean"
        },
        "quickBooking": {
          "type": "boolean"
        }
      },
      "x-apifox-orders": [
        "orderId",
        "cancelable",
        "editable",
        "isReInspection",
        "followUp",
        "originalNbReinsp",
        "reInspectionInstruction",
        "nbOfInspectors",
        "prevOrderType",
        "prevOrderStatus",
        "prevServiceDate",
        "prevServiceDateText",
        "multiSupplierOrder",
        "quickBooking"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiOrderGeneralInfoBean": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "description": "Order id, primary key of the inspection order"
        },
        "orderPlacer": {
          "type": "string",
          "description": "The username of account who placed the booking"
        },
        "status": {
          "type": "string",
          "description": "Order status value of the booking, mapping between value and text are 5=DRAFT, 20=WAITING_FOR_VALIDATION, 21=WAITING_FOR_MORE_INF, 25=WAITING_FOR_FEEDBACK, 30=WAITING_FOR_ALLOCATION, 40=WAITING_FOR_INSPECTION, 50=WAITING_FOR_REPORT_VALIDATION, 60=FINISHED, 70=CANCELLED, 80=SERVICE_CUT",
          "example": [
            "5, 20, 30, 40, 60"
          ]
        },
        "statusText": {
          "type": "string",
          "description": "Order status text of the booking",
          "example": [
            "DRAFT, WAITING_FOR_VALIDATION, FINISHED"
          ]
        },
        "serviceType": {
          "type": "string",
          "description": "QIMA inspection service type value 1: PSI (Pre-Shipment Inspection), 2: IPC (Initial Production Check), 3: DUPRO (During Production Inspection) , 4: CLC (Container Loading Check), 6: PM (Production Monitoring), 8: SR (Sample Review), 21: SC (Sample Collection) ",
          "example": [
            "1, 2, 3, 4, 6"
          ]
        },
        "serviceTypeText": {
          "type": "string",
          "description": "QIMA inspection service type text",
          "example": [
            "PSI, IPC, DUPRO, CLC, PM"
          ]
        },
        "bookingDate": {
          "type": "string",
          "description": "Date of the inspection booking is placed, in format dd-MMM-yyyy ",
          "example": [
            "05-Sep-2022"
          ]
        },
        "bookingDateUnixTimestamp": {
          "type": "integer",
          "format": "int64",
          "description": "Date of the inspection booking is placed in unix timestamp",
          "example": [
            1662652800000
          ]
        },
        "orderNumber": {
          "type": "string",
          "description": "QIMA booking order number, like R-Cloud-xx",
          "example": [
            "R-Cloud-1111111"
          ]
        },
        "companyId": {
          "type": "string",
          "description": "Company id in QIMA system",
          "example": [
            "D1242F42B10E4B099038D4878174877E"
          ]
        },
        "userId": {
          "type": "string",
          "description": "QIMA client user id",
          "example": [
            "D1242F42B10E4B099038D4878174877E"
          ]
        },
        "parentCompanyId": {
          "type": "string",
          "description": "Parent company id in QIMA system",
          "example": [
            "D1242F42B10E4B099038D4878174877E"
          ]
        },
        "allowChangeInspectionDate": {
          "type": "boolean",
          "description": "Indicate if in this order is supplier is allowed to change inspection date"
        },
        "supplierValidateCode": {
          "type": "string",
          "description": "Code for supplier to fill when confirming inspection date and location via link in confirmation email",
          "example": [
            "123456"
          ]
        },
        "clientRefNb": {
          "type": "string",
          "description": "Reference number client can use for referencing with QIMA's inspection booking"
        },
        "expectedInspectionDate": {
          "type": "string",
          "description": "Original expected inspection date from client, in dd-MMM-yyyy format",
          "example": [
            "05-Sep-2022"
          ]
        },
        "expectedInspectionDateUnixTimestamp": {
          "type": "integer",
          "format": "int64",
          "description": "Original expected inspection date from client, in unix timestamp format",
          "example": [
            1662652800000
          ]
        },
        "actualInspectionDate": {
          "type": "string",
          "description": "Actual inspection date confirmed with factory, in dd-MMM-yyyy format",
          "example": [
            "05-Sep-2022"
          ]
        },
        "actualInspectionDateUnixTimestamp": {
          "type": "integer",
          "format": "int64",
          "description": "Actual inspection date confirmed with factory, in unix timestamp format",
          "example": [
            1662652800000
          ]
        },
        "expectedShipDate": {
          "type": "string",
          "description": "Original expected shipment date from client, in dd-MMM-yyyy format",
          "example": [
            "05-Sep-2022"
          ]
        },
        "expectedShipDateUnixTimestamp": {
          "type": "integer",
          "format": "int64",
          "description": "Original expected shipment date from client, in unix timestamp format",
          "example": [
            1662652800000
          ]
        },
        "bookFromPreOrder": {
          "type": "string",
          "description": "Previous inspection booking id, need to provide when place re-inspection",
          "example": [
            "D1242F42B10E4B099038D4878174877E"
          ]
        },
        "copyAllMailTo": {
          "type": "array",
          "description": "Email addresses that all email related to order and reports will be copied to",
          "items": {
            "type": "string"
          },
          "example": [
            "a@a.com;b@b.com;c@c.com"
          ]
        },
        "copyReportMailTo": {
          "type": "array",
          "description": "Email addresses that all report related to order and reports will be copied to",
          "items": {
            "type": "string"
          },
          "example": [
            "a@a.com;b@b.com;c@c.com"
          ]
        },
        "inspectionMethod": {
          "$ref": "#/definitions/ConstantMappingBean"
        },
        "container20": {
          "type": "integer",
          "format": "int32",
          "description": "Number of containers (20 inches) - for Container Loading Check (CLC) only"
        },
        "container40": {
          "type": "integer",
          "format": "int32",
          "description": "Number of containers (40 inches) - for Container Loading Check (CLC) only"
        },
        "container40HQ": {
          "type": "integer",
          "format": "int32",
          "description": "Number of containers (60 inches) - for Container Loading Check (CLC) only"
        },
        "customField1": {
          "type": "string",
          "description": "Custom field 1 depends on use case"
        },
        "customField2": {
          "type": "string",
          "description": "Custom field 2 depends on use case"
        },
        "customField3": {
          "type": "string",
          "description": "Custom field 3 depends on use case"
        },
        "performInQimaone": {
          "type": "integer",
          "format": "int32",
          "description": "Inspection perform platform type, 0: Within QSP, 1: In QIMAone from QSP, 2: In QIMAone from QIMAone",
          "example": [
            0
          ]
        },
        "lcnumber": {
          "type": "string"
        },
        "confirmed": {
          "type": "boolean"
        },
        "icneeded": {
          "type": "boolean"
        },
        "lcappName": {
          "type": "string"
        },
        "lcappAddress": {
          "type": "string"
        },
        "lcbeneName": {
          "type": "string"
        },
        "lcbeneAddress": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "orderId",
        "orderPlacer",
        "status",
        "statusText",
        "serviceType",
        "serviceTypeText",
        "bookingDate",
        "bookingDateUnixTimestamp",
        "orderNumber",
        "companyId",
        "userId",
        "parentCompanyId",
        "allowChangeInspectionDate",
        "supplierValidateCode",
        "clientRefNb",
        "expectedInspectionDate",
        "expectedInspectionDateUnixTimestamp",
        "actualInspectionDate",
        "actualInspectionDateUnixTimestamp",
        "expectedShipDate",
        "expectedShipDateUnixTimestamp",
        "bookFromPreOrder",
        "copyAllMailTo",
        "copyReportMailTo",
        "inspectionMethod",
        "container20",
        "container40",
        "container40HQ",
        "customField1",
        "customField2",
        "customField3",
        "performInQimaone",
        "lcnumber",
        "confirmed",
        "icneeded",
        "lcappName",
        "lcappAddress",
        "lcbeneName",
        "lcbeneAddress"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ConstantMappingBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of this system parameter"
        },
        "classification": {
          "type": "string",
          "description": "Type of this system parameter"
        },
        "key": {
          "type": "string",
          "description": "Key name of this system parameter"
        },
        "value": {
          "type": "string",
          "description": "Value name of this system parameter"
        },
        "text": {
          "type": "string",
          "description": "Displaying name of this system parameter"
        },
        "description": {
          "type": "string",
          "description": "Displaying description of this system parameter"
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation time of this system parameter"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Update time of this system parameter"
        },
        "sequence": {
          "type": "integer",
          "format": "int32",
          "description": "Sequence of this system parameter when under same classification"
        }
      },
      "x-apifox-orders": [
        "id",
        "classification",
        "key",
        "value",
        "text",
        "description",
        "createTime",
        "updateTime",
        "sequence"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiBookingDraftBean": {
      "type": "object",
      "properties": {
        "draftId": {
          "type": "string",
          "description": "Id of the booking draft"
        },
        "isAnOrderNotADraft": {
          "type": "boolean",
          "description": "Indicate is this booking is in editing status. Draft means the booking is being edited."
        },
        "draftSteps": {
          "type": "array",
          "description": "Can be ignored",
          "items": {
            "$ref": "#/definitions/DraftStepBean"
          }
        }
      },
      "x-apifox-orders": [
        "draftId",
        "isAnOrderNotADraft",
        "draftSteps"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "DraftStepBean": {
      "type": "object",
      "properties": {
        "current": {
          "type": "boolean"
        },
        "done": {
          "type": "boolean"
        },
        "label": {
          "type": "string"
        },
        "visited": {
          "type": "boolean"
        }
      },
      "x-apifox-orders": [
        "current",
        "done",
        "label",
        "visited"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "InspectionOrder": {
      "type": "object",
      "required": [
        "bookingType",
        "products",
        "serviceDate",
        "serviceType",
        "shipDate",
        "userId"
      ],
      "properties": {
        "userId": {
          "type": "string",
          "description": "QIMA client user id",
          "example": [
            "7CCBF38CD28F46C584CF530EE28F9AEF"
          ]
        },
        "serviceDate": {
          "type": "string",
          "description": "Planed inspection date, format should be in dd-MMM-yyyy",
          "example": [
            "19-Dec-2022"
          ]
        },
        "shipDate": {
          "type": "string",
          "description": "Planed shipment date, format should be in dd-MMM-yyyy",
          "example": [
            "20-Dec-2022"
          ]
        },
        "serviceType": {
          "type": "string",
          "description": "QIMA inspection service type, mandatory if previousOrderNumber not provided. Here is the mapping, 1: PSI (Pre-Shipment Inspection), 2: IPC (Initial Production Check), 3: DUPRO (During Production Inspection) , 4: CLC (Container Loading Check), 6: PM (Production Monitoring), 8: SR (Sample Review), 21: SC (Sample Collection) ",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "6",
            "7",
            "8",
            "21"
          ],
          "example": [
            "1"
          ]
        },
        "bookingType": {
          "type": "string",
          "description": "QIMA inspection type",
          "example": [
            "General, Textile, Fabric"
          ]
        },
        "previousOrderNumber": {
          "type": "string",
          "description": "Previous QIMA inspection reference R-Cloud number, must provide a valid R-Cloud number if it's re-inspection, example value: R-Cloud-xxxx"
        },
        "referenceNumber": {
          "type": "string",
          "description": "Client reference number",
          "example": [
            "Client own reference number"
          ]
        },
        "supplierId": {
          "type": "string",
          "description": "QIMA supplier id"
        },
        "supplierCode": {
          "type": "string",
          "description": "Supplier's identification code in client's system, mandatory when supplier name, city id, contact not provided, and must be a valid code"
        },
        "supplierName": {
          "type": "string",
          "description": "Mandatory when supplier code is not provided"
        },
        "supplierContactName": {
          "type": "string",
          "description": "Mandatory when supplier code is not provided"
        },
        "supplierContactPhone": {
          "type": "string",
          "description": "Mandatory when supplier code is not provided"
        },
        "supplierContactEmail": {
          "type": "string",
          "description": "Mandatory when supplier code is not provided"
        },
        "supplierContinentID": {
          "type": "string",
          "description": "Supplier's continent id in QIMA's system, refer to /parameter/v2/continents. Mandatory when supplier code is not provided"
        },
        "supplierCountryID": {
          "type": "string",
          "description": "Supplier's country id in QIMA's system, refer to /parameter/v2/countries, /parameter/v2/countries or /parameter/v2/continent/{continentId}/countries. Mandatory when supplier code is not provided"
        },
        "supplierProvinceID": {
          "type": "string",
          "description": "Supplier's Province id in QIMA's system, refer to /parameter/v2/country/{countryId}/provinces. Mandatory when supplier code is not provided"
        },
        "supplierCityID": {
          "type": "string",
          "description": "Supplier's city id in QIMA's system, refer to /parameter/v2/country/{countryId}/searchCities, /parameter/v2/province/{provinceId}/searchCities or /parameter/v2/country/{countryId}/cities. Mandatory when supplier code is not provided"
        },
        "supplierAddress": {
          "type": "string",
          "description": "Mandatory when supplier code is not provided"
        },
        "supplierProductLines": {
          "type": "array",
          "description": "Mandatory when supplier code is not provided, get product line from /parameter/v2/product-families API",
          "items": {
            "type": "string"
          },
          "example": [
            "[\"bigCat1_s2\", \"bigCat1_s3\"]"
          ]
        },
        "supplierAlternateContactName": {
          "type": "string",
          "description": "Supplier's alternative contact name"
        },
        "supplierAlternateContactPhone": {
          "type": "string",
          "description": "Supplier's alternative contact telephone"
        },
        "supplierAlternateContactEmail": {
          "type": "string",
          "description": "Supplier's alternative contact email"
        },
        "factoryCode": {
          "type": "string",
          "description": "Factory's identification code in client's system, mandatory when auto confirm factory is needed and factory other info are not provided"
        },
        "factoryName": {
          "type": "string",
          "description": "Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryContactName": {
          "type": "string",
          "description": "Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryContactPhone": {
          "type": "string",
          "description": "Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryContactEmail": {
          "type": "string",
          "description": "Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryContinentID": {
          "type": "string",
          "description": "Factory's continent id in QIMA's system, refer to /parameter/v2/continents. Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryCountryID": {
          "type": "string",
          "description": "Factory's country id in QIMA's system, refer to /parameter/v2/countries. Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryProvinceID": {
          "type": "string",
          "description": "Factory's province id in QIMA's system, refer to /parameter/v2/country/{countryId}/provinces. Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryCityID": {
          "type": "string",
          "description": "Factory's city id in QIMA's system, refer to /parameter/v2/country/{countryId}/searchCities. Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryAddress": {
          "type": "string",
          "description": "Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryPostCode": {
          "type": "string",
          "description": "Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryProductLines": {
          "type": "array",
          "description": "Mandatory when auto confirm factory is needed and factory code is not provided, get product line from /parameter/v2/product-families API",
          "items": {
            "type": "string"
          },
          "example": [
            "[\"bigCat1_s2\", \"bigCat1_s3\"]"
          ]
        },
        "factoryAlternateContactName": {
          "type": "string",
          "description": "Name of the alternative factory contact"
        },
        "factoryAlternateContactPhone": {
          "type": "string",
          "description": "Telephone of the alternative factory contact"
        },
        "factoryAlternateContactEmail": {
          "type": "string",
          "description": "Email of the alternative factory contact"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InspectionProduct"
          }
        },
        "customField1": {
          "type": "string",
          "description": "Order level custom field 1 depends on use case"
        },
        "customField2": {
          "type": "string",
          "description": "Order level custom field w depends on use case"
        },
        "customField3": {
          "type": "string",
          "description": "Order level custom field 3 depends on use case"
        },
        "performInQimaone": {
          "type": "integer",
          "format": "int32",
          "description": "Inspection perform platform type, 0: Within QSP, 1: In QIMAone from QSP, 2: In QIMAone from QIMAone",
          "example": [
            0
          ]
        }
      },
      "x-apifox-orders": [
        "userId",
        "serviceDate",
        "shipDate",
        "serviceType",
        "bookingType",
        "previousOrderNumber",
        "referenceNumber",
        "supplierId",
        "supplierCode",
        "supplierName",
        "supplierContactName",
        "supplierContactPhone",
        "supplierContactEmail",
        "supplierContinentID",
        "supplierCountryID",
        "supplierProvinceID",
        "supplierCityID",
        "supplierAddress",
        "supplierProductLines",
        "supplierAlternateContactName",
        "supplierAlternateContactPhone",
        "supplierAlternateContactEmail",
        "factoryCode",
        "factoryName",
        "factoryContactName",
        "factoryContactPhone",
        "factoryContactEmail",
        "factoryContinentID",
        "factoryCountryID",
        "factoryProvinceID",
        "factoryCityID",
        "factoryAddress",
        "factoryPostCode",
        "factoryProductLines",
        "factoryAlternateContactName",
        "factoryAlternateContactPhone",
        "factoryAlternateContactEmail",
        "products",
        "customField1",
        "customField2",
        "customField3",
        "performInQimaone"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "InspectionProduct": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the inspection product"
        },
        "categoryId": {
          "type": "string",
          "description": "Product category id, refer to /parameter/v2/product-categories"
        },
        "familyId": {
          "type": "string",
          "description": "Product family id, refer to /parameter/v2/product-families"
        },
        "typeId": {
          "type": "string",
          "description": "Product type id, refer to /parameter/v2/product-types"
        },
        "prodReference": {
          "type": "string",
          "description": "Product level product reference, please leave this empty when multi-reference booking is enabled in account level"
        },
        "prodDivision": {
          "type": "string",
          "description": "Division name that this product belongs to in client's company",
          "example": [
            "Womenswear"
          ]
        },
        "poNumber": {
          "type": "string",
          "description": "Product level PO number, please leave this empty when multi-reference booking is enabled in account level and fill po number under refs"
        },
        "prodQuantity": {
          "type": "integer",
          "format": "int64",
          "description": "Product level product quantity, please leave this empty when multi-reference booking is enabled in account level and fill product quantity under refs"
        },
        "expectedFinishedPct": {
          "type": "integer",
          "format": "int32",
          "description": "Percentage of the expected production finished productions for inspection",
          "example": [
            90
          ]
        },
        "expectedPackedPct": {
          "type": "integer",
          "format": "int32",
          "description": "Percentage of the expected packed production for inspection",
          "example": [
            100
          ]
        },
        "unitPacking": {
          "type": "string",
          "description": "Optional field in the product level to define unit packing comments"
        },
        "outerPacking": {
          "type": "string",
          "description": "Optional field in the product level to define outer packing comments"
        },
        "sampleReferenceClientComments": {
          "type": "string",
          "description": "Optional field in the product level to define sample comments"
        },
        "customField1": {
          "type": "string",
          "description": "Product level custom field 1 depends on use case"
        },
        "customField2": {
          "type": "string",
          "description": "Product level custom field 2 depends on use case"
        },
        "customField3": {
          "type": "string",
          "description": "Product level custom field 3 depends on use case"
        },
        "refs": {
          "type": "array",
          "description": "Product reference level info, used when multi-reference booking is enabled in account level",
          "items": {
            "$ref": "#/definitions/InspectionProductRef"
          }
        },
        "checkList": {
          "$ref": "#/definitions/InspectionProductCheckList"
        }
      },
      "x-apifox-orders": [
        "name",
        "categoryId",
        "familyId",
        "typeId",
        "prodReference",
        "prodDivision",
        "poNumber",
        "prodQuantity",
        "expectedFinishedPct",
        "expectedPackedPct",
        "unitPacking",
        "outerPacking",
        "sampleReferenceClientComments",
        "customField1",
        "customField2",
        "customField3",
        "refs",
        "checkList"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "InspectionProductCheckList": {
      "type": "object",
      "properties": {
        "prodSampleLevel": {
          "type": "string",
          "description": "Product sample level",
          "example": [
            "I, II"
          ]
        },
        "prodSampleSize": {
          "type": "integer",
          "format": "int32",
          "description": "Product sample size",
          "example": [
            125
          ]
        },
        "aqlCritical": {
          "type": "string",
          "description": "Allowed AQL in critical level",
          "example": [
            "0"
          ]
        },
        "aqlMajor": {
          "type": "string",
          "description": "Allowed AQL in major level",
          "example": [
            "1"
          ]
        },
        "aqlMinor": {
          "type": "string",
          "description": "Allowed AQL in minor level",
          "example": [
            "3"
          ]
        },
        "prodMeasurementSampleSize": {
          "type": "integer",
          "format": "int32",
          "description": "Product measurement sample size",
          "example": [
            20
          ]
        },
        "prodMeasurementSampleLevel": {
          "type": "string",
          "description": "Product measurement sample level",
          "example": [
            "S3"
          ]
        }
      },
      "x-apifox-orders": [
        "prodSampleLevel",
        "prodSampleSize",
        "aqlCritical",
        "aqlMajor",
        "aqlMinor",
        "prodMeasurementSampleSize",
        "prodMeasurementSampleLevel"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "InspectionProductRef": {
      "type": "object",
      "required": [
        "qty"
      ],
      "properties": {
        "poNumber": {
          "type": "string",
          "description": "Reference level PO number, fill this when multi-reference booking is enabled in account level"
        },
        "skuCode": {
          "type": "string",
          "description": "Reference level SKU code, fill this when multi-reference booking is enabled in account level"
        },
        "qty": {
          "type": "integer",
          "format": "int32",
          "description": "Reference level product quantity, fill this when multi-reference booking is enabled in account level"
        },
        "brand": {
          "type": "string",
          "description": "Reference level brand name, fill this when multi-reference booking is enabled in account level"
        },
        "customField1": {
          "type": "string",
          "description": "Product level custom field 1 depends on use case"
        },
        "customField2": {
          "type": "string",
          "description": "Product level custom field 2 depends on use case"
        },
        "customField3": {
          "type": "string",
          "description": "Product level custom field 3 depends on use case"
        },
        "customField4": {
          "type": "string",
          "description": "Product level custom field 4 depends on use case"
        },
        "customField5": {
          "type": "string",
          "description": "Product level custom field 5 depends on use case"
        },
        "customField6": {
          "type": "string",
          "description": "Product level custom field 6 depends on use case"
        },
        "customField7": {
          "type": "string",
          "description": "Product level custom field 7 depends on use case"
        },
        "customField8": {
          "type": "string",
          "description": "Product level custom field 8 depends on use case"
        },
        "customField9": {
          "type": "string",
          "description": "Product level custom field 9 depends on use case"
        },
        "customField10": {
          "type": "string",
          "description": "Product level custom field 10 depends on use case"
        },
        "customField11": {
          "type": "string",
          "description": "Product level custom field 11 depends on use case"
        },
        "customField12": {
          "type": "string",
          "description": "Product level custom field 12 depends on use case"
        }
      },
      "x-apifox-orders": [
        "poNumber",
        "skuCode",
        "qty",
        "brand",
        "customField1",
        "customField2",
        "customField3",
        "customField4",
        "customField5",
        "customField6",
        "customField7",
        "customField8",
        "customField9",
        "customField10",
        "customField11",
        "customField12"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiInspectionOrderBean": {
      "type": "object",
      "properties": {
        "draft": {
          "$ref": "#/definitions/ApiBookingDraftBean"
        },
        "orderGeneralInfo": {
          "$ref": "#/definitions/ApiOrderGeneralInfoBean"
        },
        "orderExtra": {
          "$ref": "#/definitions/ApiOrderExtraBean"
        },
        "orderFactory": {
          "$ref": "#/definitions/ApiOrderFactoryBean"
        },
        "orderSupplier": {
          "$ref": "#/definitions/ApiOrderSupplierBean"
        },
        "orderPrice": {
          "$ref": "#/definitions/ApiOrderPriceMandayViewBean"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiInspectionProductBookingBean"
          }
        }
      },
      "x-apifox-orders": [
        "draft",
        "orderGeneralInfo",
        "orderExtra",
        "orderFactory",
        "orderSupplier",
        "orderPrice",
        "products"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiOrderPriceMandayViewBean": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "description": "Order id of this product in this booking"
        },
        "draftId": {
          "type": "string",
          "description": "Id of the inspection booking draft"
        },
        "totalManday": {
          "type": "number",
          "format": "double",
          "description": "Total charged man day"
        },
        "totalCharge": {
          "type": "number",
          "format": "double",
          "description": "Total price of this service order"
        },
        "totalMandayByClient": {
          "type": "number",
          "format": "double",
          "description": "Total man day booked by client"
        },
        "inspectionChargeType": {
          "type": "string",
          "description": "Charge type of this service",
          "enum": [
            "MAN_DAY",
            "POCHARGE",
            "QC_UNIT"
          ],
          "example": [
            "Per man day, per PO, per QC unit"
          ]
        },
        "totalInspectionUnit": {
          "type": "number",
          "format": "double",
          "description": "Total man day booked by client"
        },
        "inspUnitPrice": {
          "type": "number",
          "format": "double",
          "description": "Unit price of inspection service"
        },
        "inspectionCharge": {
          "type": "number",
          "format": "double",
          "description": "Charges of inspection service"
        },
        "expressBookingFee": {
          "type": "number",
          "format": "double",
          "description": "Fee when there is booking is placed late"
        },
        "totalQuantity": {
          "type": "number",
          "format": "double",
          "description": "Total quantity of the product"
        },
        "sampleLevel": {
          "type": "string",
          "description": "Sampling level, default to II",
          "example": [
            "II"
          ]
        },
        "sampleSizeUnit": {
          "type": "string",
          "description": "Unit of the sampling size, default to pcs",
          "example": [
            "pcs"
          ]
        },
        "sampleSizeTotal": {
          "type": "number",
          "format": "double",
          "description": "Total sample size",
          "example": [
            300
          ]
        },
        "measurementSampleLevel": {
          "type": "string",
          "description": "Sample level in measurement, default to S4",
          "example": [
            "S4"
          ]
        },
        "measurementSampleQuantity": {
          "type": "integer",
          "format": "int32",
          "description": "Picked quantity in measurement",
          "example": [
            50
          ]
        },
        "fabricSampleLevel": {
          "type": "string",
          "description": "Sample level when inspection type is fabric",
          "example": [
            "I"
          ]
        },
        "nbOfContainers": {
          "type": "integer",
          "format": "int32",
          "description": "How many containers in this service"
        },
        "sampleCollectionRequestByClient": {
          "type": "boolean",
          "description": "Indicate if this sample collection is requested by client"
        },
        "sampleCharge": {
          "type": "number",
          "format": "double",
          "description": "Charge of sampling"
        },
        "sampleCollectionRate": {
          "type": "number",
          "format": "double",
          "description": "Unit price of sample collection"
        },
        "nbOfExtraReports": {
          "type": "integer",
          "format": "int32",
          "description": "How many extra reports in this service"
        },
        "extraReportRate": {
          "type": "number",
          "format": "double",
          "description": "Unit price of extra report"
        },
        "extraReportCharge": {
          "type": "number",
          "format": "double",
          "description": "Total price of extra report"
        },
        "pointsQtyToInspect": {
          "type": "integer",
          "format": "int32",
          "description": "Total measurement"
        },
        "taxAmount": {
          "type": "number",
          "format": "double",
          "description": "Total tax amount"
        },
        "otherAuditRate": {
          "type": "number",
          "format": "double",
          "description": "Audit unit price in other types"
        },
        "countryNb": {
          "type": "integer",
          "format": "int32",
          "description": "Useless now, can be ignored"
        },
        "optionalQuantity": {
          "type": "integer",
          "format": "int32",
          "description": "Quantity of optional service in manufacture audit"
        },
        "optionalUnitPrice": {
          "type": "number",
          "format": "double",
          "description": "Unit price of optional service in manufacture audit"
        },
        "optionalCharge": {
          "type": "number",
          "format": "double",
          "description": "Total charge of optional service in manufacture audit"
        },
        "otherChargeName": {
          "type": "string",
          "description": "Service name of optional service in manufacture audit"
        },
        "factoryWorkers": {
          "type": "string",
          "description": "How many workers in the factory"
        },
        "auditNbOfMDBookedByClient": {
          "type": "number",
          "format": "double",
          "description": "Client booked man day for audit service"
        },
        "auditUnitPrice": {
          "type": "number",
          "format": "double",
          "description": "Unit price of audit service"
        },
        "auditPrice": {
          "type": "number",
          "format": "double",
          "description": "Total price of audit service"
        },
        "nbOfMDSpent": {
          "type": "integer",
          "format": "int32",
          "description": "Total spent man day of audit service"
        },
        "mdRequested": {
          "type": "number",
          "format": "double",
          "description": "Client request man day of audit service"
        },
        "sampleCollectedAndSentByAI": {
          "type": "boolean",
          "description": "Indicate if sample collection is done by QIMA",
          "example": [
            false
          ]
        },
        "otherCharge": {
          "type": "number",
          "format": "double",
          "description": "Amount of other charges in this service"
        },
        "offlineCharge": {
          "type": "number",
          "format": "double",
          "description": "Charge when payment is made after service completed"
        },
        "productPriceMandayViews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiProductPriceMandayViewBean"
          }
        },
        "orderChargeItemVos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderChargeItemVo"
          }
        }
      },
      "x-apifox-orders": [
        "orderId",
        "draftId",
        "totalManday",
        "totalCharge",
        "totalMandayByClient",
        "inspectionChargeType",
        "totalInspectionUnit",
        "inspUnitPrice",
        "inspectionCharge",
        "expressBookingFee",
        "totalQuantity",
        "sampleLevel",
        "sampleSizeUnit",
        "sampleSizeTotal",
        "measurementSampleLevel",
        "measurementSampleQuantity",
        "fabricSampleLevel",
        "nbOfContainers",
        "sampleCollectionRequestByClient",
        "sampleCharge",
        "sampleCollectionRate",
        "nbOfExtraReports",
        "extraReportRate",
        "extraReportCharge",
        "pointsQtyToInspect",
        "taxAmount",
        "otherAuditRate",
        "countryNb",
        "optionalQuantity",
        "optionalUnitPrice",
        "optionalCharge",
        "otherChargeName",
        "factoryWorkers",
        "auditNbOfMDBookedByClient",
        "auditUnitPrice",
        "auditPrice",
        "nbOfMDSpent",
        "mdRequested",
        "sampleCollectedAndSentByAI",
        "otherCharge",
        "offlineCharge",
        "productPriceMandayViews",
        "orderChargeItemVos"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OrderChargeItemVo": {
      "type": "object",
      "properties": {
        "chargeType": {
          "$ref": "#/definitions/ConstantMappingBean"
        },
        "orderChargeItem": {
          "$ref": "#/definitions/OrderChargeItem"
        }
      },
      "x-apifox-orders": [
        "chargeType",
        "orderChargeItem"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OrderChargeItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "chargeTypeId": {
          "type": "string"
        },
        "charge": {
          "type": "number"
        },
        "comments": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "rate": {
          "type": "number"
        },
        "multiplier": {
          "type": "integer",
          "format": "int32"
        }
      },
      "x-apifox-orders": [
        "id",
        "orderId",
        "chargeTypeId",
        "charge",
        "comments",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "rate",
        "multiplier"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiProductPriceMandayViewBean": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string",
          "description": "Id of this product"
        },
        "productName": {
          "type": "string",
          "description": "Name of this product"
        },
        "draftProductId": {
          "type": "string",
          "description": "Id of the product id in this booking booking draft"
        },
        "productManday": {
          "type": "number",
          "format": "double",
          "description": "Service Man day in product level"
        },
        "inspUnitPrice": {
          "type": "number",
          "format": "double",
          "description": "Inspection service unit price"
        },
        "sampleLevel": {
          "type": "string",
          "description": "Sample level in product level"
        },
        "sampleSizeUnit": {
          "type": "string",
          "description": "Unit of sample size"
        },
        "mdNb": {
          "type": "integer",
          "format": "int32",
          "description": "Number of service man day"
        },
        "mdp": {
          "type": "number",
          "format": "double",
          "description": "Number of service man day in product level"
        },
        "aqlQuantityLog": {
          "type": "number",
          "format": "double",
          "description": "Same as sample size in product level"
        },
        "sampleSize": {
          "type": "number",
          "format": "double",
          "description": "Sample size in product level"
        },
        "maxRefPerMD": {
          "type": "number",
          "format": "double",
          "description": "Maximum references can be inspected in 1 man day"
        },
        "normalCurrentMd": {
          "type": "number",
          "format": "double",
          "description": "Useless now, can be ignored"
        },
        "mdPerRef": {
          "type": "number",
          "format": "double",
          "description": "Useless now, can be ignored"
        },
        "aqlQuantity": {
          "type": "number",
          "format": "double"
        },
        "nbPerMd": {
          "type": "number",
          "format": "double"
        },
        "maxNbPerMd": {
          "type": "number",
          "format": "double"
        },
        "fabricSampleLevel": {
          "type": "string",
          "description": "Sample level when inspection type is 'Fabric'"
        },
        "totalFabricLength": {
          "type": "integer",
          "format": "int32",
          "description": "Total length when inspection type is 'Fabric'"
        },
        "rightFabricLength": {
          "type": "number",
          "format": "double",
          "description": "Useless now, can be ignored"
        },
        "sampleLevelWorkManShip": {
          "type": "string",
          "description": "Workman ship when inspection type is 'Textile'"
        },
        "sampleLevelMeasurement": {
          "type": "string",
          "description": "Measurement when inspection type is 'Textile'"
        },
        "totalSampleSizeWorkManShip": {
          "type": "number",
          "format": "double",
          "description": "Total workman ship sample size when inspection type is 'Textile'"
        },
        "totalSampleSizeMeasurement": {
          "type": "integer",
          "format": "int32",
          "description": "Total sample size when inspection type is 'Textile'"
        },
        "mdByMeasurementLog": {
          "type": "number",
          "format": "double",
          "description": "Man day of measurement when inspection type is 'Textile'"
        },
        "measurementAqlQuantityLog": {
          "type": "integer",
          "format": "int32",
          "description": "Same as totalSampleSizeMeasurement, when inspection type is 'Textile' "
        },
        "totalMeasurementAqlLog": {
          "type": "integer",
          "format": "int32",
          "description": "Total measurement AQL, when inspection type is 'Textile'"
        },
        "nbMeasurementPerMdLog": {
          "type": "number",
          "format": "double",
          "description": "Number of measurement per man day, when inspection type is 'Textile'"
        },
        "prodRefAqlSampleViews": {
          "type": "array",
          "description": "Useless now, can be ignored",
          "items": {
            "$ref": "#/definitions/ApiProductRefAqlViewBean"
          }
        }
      },
      "x-apifox-orders": [
        "productId",
        "productName",
        "draftProductId",
        "productManday",
        "inspUnitPrice",
        "sampleLevel",
        "sampleSizeUnit",
        "mdNb",
        "mdp",
        "aqlQuantityLog",
        "sampleSize",
        "maxRefPerMD",
        "normalCurrentMd",
        "mdPerRef",
        "aqlQuantity",
        "nbPerMd",
        "maxNbPerMd",
        "fabricSampleLevel",
        "totalFabricLength",
        "rightFabricLength",
        "sampleLevelWorkManShip",
        "sampleLevelMeasurement",
        "totalSampleSizeWorkManShip",
        "totalSampleSizeMeasurement",
        "mdByMeasurementLog",
        "measurementAqlQuantityLog",
        "totalMeasurementAqlLog",
        "nbMeasurementPerMdLog",
        "prodRefAqlSampleViews"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiProductRefAqlViewBean": {
      "type": "object",
      "properties": {
        "draftId": {
          "type": "string",
          "description": "Id of the inspection booking draft"
        },
        "productId": {
          "type": "string",
          "description": "Product id of this product reference belongs to"
        },
        "productRefId": {
          "type": "string",
          "description": "Product reference id"
        },
        "aqlCritical": {
          "type": "string",
          "description": "Allowed AQL in critical level in this product reference"
        },
        "aqlMajor": {
          "type": "string",
          "description": "Allowed AQL in major level in this product reference"
        },
        "aqlMinor": {
          "type": "string",
          "description": "Allowed AQL in minor level in this product reference"
        },
        "measurementAql": {
          "type": "string"
        },
        "fabricSampleLevel": {
          "type": "string"
        },
        "sampleLevel": {
          "type": "string"
        },
        "measurementSampleLevel": {
          "type": "string"
        },
        "sampleSize": {
          "type": "number",
          "format": "double"
        },
        "measurementSampleSize": {
          "type": "integer",
          "format": "int32"
        },
        "totalMeasurements": {
          "type": "integer",
          "format": "int32"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "Quantity in product reference level"
        },
        "quantityUnit": {
          "type": "string",
          "description": "Unit of the product quantity"
        },
        "manDay": {
          "type": "number",
          "format": "double",
          "description": "Man day in product reference level"
        },
        "bookingType": {
          "type": "string",
          "description": "Booking type in product reference level"
        },
        "poNumber": {
          "type": "string",
          "description": "PO number"
        },
        "skuNumber": {
          "type": "string",
          "description": "SKU number"
        },
        "seqNumber": {
          "type": "string",
          "description": "Sequence number"
        },
        "fabricMaxPenalty": {
          "type": "integer",
          "format": "int32"
        },
        "fabricMaxAverage": {
          "type": "integer",
          "format": "int32"
        },
        "fabricMaxPenaltyUnit": {
          "type": "string"
        },
        "fabricMaxAverageUnit": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "draftId",
        "productId",
        "productRefId",
        "aqlCritical",
        "aqlMajor",
        "aqlMinor",
        "measurementAql",
        "fabricSampleLevel",
        "sampleLevel",
        "measurementSampleLevel",
        "sampleSize",
        "measurementSampleSize",
        "totalMeasurements",
        "quantity",
        "quantityUnit",
        "manDay",
        "bookingType",
        "poNumber",
        "skuNumber",
        "seqNumber",
        "fabricMaxPenalty",
        "fabricMaxAverage",
        "fabricMaxPenaltyUnit",
        "fabricMaxAverageUnit"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiAuditBookingBean": {
      "type": "object",
      "properties": {
        "invalidSupplier": {
          "type": "boolean"
        },
        "draft": {
          "$ref": "#/definitions/ApiBookingDraftBean"
        },
        "orderGeneralInfo": {
          "$ref": "#/definitions/ApiOrderGeneralInfoBean"
        },
        "orderExtra": {
          "$ref": "#/definitions/ApiOrderExtraBean"
        },
        "orderFactory": {
          "$ref": "#/definitions/ApiOrderFactoryBean"
        },
        "orderSupplier": {
          "$ref": "#/definitions/ApiOrderSupplierBean"
        },
        "orderAuditGeneral": {
          "$ref": "#/definitions/ApiOrderAuditGeneralBean"
        },
        "orderAuditFieldsList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiOrderAuditFieldsBean"
          }
        },
        "auditGuidelineOtherFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiAuditGuidelineFieldBean"
          }
        }
      },
      "x-apifox-orders": [
        "invalidSupplier",
        "draft",
        "orderGeneralInfo",
        "orderExtra",
        "orderFactory",
        "orderSupplier",
        "orderAuditGeneral",
        "orderAuditFieldsList",
        "auditGuidelineOtherFields"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiAuditGuidelineFieldBean": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string",
          "description": "The name of field"
        },
        "refValue": {
          "type": "string",
          "description": "Id to parm_classified_keyvalue"
        },
        "textValue": {
          "type": "string",
          "description": "Text value"
        }
      },
      "x-apifox-orders": [
        "fieldName",
        "refValue",
        "textValue"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiOrderAuditFieldsBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of order audit fields"
        },
        "orderId": {
          "type": "string",
          "description": "The id of order"
        },
        "fieldType": {
          "type": "string",
          "description": "The type of field, 1 : mandatory; 2 : optional; 3 : specific, 4 : EA_SA8000; 5 : EA_SMETA"
        },
        "fieldId": {
          "type": "string",
          "description": "The id of field"
        },
        "specificField": {
          "type": "string",
          "description": "Audit order specific field"
        },
        "weight": {
          "type": "string",
          "description": "The weight of audit order"
        },
        "selected": {
          "type": "boolean",
          "description": "If true then pass 1 to psi, else pass 0"
        },
        "fieldName": {
          "type": "string",
          "description": "The name of field"
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "classification": {
          "type": "string",
          "description": "Classification"
        },
        "fieldVersion": {
          "type": "integer",
          "format": "int32",
          "description": "The version of field"
        }
      },
      "x-apifox-orders": [
        "id",
        "orderId",
        "fieldType",
        "fieldId",
        "specificField",
        "weight",
        "selected",
        "fieldName",
        "description",
        "classification",
        "fieldVersion"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiOrderAuditGeneralBean": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "description": "Id of the order"
        },
        "sampleSize": {
          "type": "string",
          "description": "The size of sample, when >=500 pass 1, else pass 0"
        },
        "contactFactoryOrNot": {
          "type": "boolean",
          "description": "Pass 1 to psi if true, else 0"
        },
        "generalComment": {
          "type": "string",
          "description": "General comment"
        },
        "guidelines": {
          "type": "integer",
          "format": "int32",
          "description": "The guidelines of audit, ai ethical: 0, smeta 2 pillar: 1, smeta 4 pillar: 2"
        },
        "totalNumberOfBuilding": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of building"
        },
        "factoryAreaSqm": {
          "type": "integer",
          "format": "int32",
          "description": "Factory Area in SQM"
        },
        "additionalComment": {
          "type": "string",
          "description": "Additional comment"
        },
        "poNumber": {
          "type": "string",
          "description": "The number of PO"
        },
        "announcementType": {
          "type": "string",
          "description": "Audit order announcement type",
          "enum": [
            "Announced",
            "Semi-Announced",
            "Un-Announced"
          ],
          "example": [
            "Announced"
          ]
        },
        "auditWindowFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Audit window from date, format should be in dd-MMM-yyyy",
          "example": [
            "19-Dec-2022"
          ]
        },
        "auditWindowTo": {
          "type": "string",
          "format": "date-time",
          "description": "Audit window to date, format should be in dd-MMM-yyyy",
          "example": [
            "20-Dec-2022"
          ]
        },
        "auditWindowUnAvailableDays": {
          "type": "array",
          "description": "The unavailable days of audit window",
          "items": {
            "type": "string"
          }
        },
        "auditDivision": {
          "type": "string",
          "description": "The division of audit"
        },
        "prodName": {
          "type": "string",
          "description": "The name of product"
        },
        "clientAuditProgram": {
          "type": "string",
          "description": "Client audit program"
        },
        "additiveFactors": {
          "type": "string",
          "description": "Additive factors"
        }
      },
      "x-apifox-orders": [
        "orderId",
        "sampleSize",
        "contactFactoryOrNot",
        "generalComment",
        "guidelines",
        "totalNumberOfBuilding",
        "factoryAreaSqm",
        "additionalComment",
        "poNumber",
        "announcementType",
        "auditWindowFrom",
        "auditWindowTo",
        "auditWindowUnAvailableDays",
        "auditDivision",
        "prodName",
        "clientAuditProgram",
        "additiveFactors"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "AuditOrder": {
      "type": "object",
      "required": [
        "factoryAreaSqm",
        "serviceDate",
        "shipDate",
        "supplierAddress",
        "supplierContactEmail",
        "supplierContactName",
        "supplierContactPhone",
        "supplierContinentID",
        "supplierName",
        "supplierProductLines",
        "totalNumberOfBuilding",
        "userId",
        "workersCount"
      ],
      "properties": {
        "userId": {
          "type": "string",
          "description": "QIMA client user id",
          "example": [
            "7CCBF38CD28F46C584CF530EE28F9AEF"
          ]
        },
        "serviceDate": {
          "type": "string",
          "description": "Planed inspection date, format should be in dd-MMM-yyyy",
          "example": [
            "19-Dec-2022"
          ]
        },
        "shipDate": {
          "type": "string",
          "description": "Planed shipment date, format should be in dd-MMM-yyyy",
          "example": [
            "20-Dec-2022"
          ]
        },
        "serviceType": {
          "type": "string",
          "description": "QIMA audit service type, mandatory if previousOrderNumber not provided. Here is the mapping, ma: Manufacturing Audit, ea: Ethical Audit, enva: Environmental Audit, dr: Desktop Review, ghp: Food Hygiene Audits, gmp: Food Good Manufacturing Practices Audits, gfsi: Food Certified, ctpat: C-TPAT Audit, stra: Structural Audit",
          "enum": [
            "ma",
            "ea",
            "enva",
            "dr",
            "ghp",
            "gmp",
            "gfsi",
            "ctpat",
            "stra"
          ],
          "example": [
            "ghp"
          ]
        },
        "referenceNumber": {
          "type": "string",
          "description": "Client reference number",
          "example": [
            "Client own reference number"
          ]
        },
        "factoryAreaSqm": {
          "type": "integer",
          "format": "int32",
          "description": "Factory area in SQM"
        },
        "totalNumberOfBuilding": {
          "type": "string",
          "description": "Total number of building"
        },
        "announcementType": {
          "type": "string",
          "description": "Audit order announcement type",
          "enum": [
            "Announced",
            "Semi-Announced",
            "Un-Announced"
          ],
          "example": [
            "Announced"
          ]
        },
        "workersCount": {
          "type": "integer",
          "format": "int32",
          "description": "The count of workers"
        },
        "auditWindowFrom": {
          "type": "string",
          "description": "Audit window from date, format should be in dd-MMM-yyyy",
          "example": [
            "19-Dec-2022"
          ]
        },
        "auditWindowTo": {
          "type": "string",
          "description": "Audit window to date, format should be in dd-MMM-yyyy",
          "example": [
            "20-Dec-2022"
          ]
        },
        "additionalComment": {
          "type": "string",
          "description": "The additional comment of audit order"
        },
        "supplierCode": {
          "type": "string",
          "description": "Supplier's identification code in client's system, mandatory when supplier name, city id, contact not provided, and must be a valid code"
        },
        "supplierName": {
          "type": "string",
          "description": "Supplier's name"
        },
        "supplierContactName": {
          "type": "string",
          "description": "Supplier's contact name"
        },
        "supplierContactPhone": {
          "type": "string",
          "description": "Supplier's contact phone"
        },
        "supplierContactEmail": {
          "type": "string",
          "description": "Supplier's contact email"
        },
        "supplierContinentID": {
          "type": "string",
          "description": "Supplier's continent id in QIMA's system, refer to /parameter/v2/continents. Mandatory when supplier code is not provided"
        },
        "supplierCountryID": {
          "type": "string",
          "description": "Supplier's country id in QIMA's system, refer to /parameter/v2/countries, /parameter/v2/countries or /parameter/v2/continent/{continentId}/countries. Mandatory when supplier code is not provided"
        },
        "supplierCityID": {
          "type": "string",
          "description": "Supplier's city id in QIMA's system, refer to /parameter/v2/country/{countryId}/searchCities, /parameter/v2/province/{provinceId}/searchCities or /parameter/v2/country/{countryId}/cities. Mandatory when supplier code is not provided"
        },
        "supplierAddress": {
          "type": "string",
          "description": "Supplier's address"
        },
        "supplierPostalCode": {
          "type": "string",
          "description": "Supplier's postal code"
        },
        "specificField": {
          "type": "string",
          "description": "Audit order specific field"
        },
        "supplierProductLines": {
          "type": "array",
          "description": "Supplier product lines, get it from /parameter/v2/product-families API",
          "items": {
            "type": "string"
          },
          "example": [
            "[\"bigCat1_s2\", \"bigCat1_s3\"]"
          ]
        },
        "factoryCode": {
          "type": "string",
          "description": "Factory's identification code in client's system, mandatory when auto confirm factory is needed and factory other info are not provided"
        },
        "factoryName": {
          "type": "string",
          "description": "Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryContactName": {
          "type": "string",
          "description": "Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryContactPhone": {
          "type": "string",
          "description": "Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryContactEmail": {
          "type": "string",
          "description": "Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryContinentID": {
          "type": "string",
          "description": "Factory's continent id in QIMA's system, refer to /parameter/v2/continents. Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryCountryID": {
          "type": "string",
          "description": "Factory's country id in QIMA's system, refer to /parameter/v2/countries. Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryProvinceID": {
          "type": "string",
          "description": "Factory's province id in QIMA's system, refer to /parameter/v2/country/{countryId}/provinces. Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryCityID": {
          "type": "string",
          "description": "Factory's city id in QIMA's system, refer to /parameter/v2/country/{countryId}/searchCities. Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryAddress": {
          "type": "string",
          "description": "Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryPostalCode": {
          "type": "string",
          "description": "Mandatory when auto confirm factory is needed and factory code is not provided"
        },
        "factoryProductLines": {
          "type": "array",
          "description": "Mandatory when auto confirm factory is needed and factory code is not provided, get product line from /parameter/v2/product-families API",
          "items": {
            "type": "string"
          },
          "example": [
            "[bigCat1_s2, bigCat1_s3]"
          ]
        },
        "supplierAlternateContactName": {
          "type": "string",
          "description": "Supplier's alternative contact name"
        },
        "supplierAlternateContactPhone": {
          "type": "string",
          "description": "Supplier's alternative contact phone"
        },
        "supplierAlternateContactEmail": {
          "type": "string",
          "description": "Supplier's alternative contact email"
        },
        "factoryAlternateContactName": {
          "type": "string",
          "description": "Name of the alternative factory contact"
        },
        "factoryAlternateContactPhone": {
          "type": "string",
          "description": "Phone of the alternative factory contact"
        },
        "factoryAlternateContactEmail": {
          "type": "string",
          "description": "Email of the alternative factory contact"
        }
      },
      "x-apifox-orders": [
        "userId",
        "serviceDate",
        "shipDate",
        "serviceType",
        "referenceNumber",
        "factoryAreaSqm",
        "totalNumberOfBuilding",
        "announcementType",
        "workersCount",
        "auditWindowFrom",
        "auditWindowTo",
        "additionalComment",
        "supplierCode",
        "supplierName",
        "supplierContactName",
        "supplierContactPhone",
        "supplierContactEmail",
        "supplierContinentID",
        "supplierCountryID",
        "supplierCityID",
        "supplierAddress",
        "supplierPostalCode",
        "specificField",
        "supplierProductLines",
        "factoryCode",
        "factoryName",
        "factoryContactName",
        "factoryContactPhone",
        "factoryContactEmail",
        "factoryContinentID",
        "factoryCountryID",
        "factoryProvinceID",
        "factoryCityID",
        "factoryAddress",
        "factoryPostalCode",
        "factoryProductLines",
        "supplierAlternateContactName",
        "supplierAlternateContactPhone",
        "supplierAlternateContactEmail",
        "factoryAlternateContactName",
        "factoryAlternateContactPhone",
        "factoryAlternateContactEmail"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "PageBean": {
      "type": "object",
      "properties": {
        "pageNo": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number in search results",
          "example": [
            "1,2,3"
          ]
        },
        "totalPageNum": {
          "type": "integer",
          "format": "int32",
          "description": "Count of pages in search results",
          "example": [
            "1,2,3"
          ]
        },
        "totalSize": {
          "type": "integer",
          "format": "int64",
          "description": "Total results count in search results",
          "example": [
            "100, 1000"
          ]
        },
        "pageItems": {
          "type": "array",
          "description": "List of the search result",
          "items": {
            "type": "object",
            "x-apifox-orders": [],
            "properties": {},
            "x-apifox-ignore-properties": []
          }
        },
        "countByFields": {
          "type": "array",
          "description": "Count by fields",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "x-apifox-orders": [
        "pageNo",
        "totalPageNum",
        "totalSize",
        "pageItems",
        "countByFields"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ClientReportSearchBean": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "description": "Order id, primary key of the inspection order"
        },
        "productId": {
          "type": "string",
          "description": "Id of this product(report)"
        },
        "orderNumber": {
          "type": "string",
          "description": "QIMA booking order number, like R-Cloud-xx",
          "example": [
            "R-Cloud-1111111"
          ]
        },
        "orderNumberProductSeq": {
          "type": "string",
          "description": "QIMA booking order number plus product sequence",
          "example": [
            "R-Cloud-1111111-1, R-Cloud-1111111-2"
          ]
        },
        "clientRefNb": {
          "type": "string",
          "description": "Reference number client can use for referencing with QIMA's inspection booking"
        },
        "poNumber": {
          "type": "string",
          "description": "PO number"
        },
        "inspectionDate": {
          "type": "string",
          "format": "date-time",
          "description": "Inspection date in unix timestamp",
          "example": [
            "1662652800000"
          ]
        },
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "Report status value, 30=>Approved by supervisor and diffused to client, 40=>Approved by client online, 50=>Rejected by client online, 60=>Archived by client online, 65=>Archived by client after approval, 70=>Archived by client after rejection",
          "example": [
            40
          ]
        },
        "companyId": {
          "type": "string",
          "description": "Company id in QIMA system",
          "example": [
            "D1242F42B10E4B099038D4878174877E"
          ]
        },
        "companyName": {
          "type": "string",
          "description": "Company name"
        },
        "productName": {
          "type": "string",
          "description": "Product name"
        },
        "supplierName": {
          "type": "string",
          "description": "Supplier name"
        },
        "supplierProvince": {
          "type": "string",
          "description": "Province name of the supplier",
          "example": [
            "Maputsoe"
          ]
        },
        "supplierCity": {
          "type": "string",
          "description": "City id of the supplier",
          "example": [
            "55881609"
          ]
        },
        "inspectionLocation": {
          "type": "string",
          "description": "Location of the inspection",
          "example": [
            "Maputsoe"
          ]
        },
        "factoryIdCode": {
          "type": "string",
          "description": "Factory's identification code in client's system"
        },
        "factoryName": {
          "type": "string",
          "description": "Factory name"
        },
        "factoryCountry": {
          "type": "string",
          "description": "Country name of the factory",
          "example": [
            "Lesotho"
          ]
        },
        "factoryProvince": {
          "type": "string",
          "description": "Province name of the factory",
          "example": [
            "Maputsoe"
          ]
        },
        "factoryAddress": {
          "type": "string",
          "description": "Factory address"
        },
        "inspectorName": {
          "type": "string",
          "description": "Inspector's name"
        },
        "serviceType": {
          "type": "string",
          "description": "QIMA inspection service type value 1: PSI (Pre-Shipment Inspection), 2: IPC (Initial Production Check), 3: DUPRO (During Production Inspection) , 4: CLC (Container Loading Check), 6: PM (Production Monitoring), 8: SR (Sample Review), 21: SC (Sample Collection) ",
          "example": [
            "1, 2, 3, 4, 6"
          ]
        },
        "serviceTypeText": {
          "type": "string",
          "description": "QIMA inspection service type text",
          "example": [
            "PSI, IPC, DUPRO, CLC, PM"
          ]
        },
        "prodReference": {
          "type": "string",
          "description": "Product level product reference"
        },
        "bookingType": {
          "type": "string",
          "description": "Booking type in product level"
        },
        "prodDivision": {
          "type": "string",
          "description": "Division name that this product belongs to in client's company",
          "example": [
            "Womenswear"
          ]
        },
        "prodQuantity": {
          "type": "integer",
          "format": "int64",
          "description": "Product level product quantity"
        },
        "prodQuantityUnit": {
          "type": "string",
          "description": "Unit name of the product quantity, like pcs, sets",
          "example": [
            "pcs"
          ]
        },
        "rejectionReason": {
          "type": "string",
          "description": "Product level reject reason"
        },
        "approvalReason": {
          "type": "string",
          "description": "Product level approve reason"
        },
        "reportApproveTime": {
          "type": "string",
          "format": "date-time",
          "description": "Approved time in unix timestamp",
          "example": [
            "1662729128781"
          ]
        },
        "approver": {
          "type": "string",
          "description": "QIMA Login of the approver"
        },
        "comments": {
          "type": "string",
          "description": "Comment on the approval/rejection"
        },
        "specResult": {
          "type": "string",
          "description": "Inspection result based specification",
          "example": [
            "OK"
          ]
        },
        "testResult": {
          "type": "string",
          "description": "Test result",
          "example": [
            "Passed"
          ]
        },
        "workmanshipResult": {
          "type": "string",
          "description": "Workmanship result",
          "example": [
            "WITHIN AQL"
          ]
        },
        "measurementResult": {
          "type": "string",
          "description": "Measurement result",
          "example": [
            "WITHIN AQL"
          ]
        },
        "overrallResult": {
          "type": "string",
          "description": "Overall result",
          "example": [
            "PASSED, FAILED"
          ]
        },
        "criticalChecked": {
          "type": "integer",
          "format": "int32",
          "description": "How many product checked for critical level defect checking",
          "example": [
            50
          ]
        },
        "majorChecked": {
          "type": "integer",
          "format": "int32",
          "description": "How many product checked for major level defect checking",
          "example": [
            50
          ]
        },
        "minorChecked": {
          "type": "integer",
          "format": "int32",
          "description": "How many product checked for minor level defect checking",
          "example": [
            50
          ]
        },
        "criticalFound": {
          "type": "integer",
          "format": "int32",
          "description": "How many critical level defect found",
          "example": [
            0
          ]
        },
        "majorFound": {
          "type": "integer",
          "format": "int32",
          "description": "How many major level defect found",
          "example": [
            2
          ]
        },
        "minorFound": {
          "type": "integer",
          "format": "int32",
          "description": "How many minor level defect found",
          "example": [
            4
          ]
        },
        "criticalMax": {
          "type": "integer",
          "format": "int32",
          "description": "Client allowed critical level defects count",
          "example": [
            0
          ]
        },
        "majorMax": {
          "type": "integer",
          "format": "int32",
          "description": "Client allowed major level defects count",
          "example": [
            2
          ]
        },
        "minorMax": {
          "type": "integer",
          "format": "int32",
          "description": "Client allowed minor level defects count",
          "example": [
            4
          ]
        },
        "missedInspection": {
          "type": "boolean",
          "description": "Indicate if this inspection is a missed inspection",
          "example": [
            false
          ]
        },
        "isReInspection": {
          "type": "string",
          "description": "Indicate if this inspection is an re-inspection",
          "example": [
            "Yes, No"
          ]
        },
        "reportRemark": {
          "type": "string",
          "description": "Inspector remarks on the report"
        },
        "reportSummary": {
          "type": "string",
          "description": "Summary of the report"
        },
        "clientRating": {
          "type": "integer",
          "format": "int32",
          "description": "Client's rating on this report"
        },
        "clientFeedback": {
          "type": "string",
          "description": "Client's feedback on this report"
        },
        "read": {
          "type": "boolean",
          "description": "Indicate if client has read this report",
          "example": [
            false
          ]
        },
        "inspectionDateMMMFormat": {
          "type": "string",
          "description": "Inspection date in dd-MMM-yyyy format",
          "example": [
            "04-Aug-2022"
          ]
        },
        "clientDecision": {
          "type": "string",
          "description": "Client's decision on this report",
          "example": [
            "Approved by client online"
          ]
        },
        "expectedShipDate": {
          "type": "string",
          "format": "date-time",
          "description": "Expected shipment date in unix timestamp",
          "example": [
            "1662652800000"
          ]
        },
        "bookingDate": {
          "type": "string",
          "format": "date-time",
          "description": "Booking date in unix timestamp",
          "example": [
            "1662652800000"
          ]
        },
        "sampleSize": {
          "type": "number",
          "description": "Product sample sizer",
          "example": [
            50
          ]
        },
        "prodFamily": {
          "type": "string",
          "description": "Product family name",
          "example": [
            "Adult garments"
          ]
        },
        "prodCategory": {
          "type": "string",
          "description": "Product category name",
          "example": [
            "Textile, Apparel, Footwear & Accessories"
          ]
        },
        "supplierAddress": {
          "type": "string",
          "description": "Supplier's address"
        },
        "supplierCountry": {
          "type": "string",
          "description": "Supplier's country name",
          "example": [
            "Lesotho"
          ]
        },
        "supplierIdCode": {
          "type": "string",
          "description": "Supplier's identification code in client's system"
        },
        "realMD": {
          "type": "integer",
          "format": "int32",
          "description": "Charged man day",
          "example": [
            "1, 2"
          ]
        },
        "totalCharge": {
          "type": "string",
          "description": "Total charge of this order",
          "example": [
            "300"
          ]
        },
        "sendReportTime": {
          "type": "string",
          "format": "date-time",
          "description": "send report time.The newest time for sending/resending report"
        },
        "sendReportTimeFormat": {
          "type": "string",
          "description": "Inspection date in dd-MMM-yyyy format",
          "example": [
            "04-Aug-2022"
          ]
        },
        "refResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReferenceAndReportBean"
          }
        }
      },
      "x-apifox-orders": [
        "orderId",
        "productId",
        "orderNumber",
        "orderNumberProductSeq",
        "clientRefNb",
        "poNumber",
        "inspectionDate",
        "status",
        "companyId",
        "companyName",
        "productName",
        "supplierName",
        "supplierProvince",
        "supplierCity",
        "inspectionLocation",
        "factoryIdCode",
        "factoryName",
        "factoryCountry",
        "factoryProvince",
        "factoryAddress",
        "inspectorName",
        "serviceType",
        "serviceTypeText",
        "prodReference",
        "bookingType",
        "prodDivision",
        "prodQuantity",
        "prodQuantityUnit",
        "rejectionReason",
        "approvalReason",
        "reportApproveTime",
        "approver",
        "comments",
        "specResult",
        "testResult",
        "workmanshipResult",
        "measurementResult",
        "overrallResult",
        "criticalChecked",
        "majorChecked",
        "minorChecked",
        "criticalFound",
        "majorFound",
        "minorFound",
        "criticalMax",
        "majorMax",
        "minorMax",
        "missedInspection",
        "isReInspection",
        "reportRemark",
        "reportSummary",
        "clientRating",
        "clientFeedback",
        "read",
        "inspectionDateMMMFormat",
        "clientDecision",
        "expectedShipDate",
        "bookingDate",
        "sampleSize",
        "prodFamily",
        "prodCategory",
        "supplierAddress",
        "supplierCountry",
        "supplierIdCode",
        "realMD",
        "totalCharge",
        "sendReportTime",
        "sendReportTimeFormat",
        "refResults"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ReferenceAndReportBean": {
      "type": "object",
      "properties": {
        "refId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "prodRefSeq": {
          "type": "string"
        },
        "prodRefPoNb": {
          "type": "string"
        },
        "prodRefSkuNb": {
          "type": "string"
        },
        "prodRefQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "aqlResult": {
          "type": "string"
        },
        "overrallResult": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "approver": {
          "type": "string"
        },
        "approveTime": {
          "type": "string",
          "format": "date-time"
        },
        "rejectionReason": {
          "type": "string"
        },
        "approvalReason": {
          "type": "string"
        },
        "icStatus": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "supplierId": {
          "type": "string"
        },
        "supplierName": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "refId",
        "productId",
        "prodRefSeq",
        "prodRefPoNb",
        "prodRefSkuNb",
        "prodRefQuantity",
        "aqlResult",
        "overrallResult",
        "status",
        "approver",
        "approveTime",
        "rejectionReason",
        "approvalReason",
        "icStatus",
        "comments",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "supplierId",
        "supplierName"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "SampleLevelsBean": {
      "type": "object",
      "properties": {
        "general": {
          "type": "array",
          "description": "Sample levels in general type",
          "items": {
            "$ref": "#/definitions/SampleLevelBean"
          }
        },
        "fabric": {
          "type": "array",
          "description": "Sample levels in fabric type",
          "items": {
            "$ref": "#/definitions/SampleLevelBean"
          }
        },
        "eyewear": {
          "type": "array",
          "description": "Sample levels in eyewear type",
          "items": {
            "$ref": "#/definitions/SampleLevelBean"
          }
        }
      },
      "x-apifox-orders": [
        "general",
        "fabric",
        "eyewear"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "SampleLevelBean": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Sample level value"
        },
        "label": {
          "type": "string",
          "description": "Sample level text"
        }
      },
      "x-apifox-orders": [
        "value",
        "label"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "SysProductTypeBean": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "categoryId": {
          "type": "string"
        },
        "family": {
          "type": "string"
        },
        "familyId": {
          "type": "string"
        },
        "productTypeId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "maxNbOfPcs": {
          "type": "integer",
          "format": "int32"
        },
        "maxNbOfRefs": {
          "type": "integer",
          "format": "int32"
        },
        "maxNbOfPts": {
          "type": "integer",
          "format": "int32"
        }
      },
      "x-apifox-orders": [
        "name",
        "category",
        "categoryId",
        "family",
        "familyId",
        "productTypeId",
        "type",
        "maxNbOfPcs",
        "maxNbOfRefs",
        "maxNbOfPts"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductTreeDtoBean": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        },
        "families": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        },
        "types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SysProductTypeBean"
          }
        }
      },
      "x-apifox-orders": [
        "categories",
        "families",
        "types"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiCallResult": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "content": {
          "type": "object",
          "x-apifox-orders": [],
          "properties": {},
          "x-apifox-ignore-properties": []
        }
      },
      "x-apifox-orders": [
        "message",
        "content"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductFamilyDtoBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "categoryName": {
          "type": "string"
        },
        "categoryId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "categoryName",
        "categoryId",
        "name"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductCategoryDtoBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "name"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "DropdownListOptionBean": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Displaying text of this data"
        },
        "value": {
          "type": "string",
          "description": "Value of this data"
        }
      },
      "x-apifox-orders": [
        "label",
        "value"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "SupplierSearchResultBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "cityName": {
          "type": "string"
        },
        "provinceName": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        },
        "contact": {
          "type": "string"
        },
        "telephone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "createdDate": {
          "type": "string"
        },
        "identificationCode": {
          "type": "string"
        },
        "createdDateUnixTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "updateDate": {
          "type": "string"
        },
        "updateDateUnixTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "mobile": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "name",
        "city",
        "province",
        "country",
        "cityName",
        "provinceName",
        "countryName",
        "contact",
        "telephone",
        "email",
        "address",
        "createdDate",
        "identificationCode",
        "createdDateUnixTimestamp",
        "updateDate",
        "updateDateUnixTimestamp",
        "mobile"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "SupplierDetailBean": {
      "type": "object",
      "required": [
        "address",
        "city",
        "contactInfo",
        "country",
        "entityName",
        "mainProductLines"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "QIMA supplier id",
          "example": [
            "B8B447FD4CD948BEAC1960DF7253BD90"
          ]
        },
        "entityName": {
          "type": "string",
          "description": "Supplier name",
          "example": [
            "Supplier ABC"
          ]
        },
        "chineseName": {
          "type": "string",
          "description": "Supplier name in local language",
          "example": [
            "富士康"
          ]
        },
        "continent": {
          "type": "string",
          "description": "Supplier continent id, get it from /parameter/v2/continents",
          "example": [
            "24865671"
          ]
        },
        "country": {
          "type": "string",
          "description": "Supplier country id, get it from /parameter/v2/searchCountries, /parameter/v2/countries or /parameter/v2/continent/{continentId}/countries ",
          "example": [
            "23424781"
          ]
        },
        "province": {
          "type": "string",
          "description": "Supplier province id, get it from /parameter/v2/country/{countryId}/provinces ",
          "example": [
            "12578016"
          ]
        },
        "city": {
          "type": "string",
          "description": "Supplier city id, get it from /parameter/v2/country/{countryId}/searchCities, /parameter/v2/province/{provinceId}/searchCities or /parameter/v2/country/{countryId}/cities",
          "example": [
            "12687254"
          ]
        },
        "address": {
          "type": "string",
          "description": "Supplier's address",
          "example": [
            "NO.1, A ROAD, B STREET, C DISTRICT"
          ]
        },
        "postcode": {
          "type": "string"
        },
        "nearestOffice": {
          "type": "string",
          "description": "Nearest QIMA office name",
          "example": [
            "Shenzhen office"
          ]
        },
        "website": {
          "type": "string"
        },
        "salesTurnover": {
          "type": "string"
        },
        "noOfEmployees": {
          "type": "string",
          "description": "Supplier's employee count",
          "example": [
            "10"
          ]
        },
        "userId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "businessLicenseNo": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "addressCn": {
          "type": "string",
          "description": "Supplier's address in local language"
        },
        "identificationCode": {
          "type": "string",
          "description": "Supplier's identifier code in client's system, can be used to link suppliers between QIMA's system and QIMA client's system"
        },
        "cityName": {
          "type": "string",
          "description": "Supplier's city name",
          "example": [
            "Shenzhen"
          ]
        },
        "countryName": {
          "type": "string",
          "description": "Supplier's country name",
          "example": [
            "China"
          ]
        },
        "mainProductLines": {
          "type": "array",
          "description": "Supplier's product lines, get product line from /parameter/v2/product-families API",
          "items": {
            "type": "string"
          },
          "example": [
            "[\"bigCat1_s2\", \"bigCat1_s3\"]"
          ]
        },
        "contactInfo": {
          "$ref": "#/definitions/SupplierContactInfoBean"
        },
        "accessMaps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileDetailBean"
          }
        },
        "qualityDocs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileDetailBean"
          }
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "entityName",
        "chineseName",
        "continent",
        "country",
        "province",
        "city",
        "address",
        "postcode",
        "nearestOffice",
        "website",
        "salesTurnover",
        "noOfEmployees",
        "userId",
        "type",
        "businessLicenseNo",
        "title",
        "addressCn",
        "identificationCode",
        "cityName",
        "countryName",
        "mainProductLines",
        "contactInfo",
        "accessMaps",
        "qualityDocs",
        "createBy",
        "updateBy"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "FileDetailBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "docType": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "docType",
        "fileName",
        "fileSize",
        "url"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "SupplierContactInfoBean": {
      "type": "object",
      "required": [
        "main"
      ],
      "properties": {
        "main": {
          "$ref": "#/definitions/ContactBean"
        },
        "alternate": {
          "$ref": "#/definitions/ContactBean"
        }
      },
      "x-apifox-orders": [
        "main",
        "alternate"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ContactBean": {
      "type": "object",
      "required": [
        "email",
        "name",
        "phone"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Contact's first name plus given name",
          "example": [
            "Bill Gates"
          ]
        },
        "department": {
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Contact's working position name",
          "example": [
            "Quality Manager"
          ]
        },
        "phone": {
          "type": "string",
          "description": "Contact's phone number",
          "example": [
            "+86 0755 81112222"
          ]
        },
        "mobile": {
          "type": "string",
          "description": "Contact's mobile phone number",
          "example": [
            "+86 13811112222"
          ]
        },
        "email": {
          "type": "string",
          "description": "Contact's email(s), separate by semi-colon when multiple",
          "example": [
            "aaa@bbb.com;ccc@ddd.com"
          ]
        }
      },
      "x-apifox-orders": [
        "name",
        "department",
        "title",
        "phone",
        "mobile",
        "email"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "InspectionBookingBean": {
      "type": "object",
      "properties": {
        "draftId": {
          "type": "string"
        },
        "draftSteps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DraftStepBean"
          }
        },
        "order": {
          "$ref": "#/definitions/InspectionOrderBookingBean"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InspectionProductBookingBean"
          }
        }
      },
      "x-apifox-orders": [
        "draftId",
        "draftSteps",
        "order",
        "products"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "InspectionProductBookingBean": {
      "type": "object",
      "properties": {
        "draftProductId": {
          "type": "string"
        },
        "draftId": {
          "type": "string"
        },
        "isCompleted": {
          "type": "boolean"
        },
        "productBean": {
          "$ref": "#/definitions/ProductBean"
        },
        "productExtraBean": {
          "$ref": "#/definitions/ProductExtraBean"
        },
        "productChecklistBean": {
          "$ref": "#/definitions/ProductChecklistBean"
        },
        "sampleCollection": {
          "$ref": "#/definitions/SampleCollectionBean"
        },
        "sampleReference": {
          "$ref": "#/definitions/SampleReferenceBean"
        },
        "productSpec": {
          "$ref": "#/definitions/ProductSpecBean"
        },
        "importTemplateData": {
          "$ref": "#/definitions/OrderProductImportTemplateDataBean"
        },
        "productSampleReview": {
          "$ref": "#/definitions/ProductSampleReviewBean"
        },
        "orderProductSpDestinationVO": {
          "$ref": "#/definitions/OrderProductSpDestinationVO"
        }
      },
      "x-apifox-orders": [
        "draftProductId",
        "draftId",
        "isCompleted",
        "productBean",
        "productExtraBean",
        "productChecklistBean",
        "sampleCollection",
        "sampleReference",
        "productSpec",
        "importTemplateData",
        "productSampleReview",
        "orderProductSpDestinationVO"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OrderProductSpDestinationVO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "landlineNumber": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryRegion": {
          "type": "string"
        },
        "selectAiOfficeLab": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "productId",
        "type",
        "name",
        "mobile",
        "landlineNumber",
        "email",
        "address",
        "city",
        "countryRegion",
        "selectAiOfficeLab"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductSampleReviewBean": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-apifox-orders": []
          },
          "x-apifox-orders": [],
          "properties": {},
          "x-apifox-ignore-properties": []
        },
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "sampleReviewCount": {
          "type": "string"
        },
        "previousSampleReview": {
          "type": "string"
        },
        "instructions": {
          "type": "string"
        },
        "sampleReviewType": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "accessTime",
        "params",
        "id",
        "productId",
        "sampleReviewCount",
        "previousSampleReview",
        "instructions",
        "sampleReviewType"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OrderProductImportTemplateDataBean": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderProductImportTemplateColumnBean"
          }
        },
        "dataMatrix": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "x-apifox-orders": [
        "productId",
        "columns",
        "dataMatrix"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OrderProductImportTemplateColumnBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createBy": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateBy": {
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "archiveTime": {
          "type": "string",
          "format": "date-time"
        },
        "columnId": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "isGroupByColumn": {
          "type": "boolean"
        },
        "dataType": {
          "type": "string"
        },
        "dataColumnReference": {
          "type": "string"
        },
        "column": {
          "$ref": "#/definitions/OrderProductImportColumnBean"
        }
      },
      "x-apifox-orders": [
        "id",
        "createBy",
        "createTime",
        "updateBy",
        "updateTime",
        "archiveTime",
        "columnId",
        "templateId",
        "isMandatory",
        "isGroupByColumn",
        "dataType",
        "dataColumnReference",
        "column"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OrderProductImportColumnBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createBy": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateBy": {
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "archiveTime": {
          "type": "string",
          "format": "date-time"
        },
        "columnName": {
          "type": "string"
        },
        "columnText": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "createBy",
        "createTime",
        "updateBy",
        "updateTime",
        "archiveTime",
        "columnName",
        "columnText"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductSpecBean": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-apifox-orders": []
          },
          "x-apifox-orders": [],
          "properties": {},
          "x-apifox-ignore-properties": []
        },
        "productId": {
          "type": "string"
        },
        "nbOfPoints": {
          "type": "integer",
          "format": "int32"
        },
        "logoDes": {
          "type": "string"
        },
        "performDropTest": {
          "type": "string"
        },
        "performDropTestBoolean": {
          "type": "boolean"
        },
        "unitPacking": {
          "type": "string"
        },
        "innerPacking": {
          "type": "string"
        },
        "outerPacking": {
          "type": "string"
        },
        "packingComments": {
          "type": "string"
        },
        "shippingMarks": {
          "type": "string"
        },
        "nbOfRawMaterials": {
          "type": "integer",
          "format": "int32"
        },
        "rawMaterialsDes": {
          "type": "string"
        },
        "clcNbOfPallets": {
          "type": "integer",
          "format": "int32"
        },
        "clcNbOfCartons": {
          "type": "integer",
          "format": "int32"
        },
        "clcNbOfPcsPerCarton": {
          "type": "integer",
          "format": "int32"
        },
        "clcNumberingFrom": {
          "type": "string"
        },
        "clcNumberingTo": {
          "type": "string"
        },
        "additionalComment": {
          "type": "string"
        },
        "productColors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductColorBean"
          }
        },
        "productTextileColors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductTextileColorBean"
          }
        },
        "productDimensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductDimensionBean"
          }
        }
      },
      "x-apifox-orders": [
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "accessTime",
        "params",
        "productId",
        "nbOfPoints",
        "logoDes",
        "performDropTest",
        "performDropTestBoolean",
        "unitPacking",
        "innerPacking",
        "outerPacking",
        "packingComments",
        "shippingMarks",
        "nbOfRawMaterials",
        "rawMaterialsDes",
        "clcNbOfPallets",
        "clcNbOfCartons",
        "clcNbOfPcsPerCarton",
        "clcNumberingFrom",
        "clcNumberingTo",
        "additionalComment",
        "productColors",
        "productTextileColors",
        "productDimensions"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductDimensionBean": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "seq": {
          "type": "integer",
          "format": "int32"
        },
        "demensionDes": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "productId",
        "seq",
        "demensionDes",
        "createTime",
        "updateTime",
        "accessTime",
        "id"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductTextileColorBean": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "seq": {
          "type": "integer",
          "format": "int32"
        },
        "colorRef": {
          "type": "string"
        },
        "colorCode": {
          "type": "string"
        },
        "colorQuantity": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "productId",
        "seq",
        "colorRef",
        "colorCode",
        "colorQuantity",
        "createTime",
        "updateTime",
        "accessTime",
        "id"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductColorBean": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "seq": {
          "type": "integer",
          "format": "int32"
        },
        "colorDes": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "productId",
        "seq",
        "colorDes",
        "createTime",
        "updateTime",
        "accessTime",
        "id"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "SampleReferenceBean": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-apifox-orders": []
          },
          "x-apifox-orders": [],
          "properties": {},
          "x-apifox-ignore-properties": []
        },
        "id": {
          "type": "string"
        },
        "reference": {
          "type": "integer",
          "format": "int32"
        },
        "courier": {
          "type": "string"
        },
        "trackNb": {
          "type": "string"
        },
        "clientComments": {
          "type": "string"
        },
        "aiComments": {
          "type": "string"
        },
        "trackStatus": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "referAnotherSr": {
          "type": "string"
        },
        "referSampleType": {
          "type": "string"
        },
        "srReference": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "accessTime",
        "params",
        "id",
        "reference",
        "courier",
        "trackNb",
        "clientComments",
        "aiComments",
        "trackStatus",
        "productId",
        "referAnotherSr",
        "referSampleType",
        "srReference"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "SampleCollectionBean": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-apifox-orders": []
          },
          "x-apifox-orders": [],
          "properties": {},
          "x-apifox-ignore-properties": []
        },
        "id": {
          "type": "string"
        },
        "collectSample": {
          "type": "integer",
          "format": "int32"
        },
        "sampleNb": {
          "type": "integer",
          "format": "int32"
        },
        "sampleUnit": {
          "type": "string"
        },
        "sampleBy": {
          "type": "integer",
          "format": "int32"
        },
        "collectMethod": {
          "type": "integer",
          "format": "int32"
        },
        "collectMethodLabel": {
          "type": "string"
        },
        "defectNb": {
          "type": "integer",
          "format": "int32"
        },
        "goodNb": {
          "type": "integer",
          "format": "int32"
        },
        "courier": {
          "type": "string"
        },
        "trackNb": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "clientComments": {
          "type": "string"
        },
        "aiComments": {
          "type": "string"
        },
        "trackStatus": {
          "type": "string"
        },
        "collectLtSample": {
          "type": "integer",
          "format": "int32"
        },
        "ltSampleNb": {
          "type": "integer",
          "format": "int32"
        },
        "ltClientComments": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "ltSampleRefNb": {
          "type": "string"
        },
        "clientAccountNumber": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "ltSampleInfo": {
          "$ref": "#/definitions/LtSampleInfo"
        },
        "ltReferenceUrl": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "accessTime",
        "params",
        "id",
        "collectSample",
        "sampleNb",
        "sampleUnit",
        "sampleBy",
        "collectMethod",
        "collectMethodLabel",
        "defectNb",
        "goodNb",
        "courier",
        "trackNb",
        "address",
        "postcode",
        "clientComments",
        "aiComments",
        "trackStatus",
        "collectLtSample",
        "ltSampleNb",
        "ltClientComments",
        "productId",
        "ltSampleRefNb",
        "clientAccountNumber",
        "productName",
        "ltSampleInfo",
        "ltReferenceUrl"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "LtSampleInfo": {
      "type": "object",
      "properties": {
        "ltRemarks": {
          "type": "string"
        },
        "ltContact": {
          "type": "string"
        },
        "ltName": {
          "type": "string"
        },
        "ltEmail": {
          "type": "string"
        },
        "sampleSize": {
          "type": "string"
        },
        "lab": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "ltRemarks",
        "ltContact",
        "ltName",
        "ltEmail",
        "sampleSize",
        "lab"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductChecklistBean": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-apifox-orders": []
          },
          "x-apifox-orders": [],
          "properties": {},
          "x-apifox-ignore-properties": []
        },
        "productId": {
          "type": "string"
        },
        "ipTemplate": {
          "type": "string"
        },
        "templateName": {
          "type": "string"
        },
        "templateFileId": {
          "type": "string"
        },
        "ipStatus": {
          "type": "string"
        },
        "checklistFrom": {
          "type": "string"
        },
        "clientChecklistId": {
          "type": "string"
        },
        "checklistNumber": {
          "type": "string"
        },
        "clientComments": {
          "type": "string"
        },
        "supervisorComments": {
          "type": "string"
        },
        "checklistComments": {
          "type": "string"
        },
        "prodSampleLevel": {
          "type": "string"
        },
        "prodMeasurementSampleLevel": {
          "type": "string"
        },
        "aqlTypel": {
          "type": "string"
        },
        "aqlCritical": {
          "type": "string"
        },
        "aqlCriticalText": {
          "type": "string"
        },
        "aqlMajor": {
          "type": "string"
        },
        "aqlMajorText": {
          "type": "string"
        },
        "aqlMinor": {
          "type": "string"
        },
        "aqlMinorText": {
          "type": "string"
        },
        "customizedAql": {
          "type": "string"
        },
        "customizedAqlText": {
          "type": "string"
        },
        "prodSampleSize": {
          "type": "integer",
          "format": "int32"
        },
        "prodMeasurementSampleSize": {
          "type": "integer",
          "format": "int32"
        },
        "prodMd": {
          "type": "number",
          "format": "double"
        },
        "measurementAQL": {
          "type": "string"
        },
        "measurementAqlText": {
          "type": "string"
        },
        "measurementAQLBoolean": {
          "type": "boolean"
        },
        "fabricSampleLevel": {
          "type": "string"
        },
        "fabricMaxPenalty": {
          "type": "integer",
          "format": "int32"
        },
        "fabricMaxAverage": {
          "type": "integer",
          "format": "int32"
        },
        "fabricMaxPenaltyUnit": {
          "type": "string"
        },
        "fabricMaxAverageUnit": {
          "type": "string"
        },
        "performClientTestsOnly": {
          "type": "string"
        },
        "performClientTestsOnlyBoolean": {
          "type": "boolean"
        },
        "checklistId": {
          "type": "string"
        },
        "checklistName": {
          "type": "string"
        },
        "productTypeId": {
          "type": "string"
        },
        "productTypeName": {
          "type": "string"
        },
        "productFamilyId": {
          "type": "string"
        },
        "productFamilyName": {
          "type": "string"
        },
        "productCategoryId": {
          "type": "string"
        },
        "productCategoryName": {
          "type": "string"
        },
        "fixedQuantity": {
          "type": "string"
        },
        "standardSampleSize": {
          "type": "integer",
          "format": "int32"
        },
        "productAqlList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductRefAqlBean"
          }
        },
        "defectList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductChecklistDefectViewBean"
          }
        },
        "testList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductChecklistTestViewBean"
          }
        },
        "checkpoints": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CKLCheckpointExtend"
            }
          },
          "x-apifox-orders": [],
          "properties": {},
          "x-apifox-ignore-properties": []
        },
        "bookingType": {
          "type": "string"
        },
        "prodQuantity": {
          "type": "number",
          "format": "double"
        },
        "prodQuantityUnit": {
          "type": "string"
        },
        "otherUnit": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "accessTime",
        "params",
        "productId",
        "ipTemplate",
        "templateName",
        "templateFileId",
        "ipStatus",
        "checklistFrom",
        "clientChecklistId",
        "checklistNumber",
        "clientComments",
        "supervisorComments",
        "checklistComments",
        "prodSampleLevel",
        "prodMeasurementSampleLevel",
        "aqlTypel",
        "aqlCritical",
        "aqlCriticalText",
        "aqlMajor",
        "aqlMajorText",
        "aqlMinor",
        "aqlMinorText",
        "customizedAql",
        "customizedAqlText",
        "prodSampleSize",
        "prodMeasurementSampleSize",
        "prodMd",
        "measurementAQL",
        "measurementAqlText",
        "measurementAQLBoolean",
        "fabricSampleLevel",
        "fabricMaxPenalty",
        "fabricMaxAverage",
        "fabricMaxPenaltyUnit",
        "fabricMaxAverageUnit",
        "performClientTestsOnly",
        "performClientTestsOnlyBoolean",
        "checklistId",
        "checklistName",
        "productTypeId",
        "productTypeName",
        "productFamilyId",
        "productFamilyName",
        "productCategoryId",
        "productCategoryName",
        "fixedQuantity",
        "standardSampleSize",
        "productAqlList",
        "defectList",
        "testList",
        "checkpoints",
        "bookingType",
        "prodQuantity",
        "prodQuantityUnit",
        "otherUnit"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "CKLCheckpointExtend": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "categoryType": {
          "type": "string"
        },
        "descri": {
          "type": "string"
        },
        "guideline": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "clientName": {
          "type": "string"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileMetaBean"
          }
        },
        "seq": {
          "type": "integer",
          "format": "int32"
        },
        "originCheckpointId": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "name",
        "clientId",
        "categoryType",
        "descri",
        "guideline",
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "type",
        "clientName",
        "files",
        "seq",
        "originCheckpointId"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "FileMetaBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "File id",
          "readOnly": true
        },
        "srcId": {
          "type": "string",
          "description": "Source id, related resource it",
          "readOnly": true
        },
        "fileType": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileSize": {
          "type": "integer",
          "format": "int64",
          "description": "File size in bytes",
          "readOnly": true
        },
        "objectKey": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "bucket": {
          "type": "string",
          "description": "S3 bucket name",
          "readOnly": true
        },
        "createBy": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "content": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "s3Url": {
          "type": "string",
          "description": "Temporary url of the file on S3",
          "readOnly": true
        },
        "fileMd5": {
          "type": "string",
          "description": "file digest info",
          "readOnly": true
        },
        "contentType": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "srcId",
        "fileType",
        "fileName",
        "fileSize",
        "objectKey",
        "version",
        "createTime",
        "updateTime",
        "bucket",
        "createBy",
        "comments",
        "content",
        "s3Url",
        "fileMd5",
        "contentType"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductChecklistTestViewBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "testId": {
          "type": "string"
        },
        "selectedBy": {
          "type": "integer",
          "format": "int32"
        },
        "testName": {
          "type": "string"
        },
        "instructionTest": {
          "type": "string"
        },
        "expectedResult": {
          "type": "string"
        },
        "sampleLevel": {
          "type": "string"
        },
        "sampleSize": {
          "type": "string"
        },
        "fileId": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "publicTestId": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        },
        "s3Url": {
          "type": "string"
        },
        "isLinkToPublic": {
          "type": "boolean"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "originTestId": {
          "type": "string"
        },
        "linkTestId": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "productId",
        "testId",
        "selectedBy",
        "testName",
        "instructionTest",
        "expectedResult",
        "sampleLevel",
        "sampleSize",
        "fileId",
        "fileName",
        "publicTestId",
        "isPublic",
        "s3Url",
        "isLinkToPublic",
        "status",
        "originTestId",
        "linkTestId"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductChecklistDefectViewBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "defectId": {
          "type": "string"
        },
        "selectedBy": {
          "type": "integer",
          "format": "int32"
        },
        "defectName": {
          "type": "string"
        },
        "expectedDefect": {
          "type": "string"
        },
        "classification": {
          "type": "string"
        },
        "fileId": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "publicDefectId": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        },
        "s3Url": {
          "type": "string"
        },
        "isLinkToPublic": {
          "type": "boolean"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "originDefectId": {
          "type": "string"
        },
        "linkDefectId": {
          "type": "string"
        },
        "repairability": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "productId",
        "defectId",
        "selectedBy",
        "defectName",
        "expectedDefect",
        "classification",
        "fileId",
        "fileName",
        "publicDefectId",
        "isPublic",
        "s3Url",
        "isLinkToPublic",
        "status",
        "originDefectId",
        "linkDefectId",
        "repairability"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductExtraBean": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "string"
        },
        "linkFromInspToLT": {
          "type": "string"
        },
        "linkFromLTToInsp": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "x-apifox-orders": [
        "productId",
        "linkFromInspToLT",
        "linkFromLTToInsp",
        "createTime",
        "updateTime",
        "accessTime"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductBean": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-apifox-orders": []
          },
          "x-apifox-orders": [],
          "properties": {},
          "x-apifox-ignore-properties": []
        },
        "orderId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "seq": {
          "type": "integer",
          "format": "int32"
        },
        "prodCategoryClient": {
          "type": "string"
        },
        "prodFamilyClient": {
          "type": "string"
        },
        "prodType": {
          "type": "string"
        },
        "isReinspection": {
          "type": "string"
        },
        "preInspection": {
          "type": "string"
        },
        "preInspectionDate": {
          "type": "string",
          "format": "date-time"
        },
        "reinspectionComment": {
          "type": "string"
        },
        "prodName": {
          "type": "string"
        },
        "prodDivision": {
          "type": "string"
        },
        "prodReference": {
          "type": "string"
        },
        "prodQuantity": {
          "type": "integer",
          "format": "int64"
        },
        "prodQuantityUnit": {
          "type": "string"
        },
        "otherUnit": {
          "type": "string"
        },
        "nbOfPcsPerSets": {
          "type": "integer",
          "format": "int32"
        },
        "nbOfPtsPerSets": {
          "type": "integer",
          "format": "int32"
        },
        "poNumber": {
          "type": "string"
        },
        "prodApparelCategory": {
          "type": "string"
        },
        "maxPcsPerMD": {
          "type": "integer",
          "format": "int32"
        },
        "maxRefPerMD": {
          "type": "integer",
          "format": "int32"
        },
        "maxPtsPerMD": {
          "type": "integer",
          "format": "int32"
        },
        "nbOfRefInReport": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfReferences": {
          "type": "integer",
          "format": "int32"
        },
        "bookingtype": {
          "type": "string"
        },
        "expectedFinishedPct": {
          "type": "integer",
          "format": "int32"
        },
        "expectedPackedPct": {
          "type": "integer",
          "format": "int32"
        },
        "lotsNumber": {
          "type": "integer",
          "format": "int32"
        },
        "lotsNo": {
          "type": "string"
        },
        "selectSampleNumber": {
          "type": "integer",
          "format": "int32"
        },
        "selectSampleCollectMethod": {
          "type": "integer",
          "format": "int32"
        },
        "setsDescription": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        },
        "isAqlStandardValues": {
          "type": "boolean"
        },
        "eyewear": {
          "$ref": "#/definitions/ProductEyewearBean"
        },
        "productRefs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderProdReferenceBean"
          }
        },
        "productSampleReview": {
          "$ref": "#/definitions/ProductSampleReviewBean"
        }
      },
      "x-apifox-orders": [
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "accessTime",
        "params",
        "orderId",
        "productId",
        "seq",
        "prodCategoryClient",
        "prodFamilyClient",
        "prodType",
        "isReinspection",
        "preInspection",
        "preInspectionDate",
        "reinspectionComment",
        "prodName",
        "prodDivision",
        "prodReference",
        "prodQuantity",
        "prodQuantityUnit",
        "otherUnit",
        "nbOfPcsPerSets",
        "nbOfPtsPerSets",
        "poNumber",
        "prodApparelCategory",
        "maxPcsPerMD",
        "maxRefPerMD",
        "maxPtsPerMD",
        "nbOfRefInReport",
        "numberOfReferences",
        "bookingtype",
        "expectedFinishedPct",
        "expectedPackedPct",
        "lotsNumber",
        "lotsNo",
        "selectSampleNumber",
        "selectSampleCollectMethod",
        "setsDescription",
        "templateId",
        "isAqlStandardValues",
        "eyewear",
        "productRefs",
        "productSampleReview"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OrderProdReferenceBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "prodRefSeq": {
          "type": "string"
        },
        "prodRefPoNb": {
          "type": "string"
        },
        "prodRefSkuNb": {
          "type": "string"
        },
        "prodRefQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "clientDecision": {
          "type": "string"
        },
        "productRefAqlBean": {
          "$ref": "#/definitions/ProductRefAqlBean"
        },
        "eyewear": {
          "$ref": "#/definitions/ProductEyewearBean"
        },
        "doubleSamplingAql": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductRefAqlBean"
          }
        },
        "colors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductRefColor"
          }
        },
        "supplierId": {
          "type": "string"
        },
        "supplierName": {
          "type": "string"
        },
        "isReInspection": {
          "type": "string"
        },
        "skuId": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "id",
        "productId",
        "prodRefSeq",
        "prodRefPoNb",
        "prodRefSkuNb",
        "prodRefQuantity",
        "createTime",
        "updateTime",
        "accessTime",
        "clientDecision",
        "productRefAqlBean",
        "eyewear",
        "doubleSamplingAql",
        "colors",
        "supplierId",
        "supplierName",
        "isReInspection",
        "skuId"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductRefColor": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-apifox-orders": []
          },
          "x-apifox-orders": [],
          "properties": {},
          "x-apifox-ignore-properties": []
        },
        "id": {
          "type": "string"
        },
        "productReferenceId": {
          "type": "string"
        },
        "seq": {
          "type": "integer",
          "format": "int32"
        },
        "qty": {
          "type": "integer",
          "format": "int32"
        },
        "colorDesc": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "accessTime",
        "params",
        "id",
        "productReferenceId",
        "seq",
        "qty",
        "colorDesc"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ProductEyewearBean": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string"
        },
        "qualityRanking": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "brand",
        "qualityRanking"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "InspectionOrderBookingBean": {
      "type": "object",
      "properties": {
        "draftId": {
          "type": "string"
        },
        "isAnOrderNotADraft": {
          "type": "boolean"
        },
        "afterCalculatePrice": {
          "type": "boolean"
        },
        "uploadMoreAttachment": {
          "type": "boolean"
        },
        "invalidSupplier": {
          "type": "boolean"
        },
        "orderGeneralInfo": {
          "$ref": "#/definitions/OrderGeneralInfoBean"
        },
        "orderExtra": {
          "$ref": "#/definitions/OrderExtraBean"
        },
        "orderFactory": {
          "$ref": "#/definitions/OrderFactoryBean"
        },
        "orderSupplier": {
          "$ref": "#/definitions/OrderSupplierBean"
        },
        "orderCharge": {
          "$ref": "#/definitions/OrderChargeBean"
        },
        "orderChargeItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderChargeItem"
          }
        },
        "manday": {
          "$ref": "#/definitions/OrderMandayBean"
        },
        "multiOrderSuppliers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderSupplierBean"
          }
        },
        "multiOrderFactories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderFactoryBean"
          }
        },
        "orderCancelReasonBeanList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderCancelReasonBean"
          }
        }
      },
      "x-apifox-orders": [
        "draftId",
        "isAnOrderNotADraft",
        "afterCalculatePrice",
        "uploadMoreAttachment",
        "invalidSupplier",
        "orderGeneralInfo",
        "orderExtra",
        "orderFactory",
        "orderSupplier",
        "orderCharge",
        "orderChargeItems",
        "manday",
        "multiOrderSuppliers",
        "multiOrderFactories",
        "orderCancelReasonBeanList"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OrderCancelReasonBean": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string"
        },
        "cancelReason": {
          "type": "string"
        },
        "isOtherReason": {
          "type": "integer",
          "format": "int32"
        },
        "autoCancelOrderFlag": {
          "type": "string"
        },
        "cancelledBy": {
          "type": "string"
        },
        "cancellationDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "x-apifox-orders": [
        "orderId",
        "cancelReason",
        "isOtherReason",
        "autoCancelOrderFlag",
        "cancelledBy",
        "cancellationDate"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OrderMandayBean": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-apifox-orders": []
          },
          "x-apifox-orders": [],
          "properties": {},
          "x-apifox-ignore-properties": []
        },
        "orderId": {
          "type": "string"
        },
        "clientMD": {
          "type": "number",
          "format": "double"
        },
        "supervisorAskedMD": {
          "type": "number",
          "format": "double"
        },
        "realMD": {
          "type": "number",
          "format": "double"
        },
        "moreItems": {
          "type": "string"
        },
        "totalMD": {
          "type": "number",
          "format": "double"
        },
        "mdStatus": {
          "type": "integer",
          "format": "int32"
        },
        "overtimeHours": {
          "type": "number",
          "format": "double"
        }
      },
      "x-apifox-orders": [
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "accessTime",
        "params",
        "orderId",
        "clientMD",
        "supervisorAskedMD",
        "realMD",
        "moreItems",
        "totalMD",
        "mdStatus",
        "overtimeHours"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OrderChargeBean": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-apifox-orders": []
          },
          "x-apifox-orders": [],
          "properties": {},
          "x-apifox-ignore-properties": []
        },
        "orderId": {
          "type": "string"
        },
        "nbOfExtraReport": {
          "type": "integer",
          "format": "int32"
        },
        "extraReportRate": {
          "type": "number",
          "format": "double"
        },
        "expressBookingRate": {
          "type": "number",
          "format": "double"
        },
        "expressBookingFee": {
          "type": "number",
          "format": "double"
        },
        "sampleRate": {
          "type": "number",
          "format": "double"
        },
        "clientType": {
          "type": "string"
        },
        "inspectionCharge": {
          "type": "number",
          "format": "double"
        },
        "extraReportCharge": {
          "type": "number",
          "format": "double"
        },
        "sampleCharge": {
          "type": "number",
          "format": "double"
        },
        "offlineCharge": {
          "type": "number",
          "format": "double"
        },
        "taxAmount": {
          "type": "number",
          "format": "double"
        },
        "totalCharge": {
          "type": "number",
          "format": "double"
        },
        "optionalFieldsCharge": {
          "type": "number",
          "format": "double"
        },
        "currency": {
          "type": "string"
        },
        "exchangeRate": {
          "type": "number",
          "format": "double"
        },
        "convertedTotalAmount": {
          "type": "number",
          "format": "double"
        },
        "overtimeCharge": {
          "type": "number",
          "format": "double"
        },
        "mdrate": {
          "type": "number",
          "format": "double"
        }
      },
      "x-apifox-orders": [
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "accessTime",
        "params",
        "orderId",
        "nbOfExtraReport",
        "extraReportRate",
        "expressBookingRate",
        "expressBookingFee",
        "sampleRate",
        "clientType",
        "inspectionCharge",
        "extraReportCharge",
        "sampleCharge",
        "offlineCharge",
        "taxAmount",
        "totalCharge",
        "optionalFieldsCharge",
        "currency",
        "exchangeRate",
        "convertedTotalAmount",
        "overtimeCharge",
        "mdrate"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OrderSupplierBean": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-apifox-orders": []
          },
          "x-apifox-orders": [],
          "properties": {},
          "x-apifox-ignore-properties": []
        },
        "orderId": {
          "type": "string"
        },
        "supplierName": {
          "type": "string"
        },
        "supplierNameCN": {
          "type": "string"
        },
        "supplierMGRName": {
          "type": "string"
        },
        "supplierMGRMobile": {
          "type": "string"
        },
        "supplierMGRNumber": {
          "type": "string"
        },
        "supplierMGREmail": {
          "type": "string"
        },
        "supplierMGREmailList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supplierOtherName": {
          "type": "string"
        },
        "supplierOtherMobile": {
          "type": "string"
        },
        "supplierOtherNumber": {
          "type": "string"
        },
        "supplierOtherEmail": {
          "type": "string"
        },
        "supplierOtherEmailList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supplierAddress": {
          "type": "string"
        },
        "supplierCity": {
          "type": "string"
        },
        "supplierCityName": {
          "type": "string"
        },
        "supplierPostCode": {
          "type": "string"
        },
        "supplierCountry": {
          "type": "string"
        },
        "supplierCountryName": {
          "type": "string"
        },
        "supplierProductLines": {
          "type": "string"
        },
        "supplierProductLinesList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supplierIdentificationCode": {
          "type": "string"
        },
        "supplierId": {
          "type": "string"
        },
        "isNewSupplier": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "businessLicenseNumber": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "comments": {
          "type": "string"
        },
        "supplierProvince": {
          "type": "string"
        },
        "supplierContinent": {
          "type": "string"
        },
        "seq": {
          "type": "integer",
          "format": "int32"
        },
        "arrivalCityId": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "accessTime",
        "params",
        "orderId",
        "supplierName",
        "supplierNameCN",
        "supplierMGRName",
        "supplierMGRMobile",
        "supplierMGRNumber",
        "supplierMGREmail",
        "supplierMGREmailList",
        "supplierOtherName",
        "supplierOtherMobile",
        "supplierOtherNumber",
        "supplierOtherEmail",
        "supplierOtherEmailList",
        "supplierAddress",
        "supplierCity",
        "supplierCityName",
        "supplierPostCode",
        "supplierCountry",
        "supplierCountryName",
        "supplierProductLines",
        "supplierProductLinesList",
        "supplierIdentificationCode",
        "supplierId",
        "isNewSupplier",
        "id",
        "type",
        "businessLicenseNumber",
        "title",
        "comments",
        "supplierProvince",
        "supplierContinent",
        "seq",
        "arrivalCityId"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OrderFactoryBean": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-apifox-orders": []
          },
          "x-apifox-orders": [],
          "properties": {},
          "x-apifox-ignore-properties": []
        },
        "orderId": {
          "type": "string"
        },
        "factoryId": {
          "type": "string"
        },
        "factoryName": {
          "type": "string"
        },
        "factoryNameCN": {
          "type": "string"
        },
        "factoryMGRName": {
          "type": "string"
        },
        "factoryMGRMobile": {
          "type": "string"
        },
        "factoryMGRNumber": {
          "type": "string"
        },
        "factoryMGREmail": {
          "type": "string"
        },
        "factoryMGREmailList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "factoryOtherName": {
          "type": "string"
        },
        "factoryOtherMobile": {
          "type": "string"
        },
        "factoryOtherNumber": {
          "type": "string"
        },
        "factoryOtherEmail": {
          "type": "string"
        },
        "factoryOtherEmailList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "factoryAddress": {
          "type": "string"
        },
        "factoryCity": {
          "type": "string"
        },
        "factoryCityName": {
          "type": "string"
        },
        "factoryProvince": {
          "type": "string"
        },
        "factoryCountry": {
          "type": "string"
        },
        "factoryContinent": {
          "type": "string"
        },
        "factoryPostCode": {
          "type": "string"
        },
        "factoryProductLines": {
          "type": "string"
        },
        "factoryProductLinesList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "departureCity": {
          "type": "string"
        },
        "arrivalTime": {
          "type": "string"
        },
        "factoryAIOffice": {
          "type": "string"
        },
        "nbOfWorkers": {
          "type": "integer",
          "format": "int32"
        },
        "comments": {
          "type": "string"
        },
        "coordinationRemark": {
          "type": "string"
        },
        "isMutiLocation": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "factoryCityId": {
          "type": "string"
        },
        "coordinatesLatitude": {
          "type": "string"
        },
        "coordinatesLongitude": {
          "type": "string"
        },
        "seq": {
          "type": "integer",
          "format": "int32"
        }
      },
      "x-apifox-orders": [
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "accessTime",
        "params",
        "orderId",
        "factoryId",
        "factoryName",
        "factoryNameCN",
        "factoryMGRName",
        "factoryMGRMobile",
        "factoryMGRNumber",
        "factoryMGREmail",
        "factoryMGREmailList",
        "factoryOtherName",
        "factoryOtherMobile",
        "factoryOtherNumber",
        "factoryOtherEmail",
        "factoryOtherEmailList",
        "factoryAddress",
        "factoryCity",
        "factoryCityName",
        "factoryProvince",
        "factoryCountry",
        "factoryContinent",
        "factoryPostCode",
        "factoryProductLines",
        "factoryProductLinesList",
        "departureCity",
        "arrivalTime",
        "factoryAIOffice",
        "nbOfWorkers",
        "comments",
        "coordinationRemark",
        "isMutiLocation",
        "id",
        "factoryCityId",
        "coordinatesLatitude",
        "coordinatesLongitude",
        "seq"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OrderExtraBean": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-apifox-orders": []
          },
          "x-apifox-orders": [],
          "properties": {},
          "x-apifox-ignore-properties": []
        },
        "orderId": {
          "type": "string"
        },
        "isReInspection": {
          "type": "string"
        },
        "isReInspectionBoolean": {
          "type": "boolean"
        },
        "originalNbReinsp": {
          "type": "string"
        },
        "reInspectionInstruction": {
          "type": "string"
        },
        "prevOrderType": {
          "type": "string"
        },
        "prevOrderStatus": {
          "type": "string"
        },
        "prevServiceDate": {
          "type": "string",
          "format": "date-time"
        },
        "prevServiceDateText": {
          "type": "string"
        },
        "isSplitFrom": {
          "type": "string"
        },
        "originalNbSplit": {
          "type": "string"
        },
        "isSplitTo": {
          "type": "string"
        },
        "newNbSplit": {
          "type": "string"
        },
        "freezeDate": {
          "type": "string"
        },
        "lastFreezeTime": {
          "type": "string",
          "format": "date-time"
        },
        "postpone4PM": {
          "type": "string"
        },
        "cfmbySupplier": {
          "type": "string"
        },
        "cfmbyPhone": {
          "type": "string"
        },
        "isNewFirst": {
          "type": "string"
        },
        "isInspDedicated": {
          "type": "string"
        },
        "aiCancelsonReason": {
          "type": "string"
        },
        "sampleSizeTotal": {
          "type": "integer",
          "format": "int32"
        },
        "isAskMoreInfo": {
          "type": "string"
        },
        "originalSIC": {
          "type": "string"
        },
        "approveReferences": {
          "type": "string"
        },
        "askNumberOfReferences": {
          "type": "string"
        },
        "cancelledBy": {
          "type": "string"
        },
        "cancellationDate": {
          "type": "string",
          "format": "date-time"
        },
        "rfqNumber": {
          "type": "string"
        },
        "irpAction": {
          "type": "string"
        },
        "nameOfPhoneConfirm": {
          "type": "string"
        },
        "phoneNumberForConfirm": {
          "type": "string"
        },
        "shippedSign": {
          "type": "string"
        },
        "inspDateConfirmedBy": {
          "type": "string"
        },
        "nbOfUpdateInspDate": {
          "type": "integer",
          "format": "int32"
        },
        "irpStatusDescription": {
          "type": "string"
        },
        "shippedSignDate": {
          "type": "string",
          "format": "date-time"
        },
        "autoCancelOrderFlag": {
          "type": "string"
        },
        "irpStatus": {
          "type": "string"
        },
        "containReadyTime": {
          "type": "string",
          "format": "date-time"
        },
        "isQuickBooking": {
          "type": "string"
        },
        "orderFrom": {
          "type": "string",
          "enum": [
            "ACA",
            "NEW_ACA",
            "MOBILE_IOS",
            "MOBILE_ANDROID",
            "MOBILE_BROWSER",
            "OLD_CLIENT_SITE",
            "WECHAT_MINIAPP",
            "CIA",
            "MGB_SCHEDULED_JOB",
            "TSC_SCHEDULED_JOB",
            "WOW_SCHEDULED_JOB",
            "BIGLOTS_SCHEDULED_JOB",
            "GUESS_SCHEDULED_JOB",
            "GAP_SCHEDULED_JOB",
            "NETSUITE",
            "IGOPOST",
            "UNISSENSE",
            "SOURCICY",
            "CAPRICE",
            "MRPRICE",
            "PLIGHT",
            "BESTLESS",
            "LIBERTY",
            "VPC",
            "RAG",
            "FIVEXFIVE",
            "BIOALTERNATIVES",
            "BAMBOOROSE",
            "PERCH",
            "LI_FUNG",
            "KAPIMEX",
            "JANSY",
            "LVMH",
            "SBE",
            "QIMAONE",
            "GREY_LABEL",
            "NA"
          ]
        },
        "nbOfInspectors": {
          "type": "integer",
          "format": "int32"
        },
        "ipSendStatus": {
          "type": "integer",
          "format": "int32"
        },
        "isMultiSupplierOrder": {
          "type": "string"
        },
        "customizedDefectType": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        },
        "isFollowUp": {
          "type": "string"
        },
        "peoProductCategory": {
          "type": "string"
        },
        "performedInQimaone": {
          "type": "integer",
          "format": "int32"
        },
        "peoAskForImportCode": {
          "type": "string"
        },
        "peoAskForImportVersion": {
          "type": "string"
        },
        "hasPeoDocument": {
          "type": "integer",
          "format": "int32"
        },
        "sampleReviewExpectedLocation": {
          "type": "string"
        },
        "sampleReviewOffice": {
          "type": "string"
        },
        "sampleReviewMethod": {
          "type": "string"
        },
        "sampleReviewCourier": {
          "type": "string"
        },
        "sampleReviewTrackingNumber": {
          "type": "string"
        },
        "sampleReviewClientComments": {
          "type": "string"
        },
        "sampleReviewActionAfterReview": {
          "type": "string"
        },
        "supervisorId": {
          "type": "string"
        },
        "qcoreOrderFlag": {
          "type": "string"
        },
        "qcoreOrderId": {
          "type": "string"
        },
        "isUseCap": {
          "type": "string"
        },
        "isNewSupplier": {
          "type": "string"
        },
        "autoSendAskForImport": {
          "type": "boolean"
        },
        "isFollowUpBoolean": {
          "type": "boolean"
        }
      },
      "x-apifox-orders": [
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "accessTime",
        "params",
        "orderId",
        "isReInspection",
        "isReInspectionBoolean",
        "originalNbReinsp",
        "reInspectionInstruction",
        "prevOrderType",
        "prevOrderStatus",
        "prevServiceDate",
        "prevServiceDateText",
        "isSplitFrom",
        "originalNbSplit",
        "isSplitTo",
        "newNbSplit",
        "freezeDate",
        "lastFreezeTime",
        "postpone4PM",
        "cfmbySupplier",
        "cfmbyPhone",
        "isNewFirst",
        "isInspDedicated",
        "aiCancelsonReason",
        "sampleSizeTotal",
        "isAskMoreInfo",
        "originalSIC",
        "approveReferences",
        "askNumberOfReferences",
        "cancelledBy",
        "cancellationDate",
        "rfqNumber",
        "irpAction",
        "nameOfPhoneConfirm",
        "phoneNumberForConfirm",
        "shippedSign",
        "inspDateConfirmedBy",
        "nbOfUpdateInspDate",
        "irpStatusDescription",
        "shippedSignDate",
        "autoCancelOrderFlag",
        "irpStatus",
        "containReadyTime",
        "isQuickBooking",
        "orderFrom",
        "nbOfInspectors",
        "ipSendStatus",
        "isMultiSupplierOrder",
        "customizedDefectType",
        "templateId",
        "isFollowUp",
        "peoProductCategory",
        "performedInQimaone",
        "peoAskForImportCode",
        "peoAskForImportVersion",
        "hasPeoDocument",
        "sampleReviewExpectedLocation",
        "sampleReviewOffice",
        "sampleReviewMethod",
        "sampleReviewCourier",
        "sampleReviewTrackingNumber",
        "sampleReviewClientComments",
        "sampleReviewActionAfterReview",
        "supervisorId",
        "qcoreOrderFlag",
        "qcoreOrderId",
        "isUseCap",
        "isNewSupplier",
        "autoSendAskForImport",
        "isFollowUpBoolean"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "OrderGeneralInfoBean": {
      "type": "object",
      "properties": {
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time"
        },
        "createBy": {
          "type": "string"
        },
        "updateBy": {
          "type": "string"
        },
        "accessTime": {
          "type": "string",
          "format": "date-time"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-apifox-orders": []
          },
          "x-apifox-orders": [],
          "properties": {},
          "x-apifox-ignore-properties": []
        },
        "orderId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "orderNumber": {
          "type": "string"
        },
        "clientRefNb": {
          "type": "string"
        },
        "orderPlacer": {
          "type": "string"
        },
        "bookingDate": {
          "type": "string",
          "format": "date-time"
        },
        "expectedInspDate": {
          "type": "string",
          "format": "date-time"
        },
        "actualInspDate": {
          "type": "string",
          "format": "date-time"
        },
        "isToSkip": {
          "type": "string"
        },
        "expectedShipDate": {
          "type": "string",
          "format": "date-time"
        },
        "serviceType": {
          "type": "string"
        },
        "prodCategoryAI": {
          "type": "string"
        },
        "prodFamilyAI": {
          "type": "string"
        },
        "prodCategoryClient": {
          "type": "string"
        },
        "prodFamilyClient": {
          "type": "string"
        },
        "tools": {
          "type": "string"
        },
        "projectLeader": {
          "type": "string"
        },
        "protoSupervisor": {
          "type": "string"
        },
        "protoSupervisor2": {
          "type": "string"
        },
        "reportApprover": {
          "type": "string"
        },
        "dedicatedInspector": {
          "type": "string"
        },
        "bookFromPreOrder": {
          "type": "string"
        },
        "inspectionRating": {
          "type": "string"
        },
        "ratingComments": {
          "type": "string"
        },
        "copyAllMailTo": {
          "type": "string"
        },
        "copyReportMailTo": {
          "type": "string"
        },
        "container20": {
          "type": "integer",
          "format": "int32"
        },
        "container40": {
          "type": "integer",
          "format": "int32"
        },
        "container40HQ": {
          "type": "integer",
          "format": "int32"
        },
        "calledInspector": {
          "type": "string"
        },
        "insepctorCalledBy": {
          "type": "string"
        },
        "insepctorCallResult": {
          "type": "string"
        },
        "insepctorCallComments": {
          "type": "string"
        },
        "calledFactory": {
          "type": "string"
        },
        "factoryCalledBy": {
          "type": "string"
        },
        "factoryCallResult": {
          "type": "string"
        },
        "factoryCallComments": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "parentCompanyId": {
          "type": "string"
        },
        "allInspectors": {
          "type": "string"
        },
        "allowChangeInspectionDate": {
          "type": "string"
        },
        "allowChangeInspectionDateBoolean": {
          "type": "boolean"
        },
        "supplierValidateCode": {
          "type": "string"
        },
        "subServiceTypeName": {
          "type": "string"
        },
        "businessUnit": {
          "type": "string"
        },
        "businessUnitText": {
          "type": "string"
        },
        "finishedOrdersByCompanyCount": {
          "type": "integer",
          "format": "int32"
        },
        "startingTime": {
          "type": "string",
          "format": "date-time"
        },
        "reportDueDate": {
          "type": "string",
          "format": "date-time"
        },
        "inspectionMethod": {
          "$ref": "#/definitions/ConstantMappingBean"
        },
        "affiliateId": {
          "type": "string"
        },
        "projectManagerEmail": {
          "type": "string"
        },
        "accountManagerEmail": {
          "type": "string"
        },
        "isBlocked": {
          "type": "string"
        },
        "lcnumber": {
          "type": "string"
        },
        "sic": {
          "type": "string"
        },
        "icneeded": {
          "type": "string"
        },
        "lcappName": {
          "type": "string"
        },
        "lcappAddress": {
          "type": "string"
        },
        "lcbeneName": {
          "type": "string"
        },
        "lcbeneAddress": {
          "type": "string"
        },
        "sicid": {
          "type": "string"
        },
        "itlmanager": {
          "type": "string"
        }
      },
      "x-apifox-orders": [
        "createTime",
        "updateTime",
        "createBy",
        "updateBy",
        "accessTime",
        "params",
        "orderId",
        "status",
        "orderNumber",
        "clientRefNb",
        "orderPlacer",
        "bookingDate",
        "expectedInspDate",
        "actualInspDate",
        "isToSkip",
        "expectedShipDate",
        "serviceType",
        "prodCategoryAI",
        "prodFamilyAI",
        "prodCategoryClient",
        "prodFamilyClient",
        "tools",
        "projectLeader",
        "protoSupervisor",
        "protoSupervisor2",
        "reportApprover",
        "dedicatedInspector",
        "bookFromPreOrder",
        "inspectionRating",
        "ratingComments",
        "copyAllMailTo",
        "copyReportMailTo",
        "container20",
        "container40",
        "container40HQ",
        "calledInspector",
        "insepctorCalledBy",
        "insepctorCallResult",
        "insepctorCallComments",
        "calledFactory",
        "factoryCalledBy",
        "factoryCallResult",
        "factoryCallComments",
        "companyId",
        "userId",
        "parentCompanyId",
        "allInspectors",
        "allowChangeInspectionDate",
        "allowChangeInspectionDateBoolean",
        "supplierValidateCode",
        "subServiceTypeName",
        "businessUnit",
        "businessUnitText",
        "finishedOrdersByCompanyCount",
        "startingTime",
        "reportDueDate",
        "inspectionMethod",
        "affiliateId",
        "projectManagerEmail",
        "accountManagerEmail",
        "isBlocked",
        "lcnumber",
        "sic",
        "icneeded",
        "lcappName",
        "lcappAddress",
        "lcbeneName",
        "lcbeneAddress",
        "sicid",
        "itlmanager"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "ApiFileMetaBean": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "File id",
          "readOnly": true
        },
        "srcId": {
          "type": "string",
          "description": "Source id, related resource it",
          "readOnly": true
        },
        "fileType": {
          "type": "string",
          "description": "File type in QIMA, describe the file is used for what purpose",
          "readOnly": true
        },
        "fileName": {
          "type": "string",
          "description": "File name",
          "readOnly": true
        },
        "comments": {
          "type": "string",
          "description": "Comments saved by uploader",
          "readOnly": true
        },
        "objectKey": {
          "type": "string",
          "description": "File path on S3",
          "readOnly": true
        },
        "fileSize": {
          "type": "integer",
          "format": "int64",
          "description": "File size in bytes",
          "readOnly": true
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "Version of the file, starts from 1",
          "readOnly": true
        },
        "s3Url": {
          "type": "string",
          "description": "Temporary url of the file on S3",
          "readOnly": true
        },
        "createDate": {
          "type": "string",
          "description": "File creation time in unix timestamp",
          "readOnly": true
        },
        "updateDate": {
          "type": "string",
          "description": "File update time in unix timestamp",
          "readOnly": true
        }
      },
      "x-apifox-orders": [
        "id",
        "srcId",
        "fileType",
        "fileName",
        "comments",
        "objectKey",
        "fileSize",
        "version",
        "s3Url",
        "createDate",
        "updateDate"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "TokenSession": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Session id",
          "readOnly": true
        },
        "userId": {
          "type": "string",
          "description": "QIMA client id or employee id",
          "readOnly": true
        },
        "userType": {
          "type": "string",
          "description": "QIMA user type",
          "readOnly": true,
          "example": [
            "client"
          ]
        },
        "token": {
          "type": "string",
          "description": "Token body",
          "readOnly": true,
          "example": [
            "client"
          ]
        },
        "validBefore": {
          "type": "string",
          "description": "Unix timestamp that the token is valid",
          "readOnly": true
        },
        "refreshKey": {
          "type": "string",
          "description": "Key to refresh a token, will extend the token another 24 hours",
          "readOnly": true
        }
      },
      "x-apifox-orders": [
        "id",
        "userId",
        "userType",
        "token",
        "validBefore",
        "refreshKey"
      ],
      "x-apifox-ignore-properties": [],
      "x-apifox-folder": "Schemas"
    },
    "EricssonCommonFindingBean" : {
      "type" : "object",
      "properties" : {
        "checkpointSection" : {
          "type" : "string"
        },
        "checkpointSubSection" : {
          "type" : "string"
        },
        "commonFindingName" : {
          "type" : "string"
        },
        "commonFindingCategory" : {
          "type" : "string"
        },
        "checkpointResult" : {
          "type" : "string"
        }
      }
    },
    "EricssonReportBean" : {
      "type" : "object",
      "properties" : {
        "orderId" : {
          "type" : "string"
        },
        "orderNumber" : {
          "type" : "string"
        },
        "orderPlacer" : {
          "type" : "string"
        },
        "orderStatus" : {
          "type" : "string"
        },
        "serviceType" : {
          "type" : "string"
        },
        "auditType" : {
          "type" : "string"
        },
        "auditStatus" : {
          "type" : "string"
        },
        "previousOrderNumber" : {
          "type" : "string"
        },
        "manday" : {
          "type" : "string"
        },
        "bookingDate" : {
          "type" : "string"
        },
        "auditDate" : {
          "type" : "string"
        },
        "clientName" : {
          "type" : "string"
        },
        "clientRef" : {
          "type" : "string"
        },
        "factoryCode" : {
          "type" : "string"
        },
        "factoryName" : {
          "type" : "string"
        },
        "factoryAddress" : {
          "type" : "string"
        },
        "factoryCity" : {
          "type" : "string"
        },
        "factoryProvince" : {
          "type" : "string"
        },
        "factoryCountry" : {
          "type" : "string"
        },
        "supplierCode" : {
          "type" : "string"
        },
        "supplierName" : {
          "type" : "string"
        },
        "supplierAddress" : {
          "type" : "string"
        },
        "supplierCity" : {
          "type" : "string"
        },
        "supplierProvince" : {
          "type" : "string"
        },
        "supplierCountry" : {
          "type" : "string"
        },
        "overallScore" : {
          "type" : "string"
        },
        "riskIndicator" : {
          "type" : "string"
        },
        "commonFindings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/EricssonCommonFindingBean"
          }
        },
        "customizedFields" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CustomizedFieldsDTO"
          }
        }
      }
    },
    "CustomizedFieldsDTO" : {
      "type" : "object",
      "properties" : {
        "sequence" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fieldKey" : {
          "type" : "string"
        },
        "fieldValue" : {
          "type" : "string"
        }
      }
    },
    "AsyncBookingResultDTO" : {
      "type" : "object",
      "properties" : {
        "requestId" : {
          "type" : "string",
          "description" : "Request id of the async booking"
        },
        "orderNumber" : {
          "type" : "string",
          "description" : "Order number of the async booking inspection"
        },
        "orderId" : {
          "type" : "string",
          "description" : "Order id of the async booking inspection"
        },
        "status" : {
          "type" : "string",
          "example" : "PENDING, FAILED, SUCCEED",
          "description" : "Status of the async booking inspection"
        },
        "clientRefNumber" : {
          "type" : "string",
          "description" : "Reference number"
        },
        "comments" : {
          "type" : "string",
          "description" : "Async booking comments"
        },
        "companyId" : {
          "type" : "string",
          "description" : "Async booking company id"
        },
        "userId" : {
          "type" : "string",
          "description" : "Async booking user id"
        },
        "bookingInfo" : {
          "type" : "string",
          "description" : "Async booking json"
        },
        "orderInfo" : {
          "type" : "string",
          "description" : "Async booking order json"
        },
        "insertTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Async booking insert time"
        },
        "updateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Async booking update time"
        }
      }
    }
  },
  "x-components": {}
}